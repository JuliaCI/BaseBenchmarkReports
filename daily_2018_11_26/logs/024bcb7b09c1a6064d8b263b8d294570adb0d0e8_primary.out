cset: moving following pidspec: 24841
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254581788 seconds)
loading group "string"... done (took 0.556729511 seconds)
loading group "linalg"... done (took 7.717801997 seconds)
loading group "parallel"... done (took 0.174726763 seconds)
loading group "find"... done (took 1.183592874 seconds)
loading group "tuple"... done (took 1.859681777 seconds)
loading group "dates"... done (took 1.271171953 seconds)
loading group "micro"... done (took 0.235812703 seconds)
loading group "io"... done (took 0.770294378 seconds)
loading group "scalar"... done (took 41.093306866 seconds)
loading group "sparse"... done (took 12.917337449 seconds)
loading group "broadcast"... done (took 1.150749261 seconds)
loading group "union"... done (took 13.448918987 seconds)
loading group "simd"... done (took 4.780401524 seconds)
loading group "random"... done (took 9.698312668 seconds)
loading group "problem"... done (took 2.156444746 seconds)
loading group "array"... done (took 22.674414184 seconds)
loading group "misc"... done (took 2.116356694 seconds)
loading group "sort"... done (took 3.464949907 seconds)
loading group "collection"... done (took 19.565963507 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580301418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142493481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150298312 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146793253 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190865528 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157045155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158503905 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097633933 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.985657251 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175202848 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151807999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522201804 seconds)
done (took 5.254545673 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220056621 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094933275 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10414125 seconds)
  done (took 0.93409469 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07643062 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145593915 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094781407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077690621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095207668 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077373365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094675429 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078882982 seconds)
  done (took 1.406628717 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086664083 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098541771 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081841398 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096775178 seconds)
  done (took 1.10637604 seconds)
done (took 4.492651082 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738217051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274779887 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202831089 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463504155 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195752663 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216377201 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.697063539 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356678006 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255914459 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099674151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143338552 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38579421 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13837704 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.778682402 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09103223 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124478473 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179169808 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46912181 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083683047 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109792217 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116949819 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141878102 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131854279 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09342864 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186345744 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081622062 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194845759 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108583424 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079878397 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288450302 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20121921 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693465979 seconds)
  done (took 11.103115521 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110049757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133640513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09870718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137986187 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134550553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099760891 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083348146 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096587149 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121270953 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177572696 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112471113 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136110032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095823363 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081424324 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116000863 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24563123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122488227 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103487236 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10127181 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103814306 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121424269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113483193 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108431165 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091414654 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167018271 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224933941 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11197231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126629285 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099060958 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111870346 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144408963 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143362426 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096678334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079239302 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172029398 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124769057 seconds)
  done (took 5.202845123 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.082175894 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190188211 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121659192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170456779 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080158456 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142487603 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095025064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114316639 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257850254 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172726965 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176166501 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143412857 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100296676 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09749231 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082127996 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097719415 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.637582145 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156722265 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134492 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096164303 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105265499 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099279557 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365484973 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086779633 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095800476 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08179892 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086044585 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155390431 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16045262 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080596678 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.166857054 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100685085 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102430325 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132716085 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199696329 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12747785 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078784131 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134852136 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078276769 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098515389 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175447614 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10363994 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079803141 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120649965 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133367122 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11666887 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099337441 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097146418 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20503154 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095538828 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097753469 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.935676251 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182461109 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104093841 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096218055 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324746632 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098915691 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102257951 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077169163 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273742409 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189420846 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099317173 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079246477 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096878649 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080022516 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400668995 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080902314 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.699573952 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084199604 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10788294 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08213147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097306548 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103443759 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087324266 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116666236 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078941118 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099261387 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078632019 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096934985 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080962371 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094560383 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106832168 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087072303 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097455283 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148431002 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095708945 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09807533 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128230672 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100572758 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078390015 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131078967 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100602484 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079961151 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133720394 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098099923 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090693818 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10026935 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143654943 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097070787 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.132446671 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080084208 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124573775 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09890892 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078125254 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12966066 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1122746 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081606446 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101959794 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077688922 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095232963 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148339232 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096068071 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079707585 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100215028 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108113568 seconds)
  done (took 22.513924684 seconds)
done (took 40.642920871 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317981879 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104273932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1053176 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104257723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100999835 seconds)
  done (took 1.547168878 seconds)
done (took 2.333728793 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291782496 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172935587 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096995653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167728918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09355777 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173994607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160871909 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112474121 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201055253 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095957858 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164207829 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094723451 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076788886 seconds)
  done (took 2.717631098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095512572 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115900303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081898527 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11197629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076232568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112326852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091108458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117820175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110517856 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087681903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094489336 seconds)
  done (took 1.882367852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094405565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11370592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082565583 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110745042 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07641324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112015023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092159565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117080383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11046396 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085396477 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094187774 seconds)
  done (took 1.873573092 seconds)
done (took 7.2518029 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091218155 seconds)
  done (took 0.871717564 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.940272096 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.053588769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11304262 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150476068 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299367866 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193969634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483564781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125828582 seconds)
  done (took 11.34595485 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.113369911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114770179 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10318733 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08427562 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105361543 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085057227 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102749927 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099178992 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082765646 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103404925 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085215873 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101386821 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102521238 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085519707 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103047557 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082129844 seconds)
  done (took 2.398125941 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118586719 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11717156 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109319775 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109418713 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086003234 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107674754 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107556 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087574008 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104507557 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105378482 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090125656 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10741756 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104247744 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078910243 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106900242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10785173 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086116507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108036297 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106408342 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090395182 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107968429 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096174148 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086122013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107440151 seconds)
  done (took 3.33157818 seconds)
done (took 18.732387334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161867627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108588259 seconds)
  done (took 1.058645112 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096212087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114121858 seconds)
  done (took 1.001428383 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098212696 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097661745 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123127731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110385067 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08037046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097574507 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12058946 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079529519 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098556734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079131859 seconds)
  done (took 1.779586299 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082721903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110100744 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101853528 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095665125 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106720491 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095127035 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087339525 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100796283 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109448012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077033398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10431491 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114184689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086034037 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117223344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104956995 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082600191 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104203487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100899282 seconds)
  done (took 2.57700786 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080649096 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097066878 seconds)
  done (took 0.975064267 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081864675 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095346592 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080599439 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098904269 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094858641 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077287734 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095266822 seconds)
  done (took 1.420965885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493396443 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136192099 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262356529 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10195087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121101737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302481464 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099841033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083526258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105087647 seconds)
  done (took 2.54344912 seconds)
done (took 12.148913586 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094211563 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118348878 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112289898 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470367355 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107629931 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099986917 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147724233 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254177896 seconds)
done (took 2.210110078 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146125658 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326927916 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11748582 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067264277 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099814726 seconds)
  done (took 1.416876907 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08092661 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100090879 seconds)
  done (took 0.984876029 seconds)
done (took 3.358459049 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08169418 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130651194 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079007263 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097730686 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076432819 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100950142 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076320112 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098080272 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078836541 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098939292 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095946479 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08145006 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097676606 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078841013 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095043564 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080689556 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095233641 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077916092 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097361004 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080616757 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095149503 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079788781 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095789791 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077611069 seconds)
  done (took 2.986716384 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100607996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099114279 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102978067 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085720446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102544137 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086423696 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103770151 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098058661 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08507444 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100383726 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100999684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08487474 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100656587 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083503464 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1009038 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101122527 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086120391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098022689 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082277976 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102401809 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103086615 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08017388 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102458296 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102162492 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08436172 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101546679 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082287591 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099940952 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103543348 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083890653 seconds)
  done (took 3.657361453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085815472 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094820703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079152101 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102261891 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077294396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09758292 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077126276 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096510993 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078940591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096253409 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079236913 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096669182 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077088812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097815628 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077818547 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100905007 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108312086 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078995067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095579326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079002433 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099560398 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077935684 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096785033 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07823299 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096424744 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078523369 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096290271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077458591 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097882713 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077508744 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100602822 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080843191 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097318967 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083955332 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101157877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077266975 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100691716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077353567 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098126177 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09550199 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078645929 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094931438 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078723791 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102217518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078448362 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097479522 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078125379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097673927 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078403755 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099697872 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077348289 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096776235 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079265636 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097245716 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081989019 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096266883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094983204 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078257218 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096104572 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078472663 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09530339 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07885689 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098146643 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078660172 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111593234 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084716752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0961293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07949356 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097688423 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079663349 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098159004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109059375 seconds)
  done (took 7.247682731 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084166278 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107309466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080032548 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099447778 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075500968 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097348692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099195938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07929151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098843527 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085183983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097935002 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079950355 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099073637 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109137062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08038746 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097973103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08522887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095114292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078598517 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100831685 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077903788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101093665 seconds)
  done (took 2.822064394 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210758262 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10627029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142784853 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107080127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082780117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107404209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102431654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088307157 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103410342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082212594 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101519111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102651272 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082461115 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102554632 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100475089 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086666606 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103629682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083888664 seconds)
  done (took 2.713607343 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093898679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099778533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101502706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100270264 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099952378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083869595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105027181 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108038919 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083905462 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099123825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089676373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102796227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101233406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081697009 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102055795 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080400324 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101920543 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080549509 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109511571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105078598 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103695217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091515498 seconds)
  done (took 2.943945912 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096614545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101276896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118429569 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084846294 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096159773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079984543 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106386954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080126848 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109379119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100500783 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081299535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097993692 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086703721 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099843413 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10410733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081246359 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101602921 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081242696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102012915 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075855986 seconds)
  done (took 2.707827786 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102426429 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.211488327 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099801858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091462365 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10157263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082182558 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110219433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101281482 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08162676 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12747609 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10139648 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082094409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112139701 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107751007 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100030653 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092724839 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110535613 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110233347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082157014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10211586 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127225598 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082084978 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110249014 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101093742 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082725095 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102220405 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100829377 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088283402 seconds)
  done (took 3.729432877 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082104248 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09974222 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079354266 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096343513 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07917066 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097247281 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07861301 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096150642 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0812987 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096133615 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080943038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099912398 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084010075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099631225 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080941679 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099993109 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081258439 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09706858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077956132 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097610604 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080428761 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100183729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080350346 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098061447 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077838075 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099868424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077485182 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098276313 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080362115 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09770225 seconds)
  done (took 3.502472144 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091546208 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108023828 seconds)
  done (took 1.024596352 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080286557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115998339 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077870474 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104373501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085025936 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101758933 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107810154 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085481192 seconds)
  done (took 1.584153007 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096658577 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110768524 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082927143 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112927541 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109831445 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097021227 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170342283 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102410235 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086131525 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099051612 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113153395 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081341185 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106352526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081570284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106334313 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087296768 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098686594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104480083 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08501636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098895416 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083345267 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109763065 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082520079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097816071 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102193525 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090684158 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112938884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082075503 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104541799 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107741095 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087358817 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094196071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081216678 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101372538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078666139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110489916 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116725742 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084640616 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110686035 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08158044 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112770348 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096214213 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085370687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107295569 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110028951 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082693564 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102066814 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076449107 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098860679 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083561043 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096177515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080992039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095857023 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088138593 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104008507 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111373364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080220469 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102287198 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084985775 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104647314 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086548333 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102799971 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102506745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082443234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107402939 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085530477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111178256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094240313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077246655 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097747331 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094546024 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123460187 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087248326 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10280736 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101179019 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079913892 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104208111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08280692 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107104514 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105782113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082527363 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107144919 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088871882 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101705081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08296008 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109512644 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099000242 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083771715 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099461051 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117576141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080800884 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098263638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079052683 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112425878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084294455 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100712344 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079343311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108491553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093730536 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084016462 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101961917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08164569 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112253029 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105570627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087709556 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109743944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087211023 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102023005 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10279024 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078922449 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102304025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083936941 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108353499 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075102859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104070523 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082076787 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1022581 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108917789 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080565634 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101684424 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089081481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107734339 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080165936 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09831283 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103026872 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082821955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104204173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089674288 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099615293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076236275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097828498 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102987399 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082868075 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104505616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087003566 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105438295 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075122231 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09958432 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104263588 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09176785 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101771933 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082395401 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108641299 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102076355 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081988811 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107267847 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084304876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100510092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087111521 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102810469 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075995248 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106253735 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103303512 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080811385 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104485202 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085391065 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104105626 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081148606 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100997818 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106205252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083442178 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100326024 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081632448 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101134955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111030282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085369389 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095455185 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079615597 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109413155 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078695414 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101626846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080413864 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103618402 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10156704 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080942416 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100119881 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084601736 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113045646 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104571496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084181301 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10650703 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093545209 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101407626 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083419286 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102505181 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101562683 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083392812 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110293723 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086770637 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107539881 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103044955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079743608 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106885994 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089629005 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101072317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079751004 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100730209 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085000646 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108691996 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104693042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083621377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099829637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0824924 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106090168 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103422273 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082661464 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099907539 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086722529 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100981281 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088443143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103765522 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111681584 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085082507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097124903 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084761871 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099957978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10681139 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07820647 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098446764 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082089888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102489117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08131726 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104414097 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075734001 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109508361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107965176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083669315 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100724925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083774822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10764156 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082837213 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106564984 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085213053 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108163225 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111962823 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081349022 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105467471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092242961 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103318329 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07585836 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108938016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100009653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081462031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10056401 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08000905 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105455064 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109262702 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091039223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095216678 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084918977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100997325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081170873 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097551954 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086280811 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105724938 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102003519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090220698 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103140906 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082733572 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1064277 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08127193 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103698624 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103680576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086845058 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102863801 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084865027 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101919814 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085409607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102520539 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081291313 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104663919 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101019574 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083253606 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10773015 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082126636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102048024 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084768192 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104065115 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081700362 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103585106 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100286937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086465525 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102422155 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082985219 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104505097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077231773 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109818165 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081364991 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110539153 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10117282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080211615 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106489338 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084917157 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107490649 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101637333 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083970485 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102861388 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082462106 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10486278 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088418464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100575651 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112013253 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091911572 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102658498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085099953 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103187187 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083492113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101583427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082772954 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104593274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101842527 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082730183 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106953865 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084977842 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10297446 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083975551 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104192459 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081965513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10460142 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096030862 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082377358 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101542972 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083381353 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113550142 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082742727 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106297208 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101134123 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084946885 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101321882 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07991714 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110385896 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110661822 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083601483 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109587783 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080657803 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104538338 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111904939 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077102442 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09941764 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081066684 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100524312 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09027836 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103849718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090492586 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102170919 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080958717 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100005248 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102146383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081535068 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097008692 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080742087 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105935922 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08427366 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101952016 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081996641 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106550841 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102362955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101890128 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101986564 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083776012 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103106404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07870332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10189131 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081070877 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106601604 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103309566 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081151381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099290288 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083319819 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102970858 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083355143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10346807 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083973695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110509692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100648961 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086286438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10620299 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077257379 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105805875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082318621 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103498675 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081475994 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107393002 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105815339 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084452674 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112162851 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081655239 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10370669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101174962 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082176146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101865008 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082430814 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103124752 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081673017 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104321201 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090278182 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101525064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104929594 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083849491 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102170982 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089860966 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104260284 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085156291 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111658722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105252336 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084542869 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110823702 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085754163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107164044 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102806157 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085102946 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108359595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081363514 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109590961 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08195196 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104316805 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083753542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10146956 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101900991 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08316031 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101187376 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088601616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104489285 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081344283 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10360234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079503392 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104071123 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106676674 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091559711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105379917 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086171487 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099204505 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080000437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105375646 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079985224 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105909237 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106193037 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08905393 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10530692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083408596 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102323063 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090781623 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109601664 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106269366 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080615884 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107657766 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083815969 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106011169 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083072819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103877291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103455045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087674916 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104125996 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081686773 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110953119 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085617589 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105415824 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10353329 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084777871 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102197128 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078196714 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104014369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084405632 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108542075 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084366857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103688698 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113447461 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083201529 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102906694 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086488352 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10287287 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086523784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099973846 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102835304 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085141255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103714503 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078396292 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10295092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08036715 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106796882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081145855 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099208253 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112527972 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092611658 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107058343 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081911881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101992516 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077260611 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099303796 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080980518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105658333 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104302115 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093311289 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102394309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081114238 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099429427 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082316927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107311273 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105560941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081274554 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098172694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082554235 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10621205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088688021 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102439374 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082219306 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108082675 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10362909 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081957142 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106535055 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080168818 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106870227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095420867 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104811055 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103213725 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089742555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112154305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083099131 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099435208 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083091219 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107327435 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102655616 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085155345 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104434291 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098061469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107314568 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101890992 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082357727 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106861692 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081973207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112087968 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083892005 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105070144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107287763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085114802 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11254438 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084786359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112296791 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105478437 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086237422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102887685 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082994101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101313838 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080616258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105432498 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083121565 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10937512 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111830642 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082268645 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115022866 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113034065 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087958114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09994313 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082225904 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103352818 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079173086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106110455 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080527913 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102430818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081101024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103140055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103682436 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089949254 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10509448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08393803 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103840022 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07658549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108130688 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084881799 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105486607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079241496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104605867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104221442 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08813729 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108925028 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083443211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105760568 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084685005 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105633673 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078419421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111043858 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101505375 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0861038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102411055 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083902629 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104882643 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086209546 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109677302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104439472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085992979 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116604486 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085594325 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101372599 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079212415 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109882241 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100527021 seconds)
  done (took 57.936363778 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147915999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080229638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099101378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079060176 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113674265 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099725403 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079167134 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099942576 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08058991 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10258747 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078877134 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10047476 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108751592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125486403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092984461 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104795289 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077369604 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101270096 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099004461 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080907838 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109275188 seconds)
  done (took 2.934944876 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104672898 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118194873 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115440255 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119469422 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089576105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11608003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114685355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114875377 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098381238 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111653911 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119519228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114919538 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0905128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11224915 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111239361 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091886236 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119144808 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110564442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116837384 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094850633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11386066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114826792 seconds)
  done (took 3.28668747 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084446727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102775083 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085302078 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097823841 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083026712 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098703556 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086529165 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101366233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085210281 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102965364 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080674122 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103460873 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104439917 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078734622 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103631679 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080830841 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151565867 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108443282 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082044971 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105620418 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077046672 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106586909 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098569517 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079432822 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102571405 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087153792 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105143244 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081819624 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104169809 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081489438 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10473335 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079959927 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105616156 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103736673 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082819922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102209159 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083589304 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103562365 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079571128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10206217 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083387765 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099978158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083574757 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106370563 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080860766 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102898077 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083321122 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104215692 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098667182 seconds)
  done (took 5.518788558 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103849751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161632223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086570465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143676102 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122068397 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113319228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08696477 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143691274 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104016783 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081678416 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123431807 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120054632 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104606039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088685767 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112080261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104199525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086094626 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104222825 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10772078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084646882 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109419394 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089438045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120919205 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118672816 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108545814 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08214753 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104872675 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108911113 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097218058 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109906323 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10987267 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089474746 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121676055 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10696973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081743405 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107972088 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12157598 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103972389 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087902175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102052339 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086832148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11043196 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110352286 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101812311 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10602266 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10979235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084705163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102487359 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117674895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087144049 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114705443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120149745 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086792891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106134072 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109908446 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120184909 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085103089 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102828904 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087373699 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117173908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102734099 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087443397 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120433277 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107981005 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112261478 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100179163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110361046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108016373 seconds)
  done (took 8.198632191 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094288318 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113108632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120896791 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121561934 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090942362 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112680663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111831543 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091051764 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112276922 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117484961 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11090494 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13588758 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085666772 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116161132 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111089144 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090707001 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112485262 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111980132 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09095815 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113328131 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112227814 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1198485 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089974801 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121160524 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142436408 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106257386 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089602422 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113196537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120814092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111870515 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124006202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090955797 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112926288 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120860513 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123997236 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09092187 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104825868 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111255263 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091285999 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112298537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106233187 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09983644 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112785891 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107024914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090563733 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112321295 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121582256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125200569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114280178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09602513 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112556464 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12157797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111168594 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091097207 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121140945 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147285288 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121906737 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121849954 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112100092 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09911992 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121764149 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129710564 seconds)
  done (took 7.757114035 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107695189 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115533794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118679816 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100324769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083643101 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109449603 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081709394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.1035017 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114091135 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095242276 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118473702 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109767399 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090933899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118386652 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109472674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112849605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088249825 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110042526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115389865 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108054793 seconds)
  done (took 2.999360547 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094025779 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125529535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083754857 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113211554 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109471906 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090415229 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108516702 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108319768 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085754288 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108813918 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09633868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117918602 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10738684 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090351226 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117882139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112279997 seconds)
  done (took 2.557326663 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096560758 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119058529 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121667464 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083628236 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105308595 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080057876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106942292 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101283869 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08090364 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121738462 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083187675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1125305 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105642635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082580959 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102202938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087431853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102227166 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081713767 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106687961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12029471 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095016741 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105377478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10564007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087800824 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105686151 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089373764 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107892626 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102616626 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083495408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10635623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084648134 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115250552 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101529502 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083968606 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102947482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082658897 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106106992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084567274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109288055 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105328276 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083631967 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105851542 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08412698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107878843 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079904885 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107534153 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101055077 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092173734 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10312686 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08480727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106361849 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085776392 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108320881 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117120401 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088818694 seconds)
  done (took 6.314404162 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099059333 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109722007 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080491403 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104706463 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086729159 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109300445 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108718544 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088369272 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108361203 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083423295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108652661 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088487759 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108699332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087939171 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109591187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079984209 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108325687 seconds)
  done (took 2.67693 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091555828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106541387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092073817 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106555629 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084446983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10995358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079479599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105583622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104271417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086285542 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105674913 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087171903 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104825741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086490232 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106901756 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084827176 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109115511 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103935766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086327552 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101323694 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087456448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105641081 seconds)
  done (took 3.032094811 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118093296 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126575077 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091573585 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232696144 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103609311 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133440506 seconds)
  done (took 1.702949404 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110294615 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121135442 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106696946 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107417892 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117097966 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086199911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108329798 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108571377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117945266 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100981808 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109676373 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118383409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117572975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096702101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116519303 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116000353 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107336358 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087348921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108052418 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128549808 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087643675 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118599862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10898635 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085892524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109232912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118607143 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118392411 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121832276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087673402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117893045 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114210011 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086942905 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119176519 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123114731 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109358503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097822552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109507584 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129724692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115134834 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096523329 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11043841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115330374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097029742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114518842 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11839733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108315165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093290599 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108931063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107422812 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136342111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093455285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118803856 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115601572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118527319 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096126949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157935714 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102233903 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118509699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115682488 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123002374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11843304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094079341 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118435165 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12337999 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116506614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117020199 seconds)
  done (took 8.227346716 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103292355 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127544725 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109082205 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123991899 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096941898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109691149 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108390635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087832195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10981624 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107046128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152958855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088630901 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118930753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118551935 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086037972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10927293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109679862 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118345679 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087656405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13690333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109160322 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117879427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117695161 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097378389 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12373194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115615878 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108627596 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087623056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109839022 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108213638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09414943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109912306 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119245647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085479612 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118458393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110162059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086536526 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115462064 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109360945 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115035522 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097359974 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128821085 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109582063 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107820125 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101634207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109632369 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1089793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086549271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109689634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107265151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102098324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123385345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123249338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118862111 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108421772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087469697 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109298864 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10920378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086758143 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116239146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119443417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086237762 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158129619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088495088 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109872545 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117706566 seconds)
  done (took 8.108244459 seconds)
done (took 156.973650205 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221568134 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229868595 seconds)
  done (took 1.35536168 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097741711 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137740596 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094934395 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170328545 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106481554 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119300524 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138671214 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097545636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10771273 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08511232 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108018856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086248133 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172245493 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084283274 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108233507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107905486 seconds)
  done (took 2.73287954 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200981567 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255977741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101094469 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108036282 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088834704 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111825696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104971061 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091545524 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110372293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085979977 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109023511 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086151172 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107732656 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085486748 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111529673 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086690892 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107848829 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086714765 seconds)
  done (took 2.951673048 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113546055 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150649313 seconds)
  done (took 1.177805898 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117533636 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180154681 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317563874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155389593 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106188823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128470942 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157146008 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13190521 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197112383 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124376878 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12210316 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096489117 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14050121 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116249895 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092992743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119722999 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142240548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092691982 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116120922 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116800212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115933513 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107707156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115435851 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093625241 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181649548 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121113188 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08387241 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108557382 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11613549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094768664 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114267236 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125303982 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097584515 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180459976 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101931605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178490006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097343558 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11294763 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115685919 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091302681 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119498584 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118630284 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104425642 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118624978 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084267706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119540449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107270738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084923295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114890349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096621537 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115481096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114125604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155802354 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119876352 seconds)
  done (took 7.609272478 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794106528 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156731509 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089844588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888563016 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137714709 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102432349 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778192667 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134879287 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234065371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758737406 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134330583 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121881059 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226963565 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236245859 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92726927 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306892095 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673298498 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101374081 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152196198 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152950094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119025065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136949169 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107932524 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450928857 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094538282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111983035 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094829087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122217907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159068716 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126793234 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114799138 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177947471 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245051566 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205636299 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116052621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088722213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111202789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168362979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264879087 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214456487 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180219371 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087103573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11092043 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09990877 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132479083 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109211042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164720466 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172470975 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194554392 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091859204 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121337349 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11984389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098786474 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186511481 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09812479 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3097203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320295888 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11200617 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097612805 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128187578 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261917887 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122470832 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201320067 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139230604 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211190526 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110904087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757610181 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189789883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089573722 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123138468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118074981 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095252745 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121180259 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168475124 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409419062 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123434925 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092438712 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111439104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203898158 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126211416 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111631104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161204882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093528014 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122591742 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125224932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122429362 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170202276 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229776409 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125135428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118899691 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09302584 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126001047 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115722548 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2107045 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219580284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161188015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209231044 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123663292 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164696271 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188989878 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097705537 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193453658 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098127805 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125740506 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122855732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217008222 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145942389 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100942645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116254602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1179831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147746014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105346573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118992853 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168869874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482739942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168848822 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108417054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105286002 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120559174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161259713 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118643686 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262305169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099684696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193003801 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097464177 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110080878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119916659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163864965 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122295901 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09833913 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123463762 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118602994 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234831078 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217547312 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100231604 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24548867 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184729161 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119610593 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172776348 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121213869 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167650643 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119734332 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098525105 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117974248 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77193542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122891119 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098914828 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11656979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187948821 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08957483 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124388837 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12556191 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086853509 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803661507 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127265558 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119901512 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101914495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119179714 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120863984 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097118089 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116077471 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162874669 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231644479 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12220028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096501804 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12522965 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158897672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117421489 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126108058 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125250388 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103908413 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122994817 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115254192 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102350419 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191467864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161897448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220126642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573720842 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113185079 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125034313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227886544 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09015646 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287026123 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119616148 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20293064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187860489 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097821754 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316060562 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187612144 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187345102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106169631 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195848265 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086748713 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11919871 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16504864 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111641078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095039552 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18419465 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103615749 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124619904 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95631183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088535302 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24934586 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087263771 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1918905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095110071 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121970766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28671728 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089915258 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129352656 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164431038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116156933 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125936112 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853344881 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126615619 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12156844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095790147 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221916846 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16230406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119730241 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120024946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121151414 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164042316 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208902962 seconds)
  done (took 44.169919683 seconds)
done (took 60.906049818 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277043212 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215883522 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265998744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169969708 seconds)
  done (took 1.946585409 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172268129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149475366 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120405413 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109576531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151918965 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083336967 seconds)
  done (took 1.726694276 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359047991 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274674194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241186888 seconds)
  done (took 1.817717924 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317011518 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248319299 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474981189 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325088083 seconds)
  done (took 2.405661763 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209009277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133951149 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111956184 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103507587 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199164031 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247067218 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142514878 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204037593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098296204 seconds)
  done (took 2.437694006 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197933332 seconds)
done (took 11.477083396 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.146122888 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.248681726 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.150588793 seconds)
    (4/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.262358748 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.267407388 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13612608 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101090364 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.248462127 seconds)
    (9/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.236832528 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126189838 seconds)
    (11/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.2024078 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097815267 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128410954 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117528644 seconds)
    (15/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.225532927 seconds)
    (16/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231008932 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085832003 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138703549 seconds)
    (19/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097597721 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.223559695 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.228797405 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.192606071 seconds)
    (23/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22986065 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.141241613 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090462275 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.109174766 seconds)
    (27/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120288839 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.222530168 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.17237471 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10147001 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.121158804 seconds)
    (32/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082954334 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108892563 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09361889 seconds)
    (35/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.212903916 seconds)
    (36/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121977201 seconds)
    (37/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.153911129 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.240172152 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091694357 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.118119682 seconds)
    (41/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06496218 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184297652 seconds)
    (43/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085086818 seconds)
    (44/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11754786 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186895373 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09348016 seconds)
    (47/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121129531 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142349885 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086018194 seconds)
    (50/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091605887 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163414207 seconds)
    (52/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092001999 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085582705 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118486882 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091373322 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13414343 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16848681 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096937322 seconds)
    (59/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.196462703 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122837783 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06684216 seconds)
    (62/286) benchmarking ("sort", Float32, true)...
    done (took 0.22813218 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111783222 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088699492 seconds)
    (65/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173649153 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111177936 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153430468 seconds)
    (68/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13908122 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092654349 seconds)
    (70/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.148429995 seconds)
    (71/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143433522 seconds)
    (72/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.130156807 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068610419 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123029195 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110540596 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067649786 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210294695 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146772452 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130139884 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.237839451 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15425255 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066365099 seconds)
    (83/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154517964 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096279938 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150349178 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.109980521 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084246188 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095502789 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119284723 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11089739 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141277207 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15077908 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164076458 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198376525 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098239238 seconds)
    (96/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131724408 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08624831 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117733774 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085188122 seconds)
    (100/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186641464 seconds)
    (101/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115954773 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091714729 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199420862 seconds)
    (104/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199389717 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116872785 seconds)
    (106/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068170238 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101055994 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175089294 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188196712 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.182784752 seconds)
    (111/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123579662 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119903397 seconds)
    (113/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.07501035 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196356679 seconds)
    (115/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171147113 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110253576 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091437573 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091861312 seconds)
    (119/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090945038 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114136383 seconds)
    (121/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090992889 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083147461 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065969064 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110129075 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135298031 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158155237 seconds)
    (127/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.150871382 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.181292438 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117698458 seconds)
    (130/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0953081 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06609663 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121670751 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09210008 seconds)
    (134/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092721779 seconds)
    (135/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066657712 seconds)
    (136/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117544216 seconds)
    (137/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156454643 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.090755204 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137265101 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09311544 seconds)
    (141/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112240153 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094901877 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168661934 seconds)
    (144/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119896469 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172557198 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136581924 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119099832 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066985348 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066194665 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101974016 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067296078 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14049552 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086316112 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111411671 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09270427 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173154489 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163353946 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085280134 seconds)
    (159/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158727638 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.1450073 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095383173 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111324126 seconds)
    (163/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076685862 seconds)
    (164/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076784893 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12261907 seconds)
    (166/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112675143 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 0.150579585 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093006424 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087071341 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 0.230170015 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134824467 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066621346 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091534581 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098411288 seconds)
    (175/286) benchmarking ("sort", Int8, false)...
    done (took 0.190175658 seconds)
    (176/286) benchmarking ("sort", Int8, true)...
    done (took 0.219731594 seconds)
    (177/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112480003 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090071365 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173834016 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114740453 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.309548133 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140150063 seconds)
    (183/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.119818434 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111028864 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08525627 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09166514 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091258459 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111026159 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095467767 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091783284 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069089483 seconds)
    (192/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116391677 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131830785 seconds)
    (194/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110303943 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094345176 seconds)
    (196/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113641732 seconds)
    (197/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095266728 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12552078 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134616365 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.21933078 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095821154 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108997768 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099640512 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18615131 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149340257 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086127412 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116864567 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07830918 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118620358 seconds)
    (210/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093698446 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118070032 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219367669 seconds)
    (213/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065888743 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117761346 seconds)
    (215/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06825041 seconds)
    (216/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067479395 seconds)
    (217/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093220364 seconds)
    (218/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067010348 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114382148 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100404713 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108816972 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.10861778 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135926799 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122464086 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087922527 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109424939 seconds)
    (227/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068005117 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067328517 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.120042991 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085020206 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175149953 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08933371 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068598305 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084877958 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175070968 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115818308 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095667728 seconds)
    (238/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066654301 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110413715 seconds)
    (240/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066513145 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123800094 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066832953 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101591682 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086055387 seconds)
    (245/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112041561 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087208239 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115802827 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076593566 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116383797 seconds)
    (250/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068217238 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09130283 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119973185 seconds)
    (253/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08750213 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092274103 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086400228 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.091715597 seconds)
    (257/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067637991 seconds)
    (258/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066283467 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11303863 seconds)
    (260/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076932862 seconds)
    (261/286) benchmarking ("sort", Float64, false)...
    done (took 0.172457724 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117309132 seconds)
    (263/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089608889 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10999299 seconds)
    (265/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089899342 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109077089 seconds)
    (267/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068004037 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08419399 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110851507 seconds)
    (270/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066290097 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119493678 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068144555 seconds)
    (273/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090645525 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09339793 seconds)
    (275/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135709345 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067235722 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117180788 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06785493 seconds)
    (279/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084163982 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117572775 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090712734 seconds)
    (282/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163093596 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10971688 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068996145 seconds)
    (285/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065546972 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11304814 seconds)
  done (took 36.194570293 seconds)
done (took 37.143660705 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100542443 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148478465 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094466443 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136675043 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124352517 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091058337 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119511245 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096824564 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124863653 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125655632 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098080886 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094184337 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097132049 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12158699 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097702951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140390669 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12377467 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093461286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.1195306 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085667212 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120556583 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085391733 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113426766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069335593 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122658108 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09266852 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117824814 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119984264 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088292606 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111395011 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090297596 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117296671 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086446833 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124408469 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092373672 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12112637 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09699551 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121267391 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086388388 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111617217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117505417 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088148353 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117126872 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094406284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115738271 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092210246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11916254 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09795894 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139863593 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114839689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095060243 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120557398 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094591502 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11814684 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089364353 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120041645 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090398169 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13990018 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118525875 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091087984 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118532073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093776315 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116736336 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094076324 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121112434 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120310497 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098359813 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11646172 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096938519 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116675362 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085820268 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119543294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089220742 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111986191 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09501957 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122430557 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084803427 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117492486 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092208264 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117259873 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109259311 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090107787 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112392345 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093237011 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113810314 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070741795 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089309482 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11823059 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08457464 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121066534 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115934552 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093702802 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112284825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098719234 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110781299 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092210609 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111429204 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086257001 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114422687 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089643949 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11173129 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088823489 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120712124 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087035221 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118424261 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097379325 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112031745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115597347 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086545707 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109881878 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10180653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120768869 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085886435 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116666009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085518118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11936148 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085305248 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110970816 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085790779 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111944123 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091939687 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111960732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089262895 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11841992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124332919 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087529736 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113917841 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089558646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110237076 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092841714 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111020477 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087532945 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112703614 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078416258 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112849884 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087338119 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118324707 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090112749 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118735594 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08905586 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12066223 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090684244 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11837549 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091852662 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112111478 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073613266 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116245312 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08928339 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113434361 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086575786 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112969598 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086763927 seconds)
done (took 16.97315743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087603953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184115294 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150276411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141652462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105677012 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112923785 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12067667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118506333 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113931185 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1428693 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109562838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132661447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147084065 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085944772 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112615598 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090624821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113535355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101063197 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146968753 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132694514 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163429407 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085589647 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146781598 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136097865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12021396 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114570052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112687913 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091202505 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115370684 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102069547 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13321226 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089067208 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114630754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133284606 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103663895 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120743027 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085977103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119818146 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0860966 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112705393 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14010009 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107816594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117622864 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117239081 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091969749 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114677129 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08905897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120997824 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096730501 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118074132 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125443792 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155396019 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090224751 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122126608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085330969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12388372 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120478079 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089828834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111753971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090729601 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111090595 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091278642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127604446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141515086 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091383872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121830073 seconds)
  done (took 8.647180059 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104589784 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139940025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104145392 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130887795 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111842399 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08770264 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113282359 seconds)
  done (took 1.800219729 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088943369 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137136692 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109770795 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138595431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13513866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108673234 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124307774 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087157067 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131997863 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113624894 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109685058 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151592288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088473645 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121936544 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139422918 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087625361 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138470052 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086988779 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117727036 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136413829 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09200137 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135297964 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090729255 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11435812 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101541341 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114880051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162260613 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09335478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115814861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091001992 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11320143 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166753781 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101439636 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125506116 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112868415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10376315 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145962519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085833566 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129942021 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091773872 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128644873 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113222834 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090498214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110589055 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09339969 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123921595 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08934185 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11461469 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090458485 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13329975 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088355973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128639515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087353439 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118674461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114202219 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095445216 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123571409 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089383722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134086226 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089258896 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131290993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129238464 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103395591 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13103858 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090825865 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128026226 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101498217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11778574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113910965 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093318288 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130156005 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086924575 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115479705 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099672188 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116534616 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110996034 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138098346 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115275831 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099781789 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114141162 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088945541 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114297932 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111484858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118594746 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087552174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121471055 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09055953 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113983583 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112192423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092850938 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110915164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091645899 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116436946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089964632 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115885301 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105580869 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117831071 seconds)
  done (took 11.877573425 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091029175 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114118709 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092599034 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114508865 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090346744 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114922606 seconds)
  done (took 1.637332447 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114312529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117992002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102539504 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12134465 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156169323 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102515197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131415369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124868025 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106637896 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127574615 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128771362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104428188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135880102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120794395 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103541989 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120715943 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102954749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125227483 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127186091 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096544629 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137497826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12068061 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096170578 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132128457 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117421678 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096581719 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125873468 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101119578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127744737 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12383783 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0958331 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118178225 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094350844 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123737507 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130752147 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095200345 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121909137 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118230734 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100681317 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119029447 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103106357 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124182885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12608179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093814617 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123886183 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120355295 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094962956 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125482052 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102139017 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119213779 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118485476 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094872391 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118244541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092752872 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122244516 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124251747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094331932 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130453956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095038298 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122129581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117944512 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09285814 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124075944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1167459 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105289109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119042726 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094192675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122258667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120868205 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09636119 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11880859 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092332816 seconds)
  done (took 9.257148868 seconds)
done (took 34.223882763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695304546 seconds)
  done (took 1.713074357 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826676386 seconds)
  done (took 1.846253281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.499959906 seconds)
  done (took 18.548959134 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505026897 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.590762791 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00139187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180831866 seconds)
  done (took 3.298255397 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.97110056 seconds)
  done (took 2.010634919 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284000985 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23189255 seconds)
  done (took 1.54100448 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.788339099 seconds)
  done (took 1.825056245 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.372009517 seconds)
  done (took 2.39657883 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329707987 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184971121 seconds)
  done (took 1.551567048 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550187595 seconds)
  done (took 1.587234168 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.007727937 seconds)
  done (took 8.048745118 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270785084 seconds)
  done (took 1.315676949 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301503308 seconds)
  done (took 1.338446219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.640575683 seconds)
  done (took 4.680125612 seconds)
done (took 52.731054845 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099174627 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126622972 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101397021 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12454584 seconds)
  done (took 1.484888553 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100442305 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120884999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099506327 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122262597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125142281 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09600685 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122750235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100283947 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122623753 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09523636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122700577 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11934485 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0992497 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123571154 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092659485 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124530247 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097868246 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122128063 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123747287 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096001867 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119446919 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097659985 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125852324 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09334916 seconds)
  done (took 3.705427184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101029736 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118965422 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096582141 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117706049 seconds)
  done (took 1.480665339 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101117771 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142635337 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138690265 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100605819 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143393897 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135838199 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092998677 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117090346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094251668 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12521806 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089687086 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149781102 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13723346 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097850488 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12810642 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087596053 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118537737 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136751751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09949537 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127330156 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091909873 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127290619 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089558188 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140673291 seconds)
  done (took 3.855319482 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171898345 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128043707 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138776355 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09529838 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161160534 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140627702 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087780381 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141779969 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086992217 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132155729 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117330073 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1335287 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129878199 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086883454 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114970746 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087412542 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129532864 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128708389 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090735106 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128042564 seconds)
  done (took 3.479256138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097911641 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11693456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088482198 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116673042 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099094658 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121375902 seconds)
  done (took 1.687648792 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091152072 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11452324 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09211609 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114164744 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095553511 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115061279 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089282 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115110919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089436025 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115388049 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08986979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116305431 seconds)
  done (took 2.286515757 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50335212 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121937628 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119638888 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089374669 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12175706 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090118703 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129325743 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092738045 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141268959 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088396546 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116801552 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089368022 seconds)
  done (took 2.752117522 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234237575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125905733 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28655839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370806151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15784752 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17712024 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284001445 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165212411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225304445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166554824 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201701346 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223395083 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151952699 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190615076 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138786924 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14446527 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206178536 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247614795 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153282173 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207649996 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227259998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167919546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180424369 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151608714 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138604914 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171738267 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09385794 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130347515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233735306 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174941346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214689796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161844521 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146289728 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209458694 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252078283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221533805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282920058 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137368229 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148208155 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168690719 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266170734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139776585 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202005435 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155525544 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131656639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217374729 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16759213 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176705515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152165367 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138036241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195523404 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240160891 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191946801 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138855357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304007207 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151302813 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200765326 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193818835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251366032 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200663948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212620634 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095774769 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1884715 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221933828 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185540546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174419903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207676811 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148511329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199423294 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18846195 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164577616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221227596 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186758561 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141979458 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169496441 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173162805 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171092579 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25719118 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212072493 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095399503 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16862549 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149247919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134877374 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195765244 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098850233 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241701524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144380159 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162534038 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215072201 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160410057 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159991647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201817279 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230238136 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1490236 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082796623 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15530749 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156197196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192314168 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14132687 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159189835 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162173089 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130502396 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183269807 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12537931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184813629 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118388353 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17451612 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183604116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127256237 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161305716 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15221714 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125184849 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200679459 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198405584 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142196833 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13236088 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209561274 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178741926 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151400048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177539952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227713281 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116752122 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149825298 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228876569 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215283017 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140727882 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228049093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15639198 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108174942 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132635025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180807941 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154790869 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161578239 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134664865 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182165465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233246245 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098825748 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138945678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191679291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134307443 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132714166 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162509306 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149309066 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111214031 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151412867 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154295832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209105049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178269551 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154265386 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166095111 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153636353 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254876488 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141052711 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124041628 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14961328 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120927641 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192342184 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196791592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131968597 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23209467 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171993914 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204326946 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171451416 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135874751 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177424235 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131086543 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092828178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221885121 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167146462 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161095 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195747226 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226005433 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182923996 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182029847 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199723371 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175102453 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164436618 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157422706 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111757159 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160122634 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170661165 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124282407 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144536696 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132708293 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146519085 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115936707 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134863675 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221981312 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172251821 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190096102 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161186497 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15041632 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18195083 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129554564 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174749165 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176993606 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149260339 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197843239 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223587089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1848498 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144768936 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19986186 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121760928 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125758365 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113884694 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196648943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10751974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136260755 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163564154 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181640385 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180953237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203760914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212065946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200863719 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190405898 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095750939 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168866188 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184292263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176305251 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193553219 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143377406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150733172 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180515295 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159587323 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255597306 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168586036 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176250626 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236849452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121950915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132153039 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151257622 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193275701 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1533905 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205584573 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11967732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142071602 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161295912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133688656 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160570473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184317881 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163696257 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217568165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149861894 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187072432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127705911 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164657404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160244718 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165879166 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081388787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17672315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233796639 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148947061 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168481559 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189500107 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13242371 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30933326 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244377051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196427351 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139110217 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157170429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16148003 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163731484 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171857271 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178890534 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15974637 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188675085 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160494522 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137712738 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140013451 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12139631 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151027083 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131745341 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148354328 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177236661 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141096892 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186119148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162514214 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160190747 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173401668 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151160741 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144791971 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15063836 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215188413 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183566273 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239692366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151657491 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17960616 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234723099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098639931 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132796971 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13281524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178776451 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108327063 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223365641 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189240902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233955061 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185333686 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193758783 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141111343 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119719014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128950592 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201847888 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20819017 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154383696 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160231205 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231952812 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11882749 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133687208 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178277961 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292879169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145503456 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223607002 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080471605 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281987997 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129185807 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103501428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164584196 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237912807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137369078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190533576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1744784 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170783451 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165466949 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149764207 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192152338 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245754632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203628941 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179955606 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133763861 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156077537 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176668614 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219981483 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157428456 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112576637 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232029894 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196664005 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196409454 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143479273 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169243714 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169086165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158624981 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217148751 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106786656 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236136629 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135110246 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194737555 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153948191 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14617862 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175952705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189589597 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143757006 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21691459 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184010383 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136269144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104949783 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169810409 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21017614 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15690601 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098872644 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208815615 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097655091 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221754789 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23114342 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137043663 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156369791 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148711368 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106584898 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155083335 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187308977 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113450072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167597277 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20548258 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136074477 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190704509 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233969959 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171059931 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175260262 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145793312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692426628 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132117942 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19356238 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161108604 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235767077 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149453889 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174843766 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16045687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168309654 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195711907 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16195715 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232804033 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221567885 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180843629 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103320936 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158968225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192013474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11498592 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15209033 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169552203 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160532855 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154874852 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.2054545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173864562 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106206233 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140721795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19881624 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159926177 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214092846 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180472712 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110784198 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203441094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190038915 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134789372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180700493 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239504062 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11367052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152378285 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135129355 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15783833 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264826336 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096285666 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235462344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185333863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161004928 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16937779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148595308 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22255477 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158415257 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185941779 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148424899 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160962487 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157939737 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138096909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10248573 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157442927 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170063945 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151623574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160869084 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167266424 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197791531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09489607 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146810471 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315552795 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195844887 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244380378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107312712 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136905362 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162204801 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152256115 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177532873 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179378816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136919426 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136731597 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108850971 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159901399 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112112692 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157225746 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196192576 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195651152 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20959862 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137978281 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281075595 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112370536 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157179461 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116746671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104178241 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151348414 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147412314 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160159274 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194517794 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267744986 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149699614 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134430803 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150051969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098343018 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137620098 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165471867 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165728318 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178307963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146149624 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080174843 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157759268 seconds)
  done (took 83.613324252 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163942738 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134136244 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148640604 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204336373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178560673 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269994049 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21199343 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255435295 seconds)
  done (took 2.704002624 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093411927 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147649275 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157899865 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134141217 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092147344 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119459007 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349181835 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132797454 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118719057 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121750004 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175408357 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094024015 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556297877 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091502671 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119630063 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109500756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09247321 seconds)
  done (took 3.839218228 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.479817462 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.743345786 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.518477191 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097844168 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.212595149 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113177883 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.829148152 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202048413 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117560426 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49421384 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779095844 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166640145 seconds)
  done (took 18.898060452 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115759454 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137247949 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123845131 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153409405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141521899 seconds)
  done (took 1.820922493 seconds)
done (took 132.641826214 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104826785 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406050403 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070855923 seconds)
  done (took 1.656428635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107836842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137308525 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107708625 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136533368 seconds)
  done (took 1.643872831 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098884314 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126811585 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109003244 seconds)
  done (took 1.483219226 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324815363 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190180135 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171219409 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106276086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129064912 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103575446 seconds)
  done (took 1.489161848 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097454778 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127766082 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098393481 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130191467 seconds)
  done (took 1.605231664 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094580042 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070326309 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100904367 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075574088 seconds)
  done (took 1.487225368 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113737689 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13245509 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102951414 seconds)
  done (took 1.502932315 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130351674 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139724842 seconds)
  done (took 1.424791969 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105808015 seconds)
  done (took 1.255635191 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117446263 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169499304 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188830891 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165572778 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.236247074 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166358173 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142378891 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113773255 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132416076 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145151539 seconds)
  done (took 2.732136722 seconds)
done (took 18.218555414 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103232156 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518738607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412137469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116835407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722602677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379302883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035540035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146866468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1657222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092760217 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140378622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670841464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027367924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.47341392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981168241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376933509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675928968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122991643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118982476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094003293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021019129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092597506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12276943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092162316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703719373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426222076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095032912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370730453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092094754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126962892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381895829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124013493 seconds)
  done (took 17.168842553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095327828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174026524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097635622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138638771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12422922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093884377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124368533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092995817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179480715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123853734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109163476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12266789 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125555131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095402666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142803098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091889746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125920244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092199903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122681607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12045362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11152854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120294499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09431525 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122570001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09439264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135748577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092774373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12235588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11997557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099082676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128593155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093800894 seconds)
  done (took 4.882708614 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140196231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18256246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128830423 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126114398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168774418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12485995 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198692853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117370696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182885004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123554787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139554078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092733278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157470984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093418225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144094534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120684995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096523442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12266674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092257713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124222218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139613516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093101355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122911665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093459941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122863781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107805379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125124577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121166814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093773735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126207602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099999134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123673869 seconds)
  done (took 5.208844546 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097497211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125564748 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10976798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138797954 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094875448 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126138822 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095963324 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124685308 seconds)
  done (took 2.072055987 seconds)
done (took 30.484275393 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110629086 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127235965 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107106389 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134792072 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102189289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132501258 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091116417 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134686198 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133249356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.1035926 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137540442 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092046927 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122873885 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091963601 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13516353 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09725087 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133066794 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100920868 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135027474 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132285543 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0948597 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133051323 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102811292 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133970678 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103496446 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134303516 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137278968 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100372926 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123759535 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094419013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124455139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103854354 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12369319 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10522177 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12730174 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097614267 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124283659 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093765094 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133739358 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132867529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100702167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133146377 seconds)
  done (took 6.067463996 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108656651 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139159836 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105362457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080778783 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118299153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079981293 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139088786 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079346129 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110434015 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108217577 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074112263 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107737344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078430159 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101248579 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0780817 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075279674 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108549714 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076772954 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075747747 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106922771 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080168011 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072407545 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108888593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078891269 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074065265 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110917212 seconds)
  done (took 3.640301759 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100845411 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13429618 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113531725 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184171043 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16160569 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098460718 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132938727 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110362859 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138978633 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121134189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096810674 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149841696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10875179 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12995653 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090792083 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138462832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135414967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09362855 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128226149 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11155732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139902486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101611242 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141724924 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131502416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092425971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122362551 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096832574 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135414926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097570913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131219269 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096156831 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126527789 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122398011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105371203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125643092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093678385 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142743752 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102502866 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131884453 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091494396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130681471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121177184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114342264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162232042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091167294 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129857825 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0950162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133564568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121866319 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111179925 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131510549 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091884066 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125929686 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091571319 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121900993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105981949 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124125533 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093620952 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132730404 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12694506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106779449 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125300783 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108658027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121953987 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099335031 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122444402 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091701974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121076228 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113719544 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123557004 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162124664 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093858036 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124295016 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100774863 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131570918 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126945922 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094098397 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138138583 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1029473 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125530858 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101756633 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126396702 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094104388 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143074682 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093696565 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125048618 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092364901 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129141686 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123809537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095382282 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136130016 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091781637 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125922101 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109267909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122735683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092978537 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129127604 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125959236 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092644169 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138146707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097717301 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123898419 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102067785 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122782703 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094359976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133067846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126603138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092450564 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127402054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099053112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123383855 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093259093 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127220451 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09362308 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133532744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099201317 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128413941 seconds)
  done (took 14.881089657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228207846 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216511271 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234893345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263744046 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13594303 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114027887 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210851595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15590144 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124195698 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159363016 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17428359 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180417467 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.16765433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182367756 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170550879 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09328144 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.152624903 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163045446 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214518683 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256533659 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144553192 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130734578 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.130609996 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160079951 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137825152 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133051785 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109640768 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136755772 seconds)
  done (took 5.865052012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10785424 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156028818 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097406406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145806095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148340929 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092948346 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128456045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094230213 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13667834 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135448607 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092771562 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129872008 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100355845 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133392476 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122420155 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103194594 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132822981 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094170997 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126486447 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096738775 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133734341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101044279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128937997 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090616858 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133702188 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121103119 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086448075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143444142 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092172179 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144994759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12054221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101749682 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136598922 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094125324 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123675686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094538791 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125105564 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094951736 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125383614 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091405502 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123718169 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077490907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122477321 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106279 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130167132 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079664088 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130369642 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098005261 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125329835 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119130795 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097700879 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125096287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097450999 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130923991 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096684388 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124179756 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096531899 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116396717 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100490166 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125469467 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084786596 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090470824 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129140644 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118099932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102185588 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128503774 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092191509 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125964101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097344981 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129228134 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095277008 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129768484 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090881194 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126499874 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095554053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13020469 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095462311 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123963086 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092587423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124813766 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075004066 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124269786 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074162973 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12679585 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09150697 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122388767 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095392425 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130964652 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137235773 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096232312 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132197597 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0945651 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123430509 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096889201 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113471364 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096165148 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139984922 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140387316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093967827 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120944273 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108679727 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126495495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092280506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105462314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103086888 seconds)
  done (took 13.034015625 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126835253 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154466574 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093933682 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142385249 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156862335 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156446549 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101562564 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130889359 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095831376 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142233428 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093371377 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133014918 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09320782 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138555244 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156765993 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103652545 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125514878 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108855738 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12891421 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169416622 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112067048 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143551952 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11083518 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125792013 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097959114 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142479749 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161505558 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106887758 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138153387 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142271395 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108650782 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160761296 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112137031 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129620127 seconds)
  done (took 5.545526216 seconds)
done (took 50.194491837 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.288543173 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.497759058 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.262203776 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.258326368 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.317742068 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.273790824 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.294643513 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.262547364 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.426720909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.262280958 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.486631715 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.932770406 seconds)
done (took 59.757155344 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.370626614 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.399942294 seconds)
    (2/2) benchmarking "String"...
    done (took 1.554828013 seconds)
  done (took 4.146834713 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.621173275 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.227728665 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.528246477 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.263060328 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.263334535 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.560108457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.055508096 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.639295614 seconds)
  done (took 28.725197687 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.273234041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.353881132 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.2920908 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.270311652 seconds)
  done (took 6.378044582 seconds)
done (took 49.430203357 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.246544272 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276904617 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.274124567 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.24304396 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.404735125 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.292360604 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.60834041 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.328675933 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.300575568 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.250099809 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.2952755 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.265292246 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.275364962 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.656751333 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.264925043 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.26779802 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.265882826 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.861497356 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.682906435 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.279026024 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.265436507 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.295130519 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.268826752 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.288768852 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.318657413 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.266700554 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.269306017 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.265101742 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.978607139 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.268884493 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.291050753 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.825968331 seconds)
  done (took 193.132101906 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.26571628 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.35789562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.491288119 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.317649398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.754884379 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.474850615 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.424542939 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.924421037 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.290383654 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.283760047 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.481842359 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.268102898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.56270335 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.315059195 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.296949158 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.272488438 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.559101616 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.592201786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.323008027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.44555769 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.292493229 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.362453667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.282664824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.484933201 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.284016695 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.36076887 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.311517132 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.271028631 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.483417685 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.472695497 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.307247389 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.331833916 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.917820978 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.130817159 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.273424185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.29845861 seconds)
  done (took 152.757596771 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.333079234 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267601816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.267010089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267627581 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.302656447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.26693354 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859053826 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878074733 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.771535999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.653719969 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.766169189 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568461942 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.268486034 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364600914 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280325179 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.26871913 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.28321879 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.313674466 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27195898 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266619858 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858703368 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.280507548 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.446141338 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453148933 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.288096331 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302749666 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660365091 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.268559479 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269248482 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302538607 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.60551387 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.322883392 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268554842 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.709897452 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.247457301 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384513424 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.268975231 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270807505 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3034431 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270245467 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.553009156 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269223469 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.269439753 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.272094158 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.99595666 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.274008358 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863301408 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270767025 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.256762053 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269577603 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2707591 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.611510147 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.059095579 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292237493 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.268576646 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.271148512 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.268584419 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269062429 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.30336413 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.55623324 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.36440698 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289004574 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272723434 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302649467 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.26903999 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.354454702 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28974528 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.386759733 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.337182105 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.476448307 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852182792 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265395175 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360333057 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385651654 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.262465696 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.26112067 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.261329587 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.260174572 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.372683648 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262169818 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.261667321 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.698355123 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.440725864 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.281469926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.702789911 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.363035982 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.261043347 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678791096 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.264276071 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.260966396 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.082286852 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360577414 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.261981244 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.261381539 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.260597347 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.691601999 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852572501 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.554250662 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.265495254 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.498484289 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.265084166 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.713749301 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.826461393 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.262592597 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979044946 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.265128565 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373855526 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.438718489 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.282832308 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.262069158 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.693853013 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.26638957 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.319800395 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.261151417 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.66042655 seconds)
  done (took 374.691329454 seconds)
done (took 723.10294263 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.873781748 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.865088861 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.975793729 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.857027077 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.819787544 seconds)
  done (took 10.578115147 seconds)
done (took 11.76531624 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460701818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458444825 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326025299 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.46155145 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291969901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478863311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44003274 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.283548048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368292302 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.349825786 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368872314 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320153144 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293186658 seconds)
  done (took 19.08951806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598828318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.590209468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327152133 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594725191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303409218 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585351531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465724621 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.483734638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495712445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299046236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277051985 seconds)
  done (took 17.211972623 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.589112204 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.589776097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330348188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.588320192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305531998 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579940161 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.470685287 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.483335359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486883049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.299655909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.276318683 seconds)
  done (took 17.188718818 seconds)
done (took 54.678128907 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.274098759 seconds)
  done (took 2.463360504 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.310934604 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.473514207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.292741751 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.277768999 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.274362584 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.274217632 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279391453 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.275587507 seconds)
  done (took 11.649384405 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.270502072 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.273020842 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.270324016 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27174946 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.274083226 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.273372939 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.270262393 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.270731227 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.270183975 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.273855928 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.274378532 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.270152429 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.273990753 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.273722262 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.273933706 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.271607522 seconds)
  done (took 21.545681783 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.274043175 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.271248225 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.271597666 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.275058929 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27170342 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.272431192 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.273518482 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.271485993 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.271492061 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.272923475 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.273678711 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.272813749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.272987757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.271399967 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.271993194 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.273044986 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.271360488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.272235858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.276536078 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.274564963 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.272733206 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.272801668 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.27283808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.272965825 seconds)
  done (took 31.739626651 seconds)
done (took 68.586857163 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.416712888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.960673091 seconds)
  done (took 9.569726892 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.275971664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.273970431 seconds)
  done (took 3.741685709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.275086469 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.274241226 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.275656351 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.275345936 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.274937501 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.275957695 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27602596 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.274944849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27522708 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.275731997 seconds)
  done (took 13.944488012 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.275198738 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.275879894 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.272435962 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.277265704 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.274424894 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.272646001 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.27544133 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.274995186 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.274559946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.27360442 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.274996512 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274478034 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.275041669 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.272378006 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.274049474 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.273445367 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272377196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.272666353 seconds)
  done (took 24.128570909 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.276926363 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.275100721 seconds)
  done (took 3.744383444 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.272268529 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272465876 seconds)
    (3/7) benchmarking "month"...
    done (took 1.271783301 seconds)
    (4/7) benchmarking "year"...
    done (took 1.272453617 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.272175173 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.275078592 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272770615 seconds)
  done (took 10.100542186 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.27568772 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.451962309 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.535114395 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.883915649 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.277477012 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.278192379 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.133059435 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.277756878 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.279931457 seconds)
  done (took 14.58425873 seconds)
done (took 81.005323231 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.291517927 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.285134354 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.432508716 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.278329154 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.283784628 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.611206919 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.315787118 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.403354875 seconds)
done (took 38.093661972 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.284537797 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.254936253 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.005347583 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.251252941 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.322359787 seconds)
  done (took 19.025779583 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.299965146 seconds)
    (2/2) benchmarking "read"...
    done (took 1.605904603 seconds)
  done (took 5.097034081 seconds)
done (took 31.599769508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276759721 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.27331334 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.275283144 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.273802565 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.273298115 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.276187143 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.272834901 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.273642524 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.276599576 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.27540627 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.275433563 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.275739554 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277137377 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274415101 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272888274 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277150111 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.275897887 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273132332 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.277059736 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.276475666 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27226828 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276365524 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27391765 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273995398 seconds)
  done (took 31.791361404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276393897 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.274482473 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.276447276 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.27543373 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.272975867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.278254776 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.27713989 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.274718254 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.277989252 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.276330991 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273775573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274974546 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.277035219 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273535103 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278348602 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.274138597 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.276497619 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273756002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276180668 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.273764582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.27637045 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273412714 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.276682243 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276141126 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.273404582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273964026 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.276015722 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.273235801 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276019369 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.27371615 seconds)
  done (took 39.457748882 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.281913918 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283760319 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.276327663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.275659468 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27570987 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.275652629 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.27675712 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.279639955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.275657299 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.275336281 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.275628486 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.276445485 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.275883887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276054229 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.277657041 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.277323606 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.274883542 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.274921923 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.276275092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.275670757 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.274758995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.276347441 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.276788335 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.276873346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.275783178 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.275060505 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.276344129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.275740037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.275955996 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.275679768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.275980075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.276618632 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.275713512 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.276654217 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.277088709 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.27558738 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.279995225 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28337884 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.276700741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.277058177 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.276452444 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.276215966 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.276494997 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.275742027 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.276488585 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.276939868 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.277023963 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.276277926 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.276529625 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.276539025 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.277230675 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.276811467 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.277880935 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.277233544 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.277837375 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.277652973 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.278258035 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.277440412 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.277891604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.278606301 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.27780992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.278669617 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.277830947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.277997891 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.278848072 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.278137946 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.278276741 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.277816967 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.278329436 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.278572183 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.278383842 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.279078987 seconds)
  done (took 93.150405066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.278546685 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276731188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275209642 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276157216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276451604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27851812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276028147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277728081 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275357628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278038061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27784007 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277297037 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276344599 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278687969 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278329131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277695384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279693173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276898308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.279339222 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279235165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279290097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276361375 seconds)
  done (took 29.301194529 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280829994 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281499746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.277567541 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280025297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276696648 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280443924 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28039213 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.281580233 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279673423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276589639 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276851661 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279804962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276956208 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278263805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278017953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277855543 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280368246 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.279079821 seconds)
  done (took 24.218054859 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.278846196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.277130058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.281693523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.276758659 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.278492502 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.280239463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277366857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.280513479 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.280078499 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.278459513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.280580716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28070563 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.280598321 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27798007 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281212545 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.278421966 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.281059024 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277795281 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279789233 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278650027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.278647743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280982071 seconds)
  done (took 29.342351565 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281342697 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281093307 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278545929 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27821571 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278709501 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281546656 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.281437934 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.278828463 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.283132334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.281280728 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278997248 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281704103 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.281698385 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279978056 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.279856125 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279567658 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282500997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280252799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281796261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.280099015 seconds)
  done (took 26.808712736 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284191525 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284296263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283089205 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283630807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283872036 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283650224 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283497326 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284051761 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284249406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285010677 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283658463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284271775 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284188354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284917853 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283808427 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283754543 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284484123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283076831 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283503741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284153683 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285021128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284588436 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284169235 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283627511 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284181099 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285072635 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284164511 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284016413 seconds)
  done (took 37.15249805 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28461211 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283929223 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.281411481 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.281562014 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.28239347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.281427058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.281379222 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.282078474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283732054 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281839868 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.284218233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.283983902 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284549389 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.284862189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284265504 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.28419685 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285248804 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.282234065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282252712 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282710844 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.284246407 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284655334 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.285429933 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282074709 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283411379 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.285041583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283119224 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282683276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285423651 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28266049 seconds)
  done (took 39.701436377 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.304711715 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305111232 seconds)
  done (took 3.811037052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.28408563 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286175277 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.285276772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.283469092 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283409783 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.286378446 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286405063 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282868661 seconds)
  done (took 11.479878799 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.285853204 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.286705193 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.286020184 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.287532035 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.286170009 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.286038085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291433101 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307784225 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.286738127 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.287198834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.292200376 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293993696 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.288142828 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287014037 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.286156825 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287657112 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.287650528 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287669355 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.288078343 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.286082656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288122494 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288892659 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28862222 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.284349222 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287779 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.296452828 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.309704349 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.28807424 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287088323 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.290329793 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.286175338 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.285380705 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.288029894 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288619796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.288192416 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.292307108 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295719358 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307700264 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.295053728 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.30834666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289580164 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.286157717 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.288052551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.288764804 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289447689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.289314355 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.289603141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.286637898 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.287910611 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.292493808 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.295314546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288217646 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.28680261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.290709748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.290644406 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29478157 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.309605698 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.292484298 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.29815633 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.29911752 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.320935607 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.313866435 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291275857 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.29058588 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300238302 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.313242731 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29648348 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.308150672 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.289669161 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290283431 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.296284346 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320763064 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.315260753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.290903748 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291923642 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.290913195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290452362 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290832627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296393449 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.312249208 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.291667389 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291273133 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300981878 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312904308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.290425627 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.290715171 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.292303909 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.291838249 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.293347536 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300981225 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.312606596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.291852572 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290284151 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.29097522 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.291969234 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.292708138 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.291453015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291299333 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288243637 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.291669286 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.291976235 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29599887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.29992854 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292587595 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292940948 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.298198707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.312501895 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.291834515 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.298321069 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.293319192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293798891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.295464802 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.297453247 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.290679543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296947693 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.299774896 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.294014172 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294552933 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.293283467 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.293251908 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302521208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.317630609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.2943141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.293781504 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.298558438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.305790151 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295425366 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.296497976 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.294734751 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.291420859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.291861908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.295649427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.294752608 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.294522851 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294170413 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293865472 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.292023736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.294456354 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.295662437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.294659315 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.294187829 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.294975475 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.295827488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.295734184 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295961883 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.29561164 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.301040391 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.314220098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.296711886 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.29576373 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.293371053 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29634647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294801396 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.295973407 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.296193501 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294951814 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2965769 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.296507648 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296210513 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.297820605 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296837163 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.296533526 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300411436 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.29717183 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2986889 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.29589804 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.294031141 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.29636518 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.296810629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.295300253 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.296467817 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.294970128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.299618627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.304374848 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.297458951 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.297265194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.298608793 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297161021 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297675806 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297355706 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.300257902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.304797545 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.297633195 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.302633999 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.317832739 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299182163 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.297542739 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.297357061 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.296582902 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.298419255 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.301226274 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.30575905 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308617046 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.321779218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.299249497 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.302026 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.299248538 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.302600671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.301778903 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.299361379 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.298567913 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298922133 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297751067 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.298508782 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.298610599 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.300098464 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.298221815 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.298538061 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.299411731 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.299407146 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300014528 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.299230442 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298896748 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.296450136 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299504346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300440652 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.298738441 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.29722577 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.298210435 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.298663785 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.300656518 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.300963834 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.304327871 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.297716953 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300685588 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301583517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.299016549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.298871418 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.301302385 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301066765 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.299605217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305394528 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.320380041 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.300910207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305593431 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.320501858 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.299854538 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.301871693 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.301340683 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.299214146 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.304049419 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.309166505 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.301406714 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.301136043 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.302083383 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301098155 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302568955 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.306272509 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.319199213 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.299799298 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.301928907 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.302888897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.298912412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.301817334 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.301207016 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.302849814 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303255012 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302892514 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.302704628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302260006 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.301236321 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.302643203 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.30361427 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305594818 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.311333103 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.306484604 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.301902636 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.303307733 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.303555495 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.306577345 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.302363466 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.303734452 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.302244126 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314394408 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.327623758 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308561113 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.323075498 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.303475093 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30733522 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.324006639 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.307234153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302336942 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.303202582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.303038866 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.302962288 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.302013987 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30425669 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.304347333 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30485822 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.305276116 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.308511341 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.304784571 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.304806047 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.305506782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.305405939 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.305996367 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.303912825 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304457772 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.305504479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3050438 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.303970555 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.30379468 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310606011 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324658612 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.305210561 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.304336751 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.304430246 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.304125044 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.305612905 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.306737112 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.308281749 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.313376186 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.308804284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.313176463 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.307906192 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313298045 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.30721642 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.309395634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.314331509 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.304344731 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.305459337 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.304853219 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.306889493 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31265415 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.327003941 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.307693866 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.310806208 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306596216 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.307564283 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.307741701 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.307799644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306868345 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.308098318 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.313427615 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.327528554 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.310242461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30795751 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.305537684 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.307513738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.307908234 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.306567135 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30927339 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.306719544 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.308316508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.306606622 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.308060755 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.30833741 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.307892625 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.308002751 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305736122 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.308462479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313570919 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.330591683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312376829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.308417617 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.314649927 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328803944 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314568157 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.329023286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.308881357 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.30831878 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.309547011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.309187204 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.307400246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.308650102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308730659 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.310900433 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.31410744 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.309810273 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.311617667 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.309127908 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.31031761 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.309585886 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319434761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332846895 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.311340931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.313564068 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.307755973 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.31216018 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.315154705 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.310846372 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.309105307 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.3129294 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319908104 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318480237 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.311139727 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.311524284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310096699 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311651906 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.310893371 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.311930373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.311763362 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.311966483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.310865321 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.311312185 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313450551 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310792771 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.310201057 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312156268 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.312661804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.31981409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.331332807 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.311698741 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311477841 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.31304192 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.310849976 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.31138715 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.312294861 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312562264 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311450586 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312799884 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.318346164 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.318862171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.314150292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.311011901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.31232207 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.311942768 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.312003521 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312831029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.314019031 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313536668 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.31352485 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.313246637 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.313347368 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.311641899 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.313039286 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.312038155 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313669951 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.315457519 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319675511 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313717264 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.31203979 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.313786328 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314120285 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.31179709 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.313174712 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.319533484 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33581042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.324340741 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.322450677 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.318246133 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.313238505 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31620466 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.320507505 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.312771508 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.315786433 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.314773752 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.3149581 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.315606513 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.317690937 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314595428 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.321356516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.333824849 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.313783929 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321423684 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.334556785 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315479202 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.316391108 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318703047 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.314246171 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.313753468 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.315407479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.315023974 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320085011 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.336306109 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315614421 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315834628 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.314403293 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.317214885 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320476476 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315684262 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.31573838 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.313443949 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.315018439 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316124014 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.315328495 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.31295259 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.314888025 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.315668823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.320009819 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.323345692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.314059172 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.317451841 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.315837049 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.316181226 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316715815 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317010528 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.314031355 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.314464034 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.315909558 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316468028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.316031963 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.318352454 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.315524874 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.318195173 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.31720669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317846607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321191465 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.326912633 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.324885226 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.314236301 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.316692835 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.316373143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.319063256 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318998587 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.317560213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317471151 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.318156576 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.318429418 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317525163 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.318571093 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.321792556 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332160546 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.337875261 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318194963 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.31862715 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3194818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.318848019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.316558592 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.318355386 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.319545995 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.32211039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.326868276 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.319674092 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325283194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338512566 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.319432828 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.323977592 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.323027788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.326161539 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.321001406 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31946424 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.320849626 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.325428854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.335017469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320447182 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329632314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347904374 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.339872126 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.320828996 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.320539794 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320280381 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.321638916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.322060895 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.320762463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.321009113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320187147 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.320873654 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.321689629 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325312787 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320660826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.322114748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.319538177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.320158599 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.321381166 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.319039188 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.321223453 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.321215492 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.321891874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.322191948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.322325126 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.321251064 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331842249 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.346923331 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.321844072 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.322795743 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.319596715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.322988377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.324403001 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332656941 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.329266316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.32264191 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.322699924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.323098432 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322241346 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.321864636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.322145053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.321639193 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32252211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.320161922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.334387048 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.34880103 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.326065971 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.322293201 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323321759 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.323384646 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323408002 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323739178 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323284304 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.324186601 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.325576649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327334537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.323845804 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.323365926 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.326505371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.330883001 seconds)
  done (took 780.565715559 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321655549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320996746 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32199773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321284487 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321104962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322189973 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321295588 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321923475 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.321987986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.321069488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.320973027 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3219975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.321182921 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322562715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321686183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321997474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322029778 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322049641 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321947451 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323887089 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32229647 seconds)
  done (took 28.995673599 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.325479352 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.322657536 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323245856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324621429 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321614958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.325452376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.323237426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325035223 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325443844 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322660197 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.326130315 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325741332 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.323618297 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.323454877 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322999706 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326137984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.324455137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323352977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.325367554 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323477124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326286625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.324166961 seconds)
  done (took 30.37353712 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.326734176 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.326758839 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.325260513 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.323869807 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.32618007 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.323699233 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.327175373 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.326665757 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.32623308 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.328016453 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.325780706 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.328495187 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.333353238 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.332044185 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.327160929 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.327393974 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.472550728 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.327605159 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.327916969 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.327833965 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.324984982 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33265247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.345629791 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.325129605 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.326131264 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.327588114 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.327531273 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.327556021 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.327913638 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.329619029 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.333206143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.327903264 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.328505117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.328844972 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.32706752 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.329236053 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332989147 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.32955491 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.325928092 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.329665092 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.338175971 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.348547745 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.32966077 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.33468747 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.347966337 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.329161946 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.332072306 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.336555843 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.327096688 seconds)
  done (took 66.542995453 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.330547033 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.330775328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.327398601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.329073756 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.32926402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.328001049 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.329264513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.329331506 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.327480806 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.326464975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.330970661 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.327751464 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.328446887 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.329633195 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.331287493 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.327905212 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327473015 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.328617749 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.327969824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.328729016 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.328084709 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330667859 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.332040383 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.328988913 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.330426743 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.328949917 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327810407 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.330686661 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.328609562 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.328866382 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.331432816 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331688537 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.331963996 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.330558661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.32811504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.332193601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.331993217 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.32913496 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.332308265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.328944445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.332155521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33201677 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.332080087 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.332520309 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.330362814 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.330227925 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.330305854 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.32929813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.328871159 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.332235996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.3321566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.33077116 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.33187573 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.329414092 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332788092 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.333447361 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.330781541 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.329652853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.332113517 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.329513833 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.331569209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333391126 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.330100335 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.333075161 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.3334213 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.331153163 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.330420041 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333032404 seconds)
  done (took 91.70317777 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334304398 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.332814995 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333604086 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334098063 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333778637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.333838578 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333892435 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.333003139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.333183407 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334662037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334192153 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.333892372 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.333588496 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.335157112 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.334874457 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333526695 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.335534376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334459234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.334855945 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335411875 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.334682463 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.335265108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.33475498 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.334410769 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334797632 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.334920638 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33601533 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.334486163 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335857499 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.335284588 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.335868077 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.336732297 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.335643273 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3362698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.336718562 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.335488914 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.337123691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335649253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.336507181 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.336926372 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.335637421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335966758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336508203 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.336959504 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337778374 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336953982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336402003 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.337497193 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.336925272 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33708654 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.336878758 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336300596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337321403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337063567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337456679 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.336950939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337307476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338031004 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337904586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.337572815 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33733246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.338277091 seconds)
  done (took 84.060078761 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339191883 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.337859874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.335276639 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.335524943 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.339447323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335100318 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337970968 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.338858253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337764225 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.337636115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338437663 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335540527 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335079621 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338955336 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336691567 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336248152 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336700132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337370719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339446016 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336201535 seconds)
  done (took 27.994847409 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.337328395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.339236521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.336916155 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337989212 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.338092213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335516247 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.33820842 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339334976 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335876208 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339354919 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.339814755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339511727 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336973211 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337544012 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339923394 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337744756 seconds)
  done (took 22.66053889 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.337893162 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.339295273 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.339545552 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.341056746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.337684641 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.336912706 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.340210817 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.33800413 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.33735408 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.340871048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.340227331 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.339934151 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.340679948 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.339380624 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.33751312 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.340512388 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.337950584 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.338485792 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.340064601 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.340733615 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.339208862 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.33789545 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.341648052 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.340665966 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.337940541 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.338918745 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.338426668 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.33906937 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.337645373 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.34147964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.338354667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.339353095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.339353914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.339029983 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.342108863 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.339303593 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.342265447 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.341682283 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.342350515 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.342392495 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.34182922 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.339920976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.341939568 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.34215929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.339867688 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.341823965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.340457861 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.340594504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339353827 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.34060153 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.342246581 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.34326263 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.342645788 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.343171343 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.343287926 seconds)
  done (took 74.960356392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343322972 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.343533499 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.341214496 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.342754527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343714693 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.340828974 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343255358 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.342083259 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341328316 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.344297674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342457613 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344612352 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340959738 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344347827 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.341723416 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345529445 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.342429388 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341824269 seconds)
  done (took 25.42466548 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.342855806 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342211589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.344086426 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342707451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.34160983 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.345207685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341955644 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.343923577 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34460026 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.343329214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342676486 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.345045301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344735358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345186067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342392635 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343085669 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.345138693 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344676202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.342655058 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343184157 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346126374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345692555 seconds)
  done (took 30.81892393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.344132748 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.344286225 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.34351405 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.360601357 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.364126516 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.367130464 seconds)
  done (took 9.380510268 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353538822 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346507458 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342834316 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347043986 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346236754 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34279976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342950167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342941646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347014158 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344818991 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344295014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346248402 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347029298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343942955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346646205 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346451984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344801152 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344380017 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345036495 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347470262 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344897095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347407315 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344501442 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344642679 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344460551 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345400417 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348087968 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346128375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344711165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347754195 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348007313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345119147 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348326837 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345734616 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348443739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348666374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34515138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348747686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34826283 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34537784 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348477579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348164322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348664822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345813759 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348074641 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345958912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346021182 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34574351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346332995 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34915881 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348706117 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346113256 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349470566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349193658 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348834205 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349825788 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346620307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346702997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349299975 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346885761 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346646179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349135634 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346560744 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347705414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349982835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348004599 seconds)
  done (took 90.166399233 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348002397 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34734182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346764548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349155533 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347158651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347821265 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348586948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347436225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347806148 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347961354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350573184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348179094 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348822926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348078071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347854828 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348500924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348352019 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349037574 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348336697 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350994929 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349417115 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349297105 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348889301 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34943545 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348884774 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35294659 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348642155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349440131 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349822291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348831243 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349631555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349538668 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349135302 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350711466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349983167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3501613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349855821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349718801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348916108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352600317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349621366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351946505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350203722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350178251 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350705149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351037398 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350282989 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34961637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351569741 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351375638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350618971 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351055501 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351135715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351126848 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35044338 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351142799 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350653789 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350919943 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351382618 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354547683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351338915 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352000367 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354174499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351175972 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352054793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351374824 seconds)
  done (took 90.356889238 seconds)
done (took 1821.411314269 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.442007323 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.415683216 seconds)
  done (took 14.122411703 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.517028346 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.468949519 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.351734185 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.392444668 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.352013225 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.371818704 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.364931558 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.354887768 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.351260777 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.350679309 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.35141012 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.538274633 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.401212824 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.35075738 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.351333782 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.444349715 seconds)
  done (took 43.579329299 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.378106161 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.357013881 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.468653376 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.374251195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.377002192 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.541117156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.411363665 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35482799 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.525399796 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.394726413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.903565097 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.376927763 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.353979688 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.460487777 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.373738743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542249552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.598952368 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.903706529 seconds)
  done (took 30.959844223 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.802348189 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.382161539 seconds)
  done (took 9.447789475 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.375045084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.353941168 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.354169305 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.352221391 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.345811858 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.345084535 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.352909267 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.345701059 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.959372085 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.478080535 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.354864572 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.36065178 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.372923708 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.353191999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.351143016 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.388029077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.526161889 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.35246745 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.350025573 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.35854235 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.352625697 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436570815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.396624016 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.353680042 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.478258478 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.947719764 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.356615799 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.359663565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.503797481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.351793771 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.35382612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.35328175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.355121766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.950772798 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785863054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.365336215 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.377038728 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.360935087 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.350556008 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489866519 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.355283524 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.358583188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.352294987 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.777345136 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.486135669 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.469156145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.589131626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.376437073 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.354512186 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.414087576 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.355184897 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.355069505 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.382071425 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.117723161 seconds)
  done (took 112.321135764 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366621989 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.736139403 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514143127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.367144894 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.968387034 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.984769209 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.364400616 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629907859 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.413424951 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.348993553 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.644853177 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845577324 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.366123442 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.37320784 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.014339592 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.411646344 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.348955029 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.072062438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.365162167 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.351279426 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84354775 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.349427623 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.363461243 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.49402947 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386191732 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796539529 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.6917973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.776849318 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.36656794 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.348558256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807350878 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.368939423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.371794157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.352046838 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.607473231 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69856919 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.695980352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.370552026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354719112 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.349874536 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.38332677 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790966443 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69939263 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.369031359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.348882484 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.813168564 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.36662659 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.360317448 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.35604141 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548729589 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.012389116 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.350156046 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.665583279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.350676406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.724393337 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399358671 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382398857 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822682687 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366735185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.423208692 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411330751 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.34887771 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.350437363 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352181439 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.350776919 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.6950575 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.521371173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.350414976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689859564 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826205467 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.370871289 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876827865 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.271244523 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.361171081 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.455842798 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.358215674 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.864427921 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833500627 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.383205366 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.350987696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675656835 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.368694633 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626675505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.371654856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.351567609 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866179069 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.352431631 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.350855601 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.350993024 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.359815075 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.982241018 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.353726339 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631402656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.406356254 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.351727317 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.350586535 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.351887749 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.351964546 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.369374845 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.355386471 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866537565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.380286895 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.46402638 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.368889349 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35157237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.358334453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.352604151 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.353624652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568542618 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.829264721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.37303265 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352868896 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.352365251 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.371012155 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.518834094 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.359768601 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.649279774 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.373580378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357084966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.354404092 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980910863 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.386145124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347947954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.369254571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.227394607 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.546243854 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.366919038 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.342166652 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339789013 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.35976441 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.522023612 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358741363 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407120812 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334955599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029764305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382253531 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.351398824 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.655787863 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336114106 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.154455651 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.349156175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333545238 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613926198 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593625883 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394706485 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.335004983 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351102941 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029806287 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.393532958 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473895159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35204455 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.416413692 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530790069 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700386416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33524686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.957361324 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.336888868 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54638206 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335350195 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630780821 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814415107 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.355493236 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342774735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025558721 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055919195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.135548318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.334971683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606993243 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.278306207 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.805848315 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.334647252 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335336421 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.793616097 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335448974 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341999723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.3357909 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33496079 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.483385754 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.508384165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.900011852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345295086 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776886775 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374331789 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337338435 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34168445 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.335811128 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.683951438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.395563811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.338903435 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352250883 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.336551206 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339085994 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79941666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.279532349 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337535392 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.487265972 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954624306 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.35827687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337908903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.940046592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.596169452 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.837223387 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.363006515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.636590303 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.357617042 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.374410666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.895454372 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382180165 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840690601 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356151876 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.337168503 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924688695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354396306 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.696188597 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.338821075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338536806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855506117 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.353615908 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.33792066 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.527593832 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35629005 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.60127485 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.336339894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.389802375 seconds)
  done (took 1112.955616338 seconds)
done (took 1324.650766872 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.339285387 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338714313 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.325120216 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341214145 seconds)
  done (took 26.600919335 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34785005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.343468117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.343465923 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34236709 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345089069 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343599159 seconds)
  done (took 9.320480751 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.405735692 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337555504 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.342986947 seconds)
  done (took 19.3416913 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.543065773 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.680172699 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.691285368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.635484633 seconds)
  done (took 10.805331336 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346268592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.345399309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.345477392 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345796879 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34947572 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.350122125 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347041339 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346829382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.35066828 seconds)
  done (took 13.3829024 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.348315075 seconds)
done (took 82.05598308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.358037382 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.183764135 seconds)
    (3/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403231094 seconds)
    (4/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.334224616 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.902599456 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191229537 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.49524715 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.771511429 seconds)
    (9/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.211286197 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.594099929 seconds)
    (11/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.335380567 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.411700519 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.338339322 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.367188826 seconds)
    (15/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.320144303 seconds)
    (16/286) benchmarking ("sort", BigInt, true)...
    done (took 6.34058571 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.245227771 seconds)
    (18/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339311211 seconds)
    (19/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.484127147 seconds)
    (20/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.338882909 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.331220293 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.321127834 seconds)
    (23/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.33893416 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.905876834 seconds)
    (25/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.320348436 seconds)
    (26/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.400939419 seconds)
    (27/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399811238 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.339747222 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.801570062 seconds)
    (30/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.784026296 seconds)
    (31/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422773304 seconds)
    (32/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.893041365 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.101673869 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.459095254 seconds)
    (35/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159091449 seconds)
    (36/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.460994358 seconds)
    (37/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353359332 seconds)
    (38/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.94611926 seconds)
    (39/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088799958 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.322390421 seconds)
    (41/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.540802166 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.700633698 seconds)
    (43/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.341405245 seconds)
    (44/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.393444383 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.433406537 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.368172264 seconds)
    (47/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.347723773 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.416452891 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256592706 seconds)
    (50/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.323045453 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.537899369 seconds)
    (52/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329589138 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.25147884 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.455210749 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.593009737 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616111733 seconds)
    (57/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.111747339 seconds)
    (58/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.486612617 seconds)
    (59/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521234022 seconds)
    (60/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.445469691 seconds)
    (61/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.327515331 seconds)
    (62/286) benchmarking ("sort", Float32, true)...
    done (took 6.342966446 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450373081 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.400859472 seconds)
    (65/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.557417946 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.360883629 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.749166231 seconds)
    (68/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.201866542 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118054595 seconds)
    (70/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.551932477 seconds)
    (71/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.708391052 seconds)
    (72/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.605057158 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.324447195 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.3590993 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.304889837 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.211644448 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.324340034 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.281746907 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.293075195 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.33658625 seconds)
    (81/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.634058455 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.324196513 seconds)
    (83/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.123191712 seconds)
    (84/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.35483387 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.129637485 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 5.527461339 seconds)
    (87/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.382870534 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.47540475 seconds)
    (89/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.34482995 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.435015727 seconds)
    (91/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.375144723 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.324713647 seconds)
    (93/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.767074207 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.351722056 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355792417 seconds)
    (96/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.712349455 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.97513354 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362000699 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.973834596 seconds)
    (100/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.325377983 seconds)
    (101/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428600464 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09015704 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.915345102 seconds)
    (104/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.421942656 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.485164671 seconds)
    (106/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.14447556 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.693009951 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.327388025 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.459135811 seconds)
    (110/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.728474946 seconds)
    (111/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.482557007 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.398236922 seconds)
    (113/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.698894832 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.363923609 seconds)
    (115/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.099645182 seconds)
    (116/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.589470042 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.400273625 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.456152601 seconds)
    (119/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.975919462 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.673042307 seconds)
    (121/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.132770964 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.34241115 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.328335238 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.160438386 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745565003 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.465659892 seconds)
    (127/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.699758468 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.860388823 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.38747954 seconds)
    (130/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373428586 seconds)
    (131/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.327502006 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.976790878 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.625854264 seconds)
    (134/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.337234306 seconds)
    (135/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.528793128 seconds)
    (136/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.391693579 seconds)
    (137/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.082068332 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.352540385 seconds)
    (139/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.371516331 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.111680662 seconds)
    (141/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.473636667 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.611095406 seconds)
    (143/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.338175331 seconds)
    (144/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.34740178 seconds)
    (145/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.917052825 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365477927 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.449812051 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.785254112 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.187811027 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.144995267 seconds)
    (151/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.328945322 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.195726401 seconds)
    (153/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.37062683 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119666401 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375855755 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.300536865 seconds)
    (157/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.365200726 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.698370728 seconds)
    (159/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.47869311 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.957679333 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.377889822 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.348587385 seconds)
    (163/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.622688386 seconds)
    (164/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.822165403 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.370960078 seconds)
    (166/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.391632193 seconds)
    (167/286) benchmarking ("sort", Float32, false)...
    done (took 5.356567487 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388312126 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.354560732 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 6.351888694 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.821840365 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.337048735 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.331037401 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.39263875 seconds)
    (175/286) benchmarking ("sort", Int8, false)...
    done (took 4.364254846 seconds)
    (176/286) benchmarking ("sort", Int8, true)...
    done (took 6.3510356 seconds)
    (177/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.385415296 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.419472519 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.333455344 seconds)
    (180/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.417721466 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.436846634 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.433631634 seconds)
    (183/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.959294057 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185162684 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.989247258 seconds)
    (186/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330551284 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.376699757 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.358849978 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.764467506 seconds)
    (190/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.964302896 seconds)
    (191/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.368313867 seconds)
    (192/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.380164626 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.393029859 seconds)
    (194/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.577030399 seconds)
    (195/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.39331075 seconds)
    (196/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.437159665 seconds)
    (197/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.393828139 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.059418663 seconds)
    (199/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.382465306 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 5.451504285 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.367858603 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409249189 seconds)
    (203/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.704984757 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.338949988 seconds)
    (205/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.740553066 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.927362324 seconds)
    (207/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.744318181 seconds)
    (208/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.333726396 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.975236507 seconds)
    (210/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.378222267 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55934986 seconds)
    (212/286) benchmarking ("sort", BigInt, false)...
    done (took 6.351187714 seconds)
    (213/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.189977098 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.396973003 seconds)
    (215/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.63916702 seconds)
    (216/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.382758395 seconds)
    (217/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.929331516 seconds)
    (218/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.720671142 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.392502079 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.060234009 seconds)
    (221/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.764519042 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.806143849 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.708169581 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.58239239 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.377864235 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.393812354 seconds)
    (227/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.640622801 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.340134383 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.437825359 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.470405035 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.345589254 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.349665225 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.341032971 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755126346 seconds)
    (235/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.610574341 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38035405 seconds)
    (237/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363507082 seconds)
    (238/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.886458815 seconds)
    (239/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.827117858 seconds)
    (240/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.56068994 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.612873862 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.339713923 seconds)
    (243/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.343693765 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.571654286 seconds)
    (245/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.480418315 seconds)
    (246/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.359657836 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445771513 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.663532763 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.382153779 seconds)
    (250/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.966483219 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386358329 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.737694689 seconds)
    (253/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418518611 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.335489602 seconds)
    (255/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.36089948 seconds)
    (256/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.562222678 seconds)
    (257/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.336109288 seconds)
    (258/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.536709256 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.477043437 seconds)
    (260/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.105872365 seconds)
    (261/286) benchmarking ("sort", Float64, false)...
    done (took 5.666514643 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.439837245 seconds)
    (263/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.453345789 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.112648165 seconds)
    (265/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.419285347 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.438684747 seconds)
    (267/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876827119 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.47359977 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.764806231 seconds)
    (270/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.358570404 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.194090909 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.336565849 seconds)
    (273/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.828698677 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.40360629 seconds)
    (275/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.383626198 seconds)
    (276/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.335759275 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.36573709 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.335881933 seconds)
    (279/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.454735907 seconds)
    (280/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.382424536 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.378612244 seconds)
    (282/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.375617467 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.707325133 seconds)
    (284/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.400138053 seconds)
    (285/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.755279983 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.360016149 seconds)
  done (took 942.260536712 seconds)
done (took 943.517889093 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390482924 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386147141 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.366644906 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.387932422 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478652349 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.395140481 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.377985405 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.368649227 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.415253462 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.418110093 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.366132211 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.394450554 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.369205577 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368807142 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367923815 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383695728 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.394001276 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.368408422 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.38448411 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376505457 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.384572622 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.367096545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.41772203 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.394390539 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.371391601 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370260783 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.371521694 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.3878782 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.480772554 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.370939295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371243958 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.379569421 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.393496659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.367127057 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.363349523 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.38738019 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37935826 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.377093735 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372738193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.401486496 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.790103064 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385811811 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.370691877 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.368636334 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369549195 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372953252 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.370165926 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.375145762 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383385281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385128781 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.777322359 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402350468 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.373452472 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.371057316 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.381148201 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369618579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.373741501 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388136471 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.390134307 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389270253 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.392231213 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.375895593 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.372573539 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.387760059 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.378693956 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.816814442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382995783 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375328551 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.796356907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.392807149 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.818928549 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.396137766 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.372283952 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.385349574 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.403299477 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.405574601 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.367999768 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.371117222 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.379676457 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.370936924 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382174219 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386314817 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377540882 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37322245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387599661 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.399028281 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382626295 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374248889 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380525579 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.391747008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38045411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384778457 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376714201 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.36841853 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382267428 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.375348369 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375921317 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375739718 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376911017 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.38305005 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.82045513 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415636839 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.369904297 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.370659651 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.372832883 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.3876929 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.800875555 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.390425345 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396911358 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.421606141 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376163532 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.387796957 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377836206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392164056 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38304652 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377147772 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369953019 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.389422187 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.788944544 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.40646708 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376070766 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.373212852 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393545352 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.375110634 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371828112 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.40554681 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.375876188 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389986599 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496398425 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.386502386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405797149 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.373446849 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.379225269 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399383736 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394263168 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407638327 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378135645 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393430934 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.391652991 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374232696 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.385425045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.385531827 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.377820438 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382435745 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370105703 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.399362264 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390702427 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389830905 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.39758077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.49748956 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374070739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.39396526 seconds)
done (took 231.275097249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435180075 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.372268207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456379848 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373443128 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.472723773 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.473587604 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371777628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371691551 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371261591 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.8074363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371633153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372423848 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.372485072 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372611161 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455291457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374343082 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372346486 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.713531871 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374518677 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.444891876 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.371552917 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373340112 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373942795 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.753895856 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.369958601 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.374357837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.444730427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.374813129 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.718027563 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.371031289 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.375704419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.719016616 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463284479 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393302496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.384801655 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383126879 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.475022689 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394746472 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456514954 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455509284 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.458814336 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.414214594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.370783233 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.368235643 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.37719397 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.376914592 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373780256 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403016181 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.370607106 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.374568459 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.715063827 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385444836 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.383929755 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375349932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374915796 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39694942 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374857175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377304809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465408662 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.378150982 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438551145 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.755387701 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.754778791 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37677073 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.376510718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.375476219 seconds)
  done (took 151.233793094 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.444497241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.450289515 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48910821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.394650796 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.426844648 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491760213 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394126569 seconds)
  done (took 11.376344766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.382750932 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.377875586 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427363931 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427396127 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.378544715 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.526797291 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380170599 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.388446538 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376202311 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.430927367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380287382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379289919 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385934983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.37578187 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427660677 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.389707437 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.492699355 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.380695908 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379925093 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.530380831 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375845183 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38701248 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430942181 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.390356869 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380038546 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.385657889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943851028 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379273338 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376432014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.379575901 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377594199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.415434909 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379319216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.378678131 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377480222 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495698785 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.37998439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377168712 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.380824039 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.377013728 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.380285714 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.380554819 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381671532 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378362449 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379092635 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402856186 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380430518 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.380789244 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.379950947 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380463856 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.429822329 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381866916 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377906471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378115525 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437403866 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38867728 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381826971 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379650684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382197889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379335343 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533195879 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430509897 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382719499 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430046804 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381882153 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382527111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382153609 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3825438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437839106 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.382947718 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430005842 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381018176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537547388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405952356 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383727448 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385582927 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38559574 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382167888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380500402 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.389403741 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.379735673 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.384424726 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.388982585 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380626681 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380181552 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486290704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.491518517 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.381191581 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395542436 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390123458 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.379265063 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.43538142 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.38315691 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.380843308 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434711265 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49799874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.436885134 seconds)
  done (took 157.81132341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388425161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391264478 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384822302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399649269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.383838196 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.384138558 seconds)
  done (took 9.623978106 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386153109 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.385045299 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383236792 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385597911 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384092543 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386156158 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384935086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385288575 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.387768773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385586858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.385026362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.386352135 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386336861 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.38493554 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.38603421 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386298709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386170097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382970741 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.385970705 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385000124 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.491362704 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.386648067 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387041588 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.388133816 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388605896 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386547926 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392830487 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386019206 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38638575 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393045449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.407686807 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.386530969 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.387316141 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.391840331 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390035988 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.386640109 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39048139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387177516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384035008 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.387777804 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.387490329 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386635042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387371771 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387568976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38791907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.390874878 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391150783 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394593192 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388295674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.388523054 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.389358766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388068803 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387489355 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387574401 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.389404367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408998308 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391837173 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387686538 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388830688 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389340433 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389344287 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.388789375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390413349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.391210744 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.386146552 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389938093 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.390091598 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391104728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388517963 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38856128 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389808192 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386891834 seconds)
  done (took 102.35932308 seconds)
done (took 433.686955723 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.733515641 seconds)
  done (took 8.029746425 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.528414357 seconds)
  done (took 7.824694737 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.97247808 seconds)
  done (took 22.275929448 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.426093391 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.416791106 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.387831036 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.406121595 seconds)
  done (took 26.933068328 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.784848712 seconds)
  done (took 8.08049218 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.389212559 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.381637129 seconds)
  done (took 14.068628902 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.430200036 seconds)
  done (took 7.726424622 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.837785378 seconds)
  done (took 8.14334086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.403591127 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.404732398 seconds)
  done (took 14.371335995 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.36484109 seconds)
  done (took 7.662068342 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.224226672 seconds)
  done (took 8.522511529 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.39804926 seconds)
  done (took 7.696275738 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.449158055 seconds)
  done (took 7.746129386 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.435229816 seconds)
  done (took 9.733643409 seconds)
done (took 160.110398479 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.382560468 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.38991642 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.391326882 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.38992588 seconds)
  done (took 26.851876105 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.42491253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424124125 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426171417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.435316895 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.428379641 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.426038703 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41747427 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417974594 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436426059 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429844946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426500527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427386817 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425974451 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417388843 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.427697743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428421716 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436922299 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.426504462 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418410028 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42924603 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.393624085 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436985976 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429374772 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39384421 seconds)
  done (took 35.483050203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.91396493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463640191 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546046425 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445517592 seconds)
  done (took 7.668920123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446982351 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447685704 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.457698757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497605044 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528795252 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455599924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.419889876 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415719369 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400252557 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447474467 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522159251 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463602457 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.537491852 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392574149 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582526013 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.395327043 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394096538 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446204022 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496659781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.51123777 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394493905 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445312513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449044389 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.464100924 seconds)
  done (took 36.314668756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395313746 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.41335765 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394500128 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.392366812 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40258855 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39462726 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393949851 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.395212521 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.393080066 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400179193 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393354631 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406374231 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394027032 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.393591439 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401662347 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.39654738 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.399741685 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.394282879 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.394138423 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.401243464 seconds)
  done (took 29.251915709 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.388745334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.242104903 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.739646339 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.643842366 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.388058901 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.394826421 seconds)
  done (took 28.099528215 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.464818305 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.617031286 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396111381 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.752797742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.844953295 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.413939376 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.395225393 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.639263307 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.959822856 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.948663487 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.461666556 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.46425553 seconds)
  done (took 20.660932965 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.389573945 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.41272008 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.400233463 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.411974917 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450850599 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.416250367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.403750114 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.389208594 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.458363822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.473235986 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416885341 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.45249554 seconds)
  done (took 38.379886591 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478103916 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437987282 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.298813888 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419383766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128564312 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603231644 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46429104 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87292536 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396110319 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66691238 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394383245 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484903352 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647199848 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39445174 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396597947 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.398061135 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642116135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895314565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394182135 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.512903952 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425456643 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393381606 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.629284038 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424016303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605357338 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535421129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.653431135 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.167873855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690642142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411605227 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403509993 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394241611 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667681844 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063196983 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508446721 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404631818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394425303 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.959611634 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.375432073 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.516894909 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413690433 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399122249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405132923 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393382467 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329192899 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405502118 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867853716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399908899 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.106130118 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396402532 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40626532 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489113538 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.39816555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.385925874 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49653773 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400147517 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.395365637 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484919236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986758764 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.955298956 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411699576 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.338214388 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394998759 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.448838762 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04176625 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.516465535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.400592677 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400281814 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331345014 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.530993176 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419347646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54536162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.420333889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046925403 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12181983 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425063701 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332894053 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959744118 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412409269 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.339168782 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624052727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175278764 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333127599 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.336701709 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331236695 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113730773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403174182 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.821303889 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415353513 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877322718 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.407817304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415415923 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420582951 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620148705 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.27598765 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397018774 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.410388766 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523467943 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420162431 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858490703 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33195725 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.401474742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654188 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.609814521 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406273234 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.412843555 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645042287 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412198379 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.419067144 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405196798 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.414060196 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.992308276 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431758141 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.965218433 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419181308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176286893 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146894547 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398989783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.524064015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399677169 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645878457 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177239264 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.558949153 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467232205 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401247173 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400082609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.546640036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992649869 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.985398192 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.394977852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398696548 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417094132 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.399987598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348989678 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.40148367 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41780866 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.178158806 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624439256 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400789492 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68280824 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335016937 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54845298 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410239744 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621677258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.603327197 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.419513788 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655564281 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397798948 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406416111 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415110456 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416122921 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499721631 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41955669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.397012687 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675929525 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401544868 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401901231 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567774882 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176459873 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401306228 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404531903 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416716684 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00408371 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394874721 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40746784 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289886136 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412408509 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467668233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405379984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409385407 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.233515574 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437509867 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40447598 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.396687539 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625870643 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40920877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.479904773 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477769574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.613805358 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004765567 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43215011 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.333832521 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.111417891 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.093583991 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400579172 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589513324 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400355121 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411429899 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411169744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400975345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00114621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421034536 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.482134554 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.407657867 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412108339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406753925 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401948906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.215741073 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974593433 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411787628 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.420259891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544711662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.415720833 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335504951 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919616239 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407776977 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401500399 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.179059891 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436189097 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.479985928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890091688 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661089521 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414127315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414155789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.593023546 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437250277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40261141 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405641451 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405932276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.428975733 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430913231 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.413106644 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.495222997 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.766602044 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971854987 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142067048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983190736 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347775122 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.411479192 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290266302 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.871826031 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336803747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060464225 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593601743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886779065 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348795485 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622108935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61484614 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195300155 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415479718 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630477018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326192255 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.418168775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416080635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616366091 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438754879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410876057 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339475198 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.684188185 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680188722 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404125968 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499839701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867783196 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408062751 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183060174 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.428739039 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.745939662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600839832 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.033591365 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792898598 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417798252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412320861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913156767 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414773793 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931275388 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042484137 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440603752 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.628774017 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341369881 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.416758014 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4168798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401341662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.724979627 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.410693619 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.661275019 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417805392 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341416766 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406319986 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981237695 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.284699703 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413699593 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407447208 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163028762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418869919 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710482009 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.417636188 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.219234176 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427735984 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342642925 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342071653 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.100101951 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409953073 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384268946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917630528 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.40975269 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417699035 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415133642 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259729967 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663393084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423092164 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017116418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660160787 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407564456 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432016334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.509351895 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412889312 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.394572373 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290399557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644507647 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447251286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631700361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.466620006 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.30833981 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442329301 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619918997 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290932105 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409663454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668646644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.139121486 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.40878268 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165535272 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456829351 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413452308 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428273772 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411191988 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449327702 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499752499 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419224587 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.42082313 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42218062 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587902711 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411162478 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43136657 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425994938 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505066491 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006582478 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.225763002 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.184988687 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023569852 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227695087 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0391953 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448488745 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411240163 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411461448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345162334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563176366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937946356 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684569589 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540939932 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.409310297 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435391802 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414520233 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418983321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627698192 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686851867 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388453567 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412523062 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20245797 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.571061509 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422007276 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.624415439 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932850215 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990147488 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526994541 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425610997 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880897567 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686557468 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505325366 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413142673 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003351239 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.417937024 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.75386823 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.438098393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412303496 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580547825 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42240498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078139046 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.442624114 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.569654119 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188037472 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512889829 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67548657 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90895858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426427542 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028079669 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170625028 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690570522 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485075481 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425834404 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.525815032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562846 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.425671316 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.31447058 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416453096 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260761142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.125614506 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425606442 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024477151 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700737552 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.412573338 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.412761021 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443115945 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.423710339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638416818 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132375712 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638496319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427879703 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417782612 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.986770015 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025578966 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450019301 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350013844 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419810883 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672687454 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67055074 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438852282 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.868151798 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126991824 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984238247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.387077566 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439309124 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417128439 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163509128 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030430086 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.2606652 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9402375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074258489 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426659628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694554817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422765883 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416398827 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697519104 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.420711642 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421793925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432280469 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.033452243 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221392842 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.44080193 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620444024 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.360672587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644216954 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428077496 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37269573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417540365 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.602786857 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418341164 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547714002 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429886584 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.426723055 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421983477 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156313784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69268619 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.423956147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.404324937 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.40865176 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421814427 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512545392 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69551446 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425436169 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.094787278 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770278177 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674843755 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430954112 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.402682409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423130585 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419357353 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136763915 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429946532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437349248 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998833761 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425823212 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434585303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42384877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.635431841 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631364905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433581937 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432382631 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42255004 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44176903 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.320020719 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187402374 seconds)
  done (took 1679.998745042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431052373 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433666883 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.453490931 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.456307226 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463569352 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455701056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.452878596 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439191724 seconds)
  done (took 52.917628791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.41949411 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575486009 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.451099886 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.434400135 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.429279389 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.41992702 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.895658309 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.438066227 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.429179695 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.429288593 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.42635086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.424289749 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103948381 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428727993 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.430238089 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.411093026 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.428865547 seconds)
  done (took 66.913183058 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.433130542 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.464851624 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.529406757 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.420808002 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.527778501 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.45143335 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.420639357 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.433707461 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.453025901 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.465570189 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.095702627 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458588394 seconds)
  done (took 80.487717859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.437719003 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43933426 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.438467964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.440184913 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438679801 seconds)
  done (took 8.52774505 seconds)
done (took 2112.855141015 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.428025727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.144351494 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.06594787 seconds)
  done (took 5.54399286 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.570236164 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.617956358 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.739514938 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.743878254 seconds)
  done (took 8.005874419 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.700473756 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.809068588 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.616962104 seconds)
  done (took 6.460559745 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.707951174 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.431283392 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.436065455 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.425587395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.427413531 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429103713 seconds)
  done (took 20.616755665 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42778595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.431652365 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427731487 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.430538915 seconds)
  done (took 7.051830202 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.404521922 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.122470747 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407185379 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422019051 seconds)
  done (took 18.689273365 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.173720943 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.186000956 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.171208965 seconds)
  done (took 7.864992333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.4540273 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.448498839 seconds)
  done (took 4.23762253 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.718850752 seconds)
  done (took 3.053612819 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.443126838 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.480815919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.502523638 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.433708797 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.743443554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.864891915 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.087204093 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.658694417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.407586399 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.663595987 seconds)
  done (took 31.620894311 seconds)
done (took 130.482473883 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.279201854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.795890515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.627214551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.246140758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.656040225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.627180573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.64854217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.215988751 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.75799628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.749845646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.294080589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.659100028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.597327858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.798869934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.596817214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.668720258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.663512871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.328713569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.936883152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.13872303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.649477761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.889897743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.121129077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.911127866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.664396214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579454216 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.474084304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.673250902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.114447951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.492465863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.581051603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.312987852 seconds)
  done (took 196.086699903 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.425759889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434697771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427399985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427108061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.45821013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427808982 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426970092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.451391706 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42743135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.439967328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.426315741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426878949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426481755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426702384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427620902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.427469612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426398747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428140449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.426818784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426154475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.443948387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445891497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427106011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426647136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.428577944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.445537201 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.427010387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442123541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428773904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.443737414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429124492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428258432 seconds)
  done (took 207.171055922 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.426889307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446216795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.446449257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427510905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.444058107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429677139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429386146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427199669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437387201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43117571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.429012028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.445821877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447046547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.428880126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.43847278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.428917639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.428942318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439857795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434453036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439343083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429402356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430054124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4295105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.456959669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.430572915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.429902656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.447273485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447354275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429787054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.430193644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.432491855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448034888 seconds)
  done (took 207.287686097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.63320421 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438579004 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43979632 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393422856 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.438601346 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437505347 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434373174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628070548 seconds)
  done (took 15.184913035 seconds)
done (took 627.065317157 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.739969912 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.450667005 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.639146724 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.460369533 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.207385191 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.475103115 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457443099 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628879764 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.38021538 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.6380716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.724411131 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.474068729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.872671118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.458727021 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.715142425 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564619185 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.31682898 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.435534967 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774077035 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.99085585 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.723131058 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.910197382 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.651462939 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.378218212 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.88620536 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.90395124 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.154368049 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.305012532 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.476000758 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.785836743 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.080684532 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.408799287 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.520677532 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.522488778 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.584607908 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.560417427 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.388779343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518983871 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.657898374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.676066239 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98418112 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.195043719 seconds)
  done (took 96.020214852 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.423440411 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422403377 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.422531111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422783748 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.423235228 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.422120203 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.42190342 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.422007545 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.423021638 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.422688507 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.423710557 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.423435284 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.422945856 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.424535933 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.422083515 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.422499763 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.423253047 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.424468606 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.422501531 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423598141 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.423937296 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.423661661 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.424972041 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.424636232 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.424363037 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.424183847 seconds)
  done (took 38.350371925 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443459949 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.690384226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.8554906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450039665 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.441699244 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.445715448 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.520797482 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44528384 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.444079537 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.445907016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.596853646 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447682522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475292196 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.884192821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454907246 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445659758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445781079 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.443938448 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.701056167 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45300234 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.541790712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445946781 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522866177 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452587916 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464667441 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443497076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447816719 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.031423042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.463364775 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.599452759 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.265601374 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.527310046 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965547618 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.887396034 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.272968754 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.454777015 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.446803014 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.603645298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.447711346 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.445286098 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523171836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.446957452 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.868131471 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.12297338 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469253384 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.448378188 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050923137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.621346308 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.695605344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455561493 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891665239 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.453169376 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449310149 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.44726154 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.694417456 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.45888026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445710808 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.052867147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.476193598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.524979429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.45019773 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.446950375 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709881203 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.447745863 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.699158003 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.452060399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.454912566 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.467808766 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.87272795 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.457200824 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140633791 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476982196 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448752159 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602833512 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.698569749 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.089901119 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.470680423 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.716477546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982780294 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543320529 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454367428 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.0249206 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.54694235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.454794034 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452174369 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.452361102 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.450372479 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.497748503 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.524407136 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083732063 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158064828 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085771772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.554002787 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.46519988 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.449851941 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.058962629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.475980077 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450931961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.869087779 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149097242 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.472191952 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.456134497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.145946538 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.474481484 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.529042552 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456082587 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.879674149 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4588882 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498091043 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452348373 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.457484642 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473298397 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529539656 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.457070151 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.45326241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.111389467 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.636155827 seconds)
  done (took 190.437595884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.443722092 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.462048068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.446409155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.445024033 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.444735894 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.453344172 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443536794 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.445137889 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.450766364 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.444282933 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.445176942 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.447311843 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.447140567 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.44823245 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.475570652 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.452406797 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.112772449 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.444154347 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.44644222 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.445252574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245086721 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.453531722 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.450203406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.446991164 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.447012238 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.447731587 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.457267416 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.446779907 seconds)
  done (took 155.39322531 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453858339 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.029956586 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.477356118 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.585327012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.480308182 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.45158351 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.584051719 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.513392288 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.472744637 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452284264 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451153514 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.761309584 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464115895 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973390341 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.648633309 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.612293536 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.978213477 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.4730546 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.452551117 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.451691651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.587624935 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462355469 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.761368521 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026678515 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.475592278 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023071592 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.438937401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.456257879 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452338528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.033555551 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.479775328 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764483054 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538656997 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.514707873 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.050420003 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.998850751 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.992454886 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.606318004 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.46083378 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453789668 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.454883894 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437581371 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.035351877 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.483845447 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.456169034 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02517537 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.480307935 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.457799878 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46381969 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.455360612 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514611256 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.533967552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.787922415 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.04621868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.561278806 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.474852115 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.588925691 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.843831336 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.458441216 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.973860308 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438030096 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.042053011 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.48531155 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438121773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.456982735 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.462019751 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607652337 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.595454605 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.978363727 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47459135 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973105161 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.626239997 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.463642749 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.455270933 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460061381 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039336334 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.997381078 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.627058409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.599166328 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.657607032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448327332 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455760714 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438755491 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.533972953 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.460854045 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.041418849 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.998406449 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477895893 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.460381212 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.459264418 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.460707586 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.635843487 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.064466916 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.561749818 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.968512393 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.788238075 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.772844911 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467374735 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519641849 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.484328708 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.767730256 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.461897485 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.51742881 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915664577 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.771755661 seconds)
  done (took 173.049703144 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.701257215 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.692611056 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551063996 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616488301 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.063820822 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.033928641 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.752984925 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.612630753 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.574877981 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.721330622 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.613147392 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.553896586 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.682389429 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.542566449 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.205337768 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547044242 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56845683 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.6097482 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.620323533 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.487752516 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125712229 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.75288269 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.647330266 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.322315227 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.558419541 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25914975 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.026921725 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.016315896 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.631454675 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.790548422 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.997662244 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.5786484 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.425834665 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.159344608 seconds)
  done (took 69.407017127 seconds)
done (took 723.998931896 seconds)
SAVING RESULT...
DONE!
