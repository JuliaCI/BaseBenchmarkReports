cset: moving following pidspec: 32469
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23039669 seconds)
loading group "string"... done (took 0.461562726 seconds)
loading group "linalg"... done (took 7.580568541 seconds)
loading group "parallel"... done (took 0.171005908 seconds)
loading group "find"... done (took 1.16431116 seconds)
loading group "tuple"... done (took 2.081589148 seconds)
loading group "dates"... done (took 1.317303857 seconds)
loading group "micro"... done (took 0.244065115 seconds)
loading group "io"... done (took 0.651164675 seconds)
loading group "scalar"... done (took 40.576514223 seconds)
loading group "sparse"... done (took 12.436909807 seconds)
loading group "broadcast"... done (took 1.109562607 seconds)
loading group "union"... done (took 13.678439264 seconds)
loading group "simd"... done (took 4.76890393 seconds)
loading group "random"... done (took 9.617071478 seconds)
loading group "problem"... done (took 1.971332314 seconds)
loading group "array"... done (took 22.401928541 seconds)
loading group "misc"... done (took 1.416577046 seconds)
loading group "sort"... done (took 3.573520187 seconds)
loading group "collection"... done (took 19.438115396 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513507446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136832444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132331604 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147429008 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203930591 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141862221 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158869965 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113585897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.984178103 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185287143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153054792 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513548552 seconds)
done (took 5.129763114 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222091874 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093463161 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102988809 seconds)
  done (took 0.86556894 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076846275 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144850309 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093575638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078553212 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094031072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077525838 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094716195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077237666 seconds)
  done (took 1.335912346 seconds)
done (took 3.180448185 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733531049 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281086861 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203762517 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461715942 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19687093 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214682443 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678987596 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360749999 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254834007 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099926032 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144095492 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388063842 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135598078 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682959184 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090022666 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12317684 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178267787 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456324754 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081905816 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109736924 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117224521 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140968603 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131014734 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092402568 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185192983 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081291919 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193174725 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107631922 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080450888 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289285416 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201016887 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701512974 seconds)
  done (took 10.909606764 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110368369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132712874 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097659355 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138168325 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134294842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099106542 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085976536 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097029392 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121520306 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17443949 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114320961 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136630951 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097136903 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083335267 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117219166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246584583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122224658 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105978844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102920718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105104397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124964553 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114059995 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110329571 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094680111 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170627186 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223283009 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110930838 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127026771 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100077282 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114286385 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146130324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144961302 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095925349 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081160034 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174688877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126166789 seconds)
  done (took 5.169288538 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186956458 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121095309 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168896785 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163588629 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140133359 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161439025 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115052914 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233866073 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.133600983 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130239471 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164299891 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143533955 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117231574 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082478438 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100248985 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122891739 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081188136 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675117685 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166947759 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13874937 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11629509 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089724537 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102150144 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372802069 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105070795 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082281916 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101133545 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066976188 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1591424 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098596109 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142316166 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119611073 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08199809 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138571815 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204575283 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109558475 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134929872 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095994515 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07947323 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177892591 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10449125 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079347564 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121743814 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134309295 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133573675 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096876683 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080864643 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204286315 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097817031 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113770135 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.933983498 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182726192 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090908353 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098415916 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321580143 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098013293 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097439149 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076914238 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263333305 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182482058 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094211112 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080787771 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098166696 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080715182 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101303246 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382108218 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096361186 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.716308925 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08949345 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108347746 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08428604 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098553751 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106129815 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088600712 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11506601 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080056834 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09952061 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07917135 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096506372 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081680595 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108931965 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101330539 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079942923 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164146382 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079813117 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11472038 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12699074 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083361261 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095830696 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129655574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082224462 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097485995 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132379134 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08165775 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109246118 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098266763 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142287738 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082055759 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194058112 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081361178 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126909752 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101420647 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078637358 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13048756 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113860169 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082235533 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103268215 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077506943 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09721819 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150350683 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096103687 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082558595 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10214016 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109840101 seconds)
  done (took 22.693473021 seconds)
done (took 39.448226149 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325205385 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102643795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102717386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102080982 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100598427 seconds)
  done (took 1.476461141 seconds)
done (took 2.194141346 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287364851 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172760445 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094227985 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165840573 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093296499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173617176 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159502173 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111653892 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219892811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077107207 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162911949 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093981989 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078302736 seconds)
  done (took 2.63768351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094361065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115664252 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08301022 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113072108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077914476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113072657 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093919576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119373391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111171475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085700667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095196403 seconds)
  done (took 1.822007384 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093912874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111990432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08317064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11166527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077344683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112060958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093164286 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117987177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111130051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086105667 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09530489 seconds)
  done (took 1.814237281 seconds)
done (took 6.987205356 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090309111 seconds)
  done (took 0.802454002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919409961 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.870449842 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112602889 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150400694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298992204 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192085954 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.480665803 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128250941 seconds)
  done (took 11.076813162 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144274423 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084453257 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103981461 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087316514 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105161694 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08456221 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101156764 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100884313 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0868902 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101251472 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083477921 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102346187 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101986306 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086886002 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103911888 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084281982 seconds)
  done (took 2.34360506 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119501605 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118892197 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105314724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107397892 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086346766 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10464141 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105294481 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088447735 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103023878 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104529728 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092213653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106292667 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105304295 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081523168 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107488493 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109589851 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087737309 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107779423 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109101339 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092140471 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106591468 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094881935 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087309626 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106172085 seconds)
  done (took 3.263488199 seconds)
done (took 18.203650338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158989587 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10801936 seconds)
  done (took 0.989780006 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09421924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111853273 seconds)
  done (took 0.932700742 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097069841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094900395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122047913 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109555227 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080840388 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095920041 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119977341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079880264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09566889 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080065073 seconds)
  done (took 1.706203933 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08243406 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109691693 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101552087 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094064897 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104828621 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09491531 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086822059 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098763016 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109149423 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076614661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101513454 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113149355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085644164 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115594919 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104271726 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083537108 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102043525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098140353 seconds)
  done (took 2.493396033 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078515165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096515154 seconds)
  done (took 0.90606201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080610005 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094428426 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080511317 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096150257 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093471436 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07651202 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094616212 seconds)
  done (took 1.346361848 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469057605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134535903 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252536384 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084190284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118570953 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303486343 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097888327 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085497354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10248829 seconds)
  done (took 2.4352549 seconds)
done (took 11.537616376 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092690321 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117295793 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114050498 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472228486 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10912056 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09904872 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162395228 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256102036 seconds)
done (took 2.157007924 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14848185 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325127667 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116355539 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068589495 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097158732 seconds)
  done (took 1.34771704 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079336045 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099611471 seconds)
  done (took 0.915173508 seconds)
done (took 3.151012774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079680039 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129494232 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080818951 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098231652 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077854111 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.095932812 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081724539 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.09809863 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079291599 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09839884 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098452014 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081610247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099240556 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082465164 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096552669 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078984227 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098607744 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07928735 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096621674 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078410953 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099075646 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080627156 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09744584 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078907614 seconds)
  done (took 2.937025815 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099541757 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097136477 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102702772 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08478612 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102180138 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086228177 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102065313 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097269221 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085750525 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099701484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100009045 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083206063 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099276193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084855601 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099491883 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10105065 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086398776 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096798528 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08250177 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100872117 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101823687 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080728714 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100859284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102214016 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083358619 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100489126 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082538549 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096802824 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102159499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083962505 seconds)
  done (took 3.567168497 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085025865 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094172809 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078695242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101555283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077354284 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097027435 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078123982 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095209395 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079500695 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094979774 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079275658 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094492719 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07741598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096354182 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079616941 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098393011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107789641 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078008713 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095053636 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078638149 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098146203 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077324042 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095301985 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07773171 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094649584 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077342625 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094998397 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077305271 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095561372 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077892551 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097916683 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081384699 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094719669 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085409908 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099718373 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077782553 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098259637 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07818208 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095712262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095359545 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077368303 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095371079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077791476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101682872 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078450505 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097965691 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078697417 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096547121 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079328178 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099413619 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077974383 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094460036 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079521026 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09611224 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098184083 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077738354 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095911135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077706906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096829325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07714351 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095146812 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077328226 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097075496 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078772072 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110701106 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084951238 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095190059 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079563989 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09589482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08028368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096283573 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109686672 seconds)
  done (took 7.136836281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082709453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105795359 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079403842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097601146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076656803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095916771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098639531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078570075 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097719827 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085233632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09541981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079418849 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097337672 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107437715 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07836826 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096872652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084952641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093032637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077933494 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099079541 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078692404 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098020116 seconds)
  done (took 2.732860089 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208657771 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105217283 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141843295 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106388006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084692823 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106103751 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101488592 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086570903 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101828321 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08373862 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100034509 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102449605 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084687859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100789847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100974918 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084666697 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102663355 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085335652 seconds)
  done (took 2.640939374 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092908398 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09869714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1018283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097705726 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099189901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083612108 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103705337 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107648224 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083054409 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098478261 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090306122 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099848716 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100783474 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081587008 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100748276 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08067009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100299248 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081832884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107286541 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104429146 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103777158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089785331 seconds)
  done (took 2.862690149 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095975891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101195212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118233665 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08284319 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095025214 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079275783 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105213985 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080908483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106131626 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10018689 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080644878 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097602059 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087691272 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097225822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103730245 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080862717 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100910182 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082521284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100592033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077600089 seconds)
  done (took 2.630033981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101748386 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099577482 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099676008 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091836406 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09983003 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082348821 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108385124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100189813 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082595215 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124463367 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100093983 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082606947 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109203415 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105177358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099792387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091771488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107810532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108654679 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081952923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099997706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124882865 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082584762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108921791 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.20861902 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082880815 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100247305 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100140127 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087816913 seconds)
  done (took 3.631723708 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081664013 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099102687 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078470896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096996797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078847708 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096469216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078942539 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096109853 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081090762 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096418763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082629506 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099980008 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083522456 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100612433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08569073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099764999 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083476188 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098106436 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080800662 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098265889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083552616 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101040237 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082765199 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096306574 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07955522 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09893313 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079034217 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095143321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08149715 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095826515 seconds)
  done (took 3.450004171 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090779136 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106984207 seconds)
  done (took 0.957335561 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078030091 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114371262 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079070495 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102676738 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085671444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099325973 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10778507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086420384 seconds)
  done (took 1.512537787 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095811305 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110044997 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08280857 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111973181 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11008317 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095781623 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159594147 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100225171 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087385593 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097704399 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094589716 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098518507 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104393488 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080923654 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104809147 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08779806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097115727 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087252259 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102171542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098047863 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083435066 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111289866 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084861366 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097089842 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084324487 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110474785 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110557504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085480046 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105451296 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111192553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089817163 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096368585 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083563635 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102945376 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082756001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110987053 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115430278 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086817689 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111353177 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085896483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113893188 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097796744 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089531732 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108133434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094711223 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102789026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085611146 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097423927 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099912578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086100736 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097905095 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084041601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096519303 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09138268 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106310501 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115607456 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082109762 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103880658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087287472 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106142204 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091524184 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104033401 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087398595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102460085 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110368964 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087868221 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109433412 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08015318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09627049 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082368195 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111452339 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126111182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093347144 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104582625 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085909066 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.10067375 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106269262 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08680018 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110406187 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093063385 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103615447 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109928085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092495697 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102306588 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087173137 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110788192 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101201773 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086447106 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100539269 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099411708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101727713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082399276 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10098362 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111496452 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08734362 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102569763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081759312 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109851401 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077179407 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103807345 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086070048 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103793671 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112426338 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091199105 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109186169 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110225817 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091263943 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102726462 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087829263 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09945133 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085639474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105178454 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091355072 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096814495 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105902453 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08614914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103431814 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092174224 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101317087 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084659365 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110521571 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109445621 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083072083 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099336179 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088049659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103266384 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088565667 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110726978 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101527834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080545389 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096937593 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088536917 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101435241 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087351533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105408483 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102611136 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077269684 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097439171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086859875 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10691331 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099682535 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082549737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104522725 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083943719 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099737249 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087018169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102162817 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081582295 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104517112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102292389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077418507 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1041518 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086334052 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098526465 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085685373 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10452531 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104111795 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084947176 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102208984 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0903321 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104988427 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083897961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103547092 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082910099 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112313227 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104815795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080304916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100632237 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09297907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101782453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084706982 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103280299 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106168076 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086185161 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101093128 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083906854 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104623814 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097401568 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108434235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103959568 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089587973 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10996128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082008418 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102884064 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101304042 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08399278 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101665174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089681143 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105320053 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10632319 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084061018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097159536 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088143659 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108345873 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0818137 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097797341 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08164928 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103440584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106685015 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086252592 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101812006 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081204647 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101089766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104578775 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086319172 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100123145 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081130475 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105164545 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081699043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106758897 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101898005 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091886346 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104516069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078478287 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104677006 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099254088 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088330168 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096281595 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080124848 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099222756 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083510329 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099479318 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0855462 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094758005 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089839992 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107937602 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101046906 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082096626 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101803124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091476163 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102477989 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085933169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104559136 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106147883 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095632896 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099280922 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085995039 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109694308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10086407 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076548488 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10570492 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08142388 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100646957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081580426 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099540642 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086652836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109628962 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105878548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076796901 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10316222 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08125263 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099821591 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07839996 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107068314 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104179563 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084542506 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109593581 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084952437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102145423 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086717397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101016986 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102041374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08458836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105139337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083889279 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103488745 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081770164 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102949364 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099889882 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08085714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102550773 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085010395 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101260013 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089152737 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100292861 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083180811 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104191149 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102211647 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083246923 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10125889 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082547892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104420758 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083680297 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101303858 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085010635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096786741 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109102595 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082396153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108703402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082616952 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097915671 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087608301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103217417 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106302405 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083777793 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102110814 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084360384 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101698555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085264218 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109643821 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099063463 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091002274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107724072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083867296 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10400878 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082944551 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102720478 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082395856 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103436551 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10154198 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083471866 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101005503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087634948 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103458863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082673857 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103340967 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102339728 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082994162 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101961946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077337073 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100520367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082363195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100956881 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090196619 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102183334 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10407306 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082133076 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102187179 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082319093 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09848415 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091916005 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111859043 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102564322 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092292556 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101350242 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08601113 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111136232 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0957099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082142279 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100892711 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080841565 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109281491 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083677119 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110002545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083285484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099933809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097832653 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08395993 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100225149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077762705 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099654699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087012712 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103514067 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082727795 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102087854 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085250088 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102594351 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1086863 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08226533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.1039826 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084510221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098868523 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082551775 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103617837 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088693767 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105346232 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100268011 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081449992 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102824559 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086174638 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.1022319 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082443738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103456326 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098197654 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101839763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105061637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087020887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095872979 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086790346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101109971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082462924 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10044412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087094953 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105261966 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102340833 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090358042 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101414253 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083548287 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102529804 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081458858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102095961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100873792 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08386362 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100884849 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084858353 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110033351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080904923 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103972916 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082770542 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102558514 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106171179 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084595207 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104557787 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090862087 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10558076 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103261332 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089462468 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105781196 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086401505 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103293627 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085227757 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107489659 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101377178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091363904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102387542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084757263 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10359667 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080340329 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101438852 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083114907 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101275517 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106464141 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08418944 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101176642 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083752262 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099636324 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085272915 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105863938 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109815441 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085182824 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104349635 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079081081 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098857208 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084005229 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100241035 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084802882 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104741417 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107882899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086109606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10218932 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082430939 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110116905 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0896354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108302869 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100928646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088808414 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103882137 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087583617 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106822447 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086532871 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108235429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112318228 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089231579 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104517242 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094372998 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1089392 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086464971 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105692706 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084350572 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102832734 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097858632 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084750289 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104267433 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090004166 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105294408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084051394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111447205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101939095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083985174 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106447094 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083512662 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109369141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079346698 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102496114 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103333348 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08551163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097921303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083172658 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099795937 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086886492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101683816 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078854507 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11157239 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109690526 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086408279 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101265938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083154107 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097440114 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078687138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103542503 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086613891 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106796946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11243176 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083102704 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101409634 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079344159 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102251262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087851359 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106405256 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080617549 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100394248 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08450028 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106789271 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111368659 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082835058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103299004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090095867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107744524 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084522649 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110340955 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100988737 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089985464 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116417779 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086830301 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104527624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089568094 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110630655 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102734759 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07906118 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103381014 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086899974 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104440333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087671749 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10609607 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118770213 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090074519 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104726773 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084598455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106980773 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084863366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112645216 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105853051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08835622 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110248127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089818198 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114788215 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106650801 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09124745 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106879674 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08966135 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104484615 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087745181 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103660603 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085213084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106742573 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106128032 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091539895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113062478 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083333992 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112435726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110442294 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08896518 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099089324 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083571787 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102508563 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079077928 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105027026 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082599058 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101415305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102711064 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083890518 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10460169 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090404114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107645588 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088419415 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105778515 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081045984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108198986 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109471103 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090474721 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103852018 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088021451 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108245862 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093937054 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112099929 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087317026 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108588608 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108416745 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088336291 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102682099 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094824353 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105921493 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089839604 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106992579 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087360476 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108842609 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111390144 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09308834 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108737957 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088818992 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119173883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108853802 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085190811 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104217905 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093181062 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105325361 seconds)
  done (took 58.279088402 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146763177 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081220577 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099312269 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083462651 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116318441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101555811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080172498 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099282693 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081203905 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101782471 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079083303 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098711412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108150682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123867073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093688245 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103585608 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098203473 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080757502 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09793107 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080693065 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108899322 seconds)
  done (took 2.871573579 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104932258 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116677683 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114592009 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119373423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089710074 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115187286 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114180282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115184694 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099386745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110519096 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11914797 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1157949 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091433509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111394318 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110743295 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09466402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119861408 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108817872 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116646461 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095326596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112966867 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114043502 seconds)
  done (took 3.218974496 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083703315 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102003813 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085446931 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097911096 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08348975 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09806744 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087636159 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100426107 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087146993 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102249262 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081362797 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102155515 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104409214 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079145776 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101945133 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081801739 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152570146 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10664136 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082918442 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104629041 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098347075 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085308397 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098108966 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080416021 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101945165 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088318077 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104235477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081748144 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102525305 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082094878 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104043649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080980989 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104811772 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103244528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082350661 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102085068 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08336552 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102949431 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080525468 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101256003 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084628578 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098915682 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083737716 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104561075 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08178665 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101224279 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084662233 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103093916 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097118388 seconds)
  done (took 5.445304332 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103622602 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162536653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085860601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142904404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121087332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113190135 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088535362 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142739832 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102735711 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082827158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122533929 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120161776 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104110203 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090024262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107734351 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104057661 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0859754 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102463664 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089051466 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103829985 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109118036 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091391294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11994621 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117900718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108600392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084811995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102876558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108471692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097056207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109821291 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10879874 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090515122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120876323 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108634739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083708688 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107740136 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122077313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104754108 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087372876 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101025995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087464931 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109381164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110834746 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101928437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104247529 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108705769 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084975273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101300435 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118238823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087429399 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114136512 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119907485 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108136233 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085016484 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110011895 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120295412 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084768638 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103050413 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088092258 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118072019 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101479422 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089383943 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118763503 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106429839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112941143 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099519738 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109446005 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109538172 seconds)
  done (took 8.127906306 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093663068 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111345004 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120705323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121619417 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091811174 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111716863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111501649 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091937579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111679723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117058156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111153718 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135056556 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08767152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11510243 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111076687 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091996832 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111417117 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110955148 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091841465 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111667552 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111316479 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120374933 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091793237 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120898856 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141601784 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106753151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091362151 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110771193 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121332267 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111469356 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124759983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091583057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111829506 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12311644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123944772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090981267 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103710994 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110640078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092019699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110506948 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106054284 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100981145 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111047395 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106299382 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091992212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11124137 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120314511 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124096306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115151506 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097303555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111791754 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122160754 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111292436 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091308016 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121420563 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147246731 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120484299 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121760151 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110754396 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101606864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12115476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128740103 seconds)
  done (took 7.688599892 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10835482 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116154262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117667461 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10051407 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083955588 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109306758 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083376167 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102513014 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114306833 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094319874 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116766988 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108682483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11225863 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097915405 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109541453 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112690599 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089390914 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109683268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113961821 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109519882 seconds)
  done (took 2.934531838 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09348711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124823641 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084904777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112092108 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10850489 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091958571 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107698123 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108470813 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086696961 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108445615 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097442672 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116631068 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105439237 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091127984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115935549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111018119 seconds)
  done (took 2.488557409 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096009802 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11784034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120002562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084462805 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104618159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080901055 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104932193 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100742501 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081504687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121151083 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085460865 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108951705 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104714638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085569069 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101220496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08881618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100964742 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083528134 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105698223 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12004539 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095803964 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105015683 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106046291 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087939868 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104938035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089713665 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106018132 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102902858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084003358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105134742 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085546787 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113549732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101914247 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084036053 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103152717 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084159293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105415067 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085586776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109127291 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104075497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083771555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104903137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085612805 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107208254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081537067 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106760724 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101212396 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091016761 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102913619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085758085 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105652638 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106715906 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087084848 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115997184 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088595787 seconds)
  done (took 6.243832703 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099741416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108614789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079970048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103197544 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088207775 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108072835 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109037289 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088678595 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108038622 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085110103 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107779464 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089453462 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108418531 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108449788 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088373181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108928355 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080993289 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106973139 seconds)
  done (took 2.612641575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091650493 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105109295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09389053 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105838581 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085374929 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107952392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080709275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104656235 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103443975 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086350239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105014571 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087452485 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104090443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08777474 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106066866 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084770971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108027762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103244777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085689708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101602393 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087666379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103869514 seconds)
  done (took 2.962887918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118545573 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125185961 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092484189 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230141342 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10481669 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133692157 seconds)
  done (took 1.639132964 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109136776 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122333575 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106763944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10700128 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115861645 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107690065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087506269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108478026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117935378 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101908743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108395212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11757633 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117323153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097840785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116197113 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115247144 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10740724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088685989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105939469 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128360696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088172236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117949969 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108393502 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086761663 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109041348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117519277 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116979151 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123225674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088766156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119012644 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114044981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087792222 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118718483 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122726084 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109093254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098400505 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107993515 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128788262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114932943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09812065 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109544121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116073693 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098693432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115403232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118305001 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108375155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093070381 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108162865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108164737 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135966958 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094613003 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118312635 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115769299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118590123 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118463497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135159668 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102741756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118069605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115285195 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122802842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117770682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094836696 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118017501 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12291335 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115055268 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117580268 seconds)
  done (took 8.15966528 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103396687 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126409681 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108087589 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123702179 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098425145 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108638193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107554197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088059985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108788386 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108094857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15278194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089060545 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118841115 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117592385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108890527 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088099758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108688772 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118487844 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087126694 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136044091 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109324269 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118377808 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117709206 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097729143 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123813093 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115315658 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107559923 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088319854 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108558924 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108471543 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094743003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109392689 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118409593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08683434 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117781898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10820356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087533803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114705915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108383112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115002909 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098469787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128510442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108607709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108568211 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123331535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089000889 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108876478 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087515297 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108828524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108028901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102215978 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123409884 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122661963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117586242 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109067414 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088477333 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108239052 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107858603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088786063 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115794229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117942629 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108825038 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136606075 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089506948 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108684065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118495011 seconds)
  done (took 8.038201965 seconds)
done (took 155.505639475 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098890622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136846675 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096686984 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168144824 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107474648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119621521 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138391134 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09840434 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106480253 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086753668 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106220754 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087135282 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171685489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085035287 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107071385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108522879 seconds)
  done (took 2.66386728 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201139206 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254360021 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105553475 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105632126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089441067 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11083658 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104744604 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091803045 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110865081 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08642688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108950886 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08665583 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106548573 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086272551 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110124199 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087970281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10722278 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087903615 seconds)
  done (took 2.887256742 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112998187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14597133 seconds)
  done (took 1.110288312 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118663055 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179882593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320085506 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155514644 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10742503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127786952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157133409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130432048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197635345 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123203685 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122557978 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097910957 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140619977 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11570382 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094757408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119021406 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142422925 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093039373 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115881865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116014534 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116969778 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107388384 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116077329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09370559 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180777116 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12081854 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085397545 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107303441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116411492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096021586 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114209715 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124619815 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097739174 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1768023 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102494958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177421738 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098241228 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115536686 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114361647 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091545124 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119477292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118827944 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104425902 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118776671 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085101798 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119339771 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105627527 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086416077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114930826 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097514159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116033062 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113939475 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156293004 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119079591 seconds)
  done (took 7.551178207 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801613325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160124473 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090502105 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884994395 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139136555 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104867612 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.785197321 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136178279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233511327 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759930114 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134857529 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121837205 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228599934 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238501705 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956049037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314677129 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672263038 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102969198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152448298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154251377 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119693829 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138030201 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131035487 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428924575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09601065 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113244843 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116715152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100400108 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158920988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125594639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114330397 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178806064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24816673 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207000962 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115850903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089294739 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112349457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169729244 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269417897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215762032 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180463368 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087511736 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111215431 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122138942 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111147593 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109909031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164405654 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174678005 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195424366 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092535073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120835938 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120423162 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120805919 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166204125 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121389794 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29965217 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312793634 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11252206 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121674997 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105572273 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264740588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123700874 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225385135 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116860296 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21463934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111816043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780055663 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19332341 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090461782 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11856756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119328121 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09552602 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12234983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167638511 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393362903 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125246481 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09363661 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112640481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204357399 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127066522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111101899 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163147334 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117060497 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10026964 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125933018 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123641764 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170539091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.235491463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124902895 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12045046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094067249 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125611739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116759162 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212811722 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221277848 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163665004 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210669571 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123998718 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163199716 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190664762 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099002884 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195171593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098413547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127235945 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122897547 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217791293 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146248382 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102096471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116445863 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119549198 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148249711 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126859131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097897865 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191607074 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460175068 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168715294 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11053378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127979845 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099158816 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159941165 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11953583 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259443313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121801597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1704809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120286498 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087855144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121842636 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165978737 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122564982 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121865058 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102286279 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120245935 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236273658 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218256919 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12359027 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220334193 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184209124 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119392438 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171998546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1225082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168154268 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120847506 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121621953 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096292747 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79589905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123241257 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098988936 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117510069 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188829276 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11156503 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102710513 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126531524 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10974397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751479601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128370153 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121340101 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103114837 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119270418 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12164335 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09599859 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117571769 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162944619 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23117125 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122183069 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119167003 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103349352 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182487217 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09632738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126082901 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125554206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124949349 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101097077 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116454512 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124230274 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170571653 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163221119 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222590041 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.591568768 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091790917 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126544508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229777819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09069899 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288058518 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120530026 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225927668 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168092779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121456542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31401791 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167518043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188699132 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127830243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175081838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08748282 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119035897 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166267121 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113536635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118475358 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163718775 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12623906 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101670557 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959924707 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112858388 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226532098 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108421843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1727081 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095173278 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122643369 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29670748 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112374095 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108075795 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187487412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094118733 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125723803 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.73543348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10453627 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122975192 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119680272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222062514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164652589 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098793134 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12041937 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122974201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165213862 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208465958 seconds)
  done (took 44.181912065 seconds)
done (took 59.240012895 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275749575 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213843131 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259009827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168660185 seconds)
  done (took 1.866621168 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171180784 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148427747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120104652 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108291747 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154536329 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085318928 seconds)
  done (took 1.661340887 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35246841 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271083058 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239643031 seconds)
  done (took 1.742041528 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287220407 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248838356 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353461418 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.397863129 seconds)
  done (took 2.285446936 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209450823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132162982 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111159666 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104744522 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197325133 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250084131 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141767713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202451666 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122722476 seconds)
  done (took 2.392973614 seconds)
done (took 10.828571708 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.251394713 seconds)
    (2/286) benchmarking ("sort", Float64, true)...
    done (took 0.267060975 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.20401658 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.135037005 seconds)
    (5/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22628483 seconds)
    (6/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120582801 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117532654 seconds)
    (8/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.233057123 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101794022 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129332193 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122503723 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092600504 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117545015 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.199571149 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100060899 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.206046532 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.226416046 seconds)
    (18/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.208832673 seconds)
    (19/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115925482 seconds)
    (20/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.229679866 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.218499333 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140665931 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.217490291 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127162931 seconds)
    (25/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12190705 seconds)
    (26/286) benchmarking ("sort", BigInt, true)...
    done (took 0.236214222 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116384773 seconds)
    (28/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103763107 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139877117 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200188712 seconds)
    (31/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.16390427 seconds)
    (32/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169237317 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154940656 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168612719 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111714621 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12302482 seconds)
    (37/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212601872 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17266686 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086661066 seconds)
    (40/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11375526 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.22597823 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095718734 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194000705 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.110742843 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094943756 seconds)
    (46/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11301643 seconds)
    (47/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110416894 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.120573333 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22270677 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17604196 seconds)
    (51/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066057827 seconds)
    (52/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067232084 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135591447 seconds)
    (54/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217277004 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093806478 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.194579315 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132561452 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092869189 seconds)
    (59/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121306498 seconds)
    (60/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119125708 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159316895 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179313874 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190422122 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15847678 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112023126 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174059012 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096766032 seconds)
    (68/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089675488 seconds)
    (69/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114812777 seconds)
    (70/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.15269103 seconds)
    (71/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067414513 seconds)
    (72/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171628111 seconds)
    (73/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.121062883 seconds)
    (74/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121334241 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173839175 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220120595 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066500152 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086597079 seconds)
    (79/286) benchmarking ("sort", Int8, true)...
    done (took 0.222118494 seconds)
    (80/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091086505 seconds)
    (81/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101042066 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090564032 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101070084 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121002808 seconds)
    (85/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162728991 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112949176 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089743663 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077946612 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.087747947 seconds)
    (90/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117229213 seconds)
    (91/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083926947 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110144958 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.214047312 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095143294 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184808902 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138368079 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089261408 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10994152 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094611443 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111899299 seconds)
    (101/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144056057 seconds)
    (102/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.130207544 seconds)
    (103/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174596708 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095979345 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121582738 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140011031 seconds)
    (107/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084518119 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108717971 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103024963 seconds)
    (110/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.14910838 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086420687 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11780415 seconds)
    (113/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089416109 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112506522 seconds)
    (115/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067025816 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109370732 seconds)
    (117/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097089652 seconds)
    (118/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089142852 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148706607 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090577802 seconds)
    (121/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.06699237 seconds)
    (122/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111769737 seconds)
    (123/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078120977 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093808505 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139396292 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134865272 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090418507 seconds)
    (128/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175513833 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.194547293 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.182530744 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119339836 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094477576 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111406722 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087501598 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118444752 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093470475 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109337014 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110029424 seconds)
    (139/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118176491 seconds)
    (140/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068552115 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124669132 seconds)
    (142/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067051088 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117845936 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113005377 seconds)
    (145/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174868874 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184576859 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117628388 seconds)
    (148/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091677281 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115615977 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088050683 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109451145 seconds)
    (152/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114456063 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118744258 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201606228 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068064963 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068355483 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092504928 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095617506 seconds)
    (159/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121096936 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08609739 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119123669 seconds)
    (162/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158868574 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.151055427 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120149823 seconds)
    (165/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087671403 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130563259 seconds)
    (167/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115920845 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094245172 seconds)
    (169/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231921033 seconds)
    (170/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114627908 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088665011 seconds)
    (172/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143516703 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14113064 seconds)
    (174/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.171787561 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091112409 seconds)
    (176/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221562258 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082455395 seconds)
    (178/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111164238 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067471759 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077444616 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090562622 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082809946 seconds)
    (183/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.143731315 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102808004 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110332037 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138477326 seconds)
    (187/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114293918 seconds)
    (188/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117125886 seconds)
    (189/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089038464 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120898416 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068987461 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091393992 seconds)
    (193/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149826891 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089313127 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.139740979 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.223608207 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109807654 seconds)
    (198/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098067208 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118386424 seconds)
    (200/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092190405 seconds)
    (201/286) benchmarking ("sort", Float64, false)...
    done (took 0.172761755 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109476269 seconds)
    (203/286) benchmarking ("sort", Int8, false)...
    done (took 0.189415512 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0911501 seconds)
    (205/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119191696 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096662778 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125269172 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119205924 seconds)
    (209/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075773233 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069562776 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091861394 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113341176 seconds)
    (213/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109421129 seconds)
    (214/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.310365486 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110898862 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089936363 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091465981 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067624799 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067785464 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109302318 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092733097 seconds)
    (222/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091016581 seconds)
    (223/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067054872 seconds)
    (224/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128000497 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.120433274 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 0.231528849 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109686176 seconds)
    (228/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077124066 seconds)
    (229/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090300162 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087960377 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110029758 seconds)
    (232/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093936337 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165550853 seconds)
    (234/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067171282 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092581509 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066750206 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077959938 seconds)
    (238/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142141166 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13412083 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086834798 seconds)
    (241/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066601079 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109482721 seconds)
    (243/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093543739 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090277202 seconds)
    (245/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.07684854 seconds)
    (246/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075517243 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157074579 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116191714 seconds)
    (249/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067675709 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11813557 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095805699 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110059366 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066645909 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085915479 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.09161449 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181905984 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068788572 seconds)
    (258/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124130871 seconds)
    (259/286) benchmarking ("sort", Float32, false)...
    done (took 0.150138442 seconds)
    (260/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117363283 seconds)
    (261/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067006312 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117823351 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068065418 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10892691 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086427136 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108352098 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087325374 seconds)
    (268/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090394322 seconds)
    (269/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069972994 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095396446 seconds)
    (271/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090729599 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077047663 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112612381 seconds)
    (274/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094316264 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114689053 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102879435 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091181124 seconds)
    (278/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077585685 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068927399 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109916861 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067895072 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116431254 seconds)
    (283/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08748202 seconds)
    (284/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113361398 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086975441 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115930163 seconds)
  done (took 36.116987076 seconds)
done (took 36.997908101 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100380731 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148478023 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096289845 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136676503 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123529969 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091492099 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11924193 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097667919 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123227249 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124792307 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098513049 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093861065 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097750779 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119658786 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096922003 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138723553 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124045886 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093868491 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119341636 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086419463 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118981645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088883739 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112388622 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069787219 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12167031 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095079766 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116532752 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120874113 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087313333 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110924436 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090081968 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117643857 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086764751 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123927787 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093230713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118850843 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097043073 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121458046 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111443905 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086211334 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119022752 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087179174 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117414502 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094040601 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116128645 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093455441 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118829231 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100232466 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139772142 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115594689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095436865 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12226847 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097051861 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11819571 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091046723 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119631119 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092319385 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140512409 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118728168 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092024111 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118947826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095163609 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116416455 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095481876 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119853328 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121508458 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09839223 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116302424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097117932 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116308168 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08768943 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119505699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090022791 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110723256 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095839302 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121667677 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085512008 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117034723 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118179423 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092114314 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111066345 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089807857 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112290828 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093845122 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113089797 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069798194 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114614866 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093526938 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110905994 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096540555 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117145355 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094776826 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113118277 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098894229 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110784646 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092306146 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111753339 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087807325 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11356466 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091473337 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110888352 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089952906 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120256004 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089102986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118378655 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124365099 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086661116 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117105189 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086747851 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1112364 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10193087 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121495365 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087354009 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116709792 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085960407 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11858004 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086435926 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110888467 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086805871 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110924061 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093879476 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111412106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113527052 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09471973 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126086337 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087047276 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115192181 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091506632 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110829382 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093583401 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111968551 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087642765 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113419435 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078657231 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114143489 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087691672 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118498444 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090820291 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119403612 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08937426 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120852961 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09268154 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117712805 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092949323 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110763605 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074625963 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116593799 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090043268 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113428736 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087979569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113441618 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086996879 seconds)
done (took 16.961583377 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088527711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184364481 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151742032 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142282158 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107499914 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112489657 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122158122 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119028152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114065268 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14306854 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111390373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131645837 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147878612 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08694197 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112002068 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090801464 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113459558 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101990691 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145459499 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133218834 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165412411 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087542984 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147070632 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135556416 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120940042 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104925028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113071821 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092750721 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115571818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112361332 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132970936 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11530693 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088324014 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134036131 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104910921 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120247263 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087495261 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119221112 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088207509 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11291742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140876673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133581802 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092586966 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118732681 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092022918 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114716285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089337205 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120775031 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098942841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117289106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12658887 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156718429 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091528165 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122002847 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086852237 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122600431 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121172696 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090678226 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112630043 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090465843 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11136295 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091330977 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127628374 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142381679 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09268889 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122737653 seconds)
  done (took 8.616812845 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105067811 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140518351 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106303591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13115338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112003412 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088372917 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113485949 seconds)
  done (took 1.739342307 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088621893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134880849 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112232749 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136403182 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13280036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112264982 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123893256 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089027555 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13191262 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089732371 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135018411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152267129 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09096342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121556335 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138399184 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088735895 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138209793 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089140605 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116741012 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112540462 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117003658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135770417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091194116 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113395716 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103745321 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114365389 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162340703 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094762375 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115038824 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092253515 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111991462 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152100645 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103419662 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125298758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088859736 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129838595 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128357921 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087248142 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126452536 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094587794 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.1279465 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090723532 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115087445 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087585162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118317487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099769913 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118484721 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089655796 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116998163 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134720613 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089996331 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128329209 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.106916376 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118334843 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090941933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119811016 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099015293 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115176108 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133871121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090607146 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131436448 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105654171 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128564255 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130626461 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091918847 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128653605 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104345304 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116353518 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091041685 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11794686 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106528079 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112281336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115643299 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100406907 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116233049 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11294626 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137079226 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090884835 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12597958 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114261748 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090030292 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114915135 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112555651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118511289 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089899081 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118488728 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092269253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112662125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089728777 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11739117 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087776779 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115578569 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09543262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115225209 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091812913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131724253 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115693506 seconds)
  done (took 11.851571938 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090198652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115108259 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092759127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114950977 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0905951 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115515763 seconds)
  done (took 1.572056473 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114223216 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118108477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105265506 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121755277 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155552083 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103998758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130247909 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123828512 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10845847 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127580713 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129800914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105299735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136807102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121513984 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105188127 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120640469 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104134068 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125001207 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12747868 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097363671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137526549 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121314027 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097303598 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132664421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118787791 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096398306 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126634525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102949827 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127766249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123505821 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096225976 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118757305 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096825478 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123571333 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132790339 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09655107 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121868136 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119778028 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100436761 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118024514 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10492984 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122366544 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127062286 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09526077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125020749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120751525 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094298446 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125283573 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103684056 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119069804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118838788 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095782236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119825646 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095373944 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124060281 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126499185 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09401648 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129538232 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122011556 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096320395 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118420152 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094164852 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124792865 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118486803 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105440864 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119584075 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120681767 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097996247 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122612999 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096251598 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119717948 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093585167 seconds)
  done (took 9.24118238 seconds)
done (took 33.961042448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690217522 seconds)
  done (took 1.642835798 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.814449289 seconds)
  done (took 1.770305669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.201708564 seconds)
  done (took 18.184078681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492320173 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577089084 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993640513 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178150732 seconds)
  done (took 3.195065459 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945033398 seconds)
  done (took 1.921115511 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283089256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236144033 seconds)
  done (took 1.479930966 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76935636 seconds)
  done (took 1.741205306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365476598 seconds)
  done (took 2.328802006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327750676 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18407491 seconds)
  done (took 1.480524425 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547098256 seconds)
  done (took 1.516527722 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.334386635 seconds)
  done (took 11.309235981 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267915564 seconds)
  done (took 1.248640585 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301545586 seconds)
  done (took 1.273088202 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.499112526 seconds)
  done (took 4.472225475 seconds)
done (took 54.530527225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098788307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127705778 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102666572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124313465 seconds)
  done (took 1.420390007 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10140742 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121412185 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101188201 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121324793 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126238116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097047553 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123461729 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1016091 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121658364 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096725566 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121137259 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12013914 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099140274 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123375997 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093580761 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12436659 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099777296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12122772 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124400474 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09730612 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119571206 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098584361 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124471119 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094065618 seconds)
  done (took 3.650063684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100576686 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120595162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096794355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118682676 seconds)
  done (took 1.418195461 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100012065 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131126692 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105662529 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125901802 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131571202 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105508366 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117601504 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092216919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120137214 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100257102 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116753224 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139498843 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106439074 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124802182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101581341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114456574 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091858255 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131300166 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125426561 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101399213 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118776575 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09997039 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116138042 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109958527 seconds)
  done (took 3.706254167 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172610051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127580707 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139735129 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095646326 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16082543 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141322621 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088821031 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141298453 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088098695 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131409602 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11864749 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134016334 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129652799 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088103362 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115612832 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088582469 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129403028 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129885254 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09129955 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12759258 seconds)
  done (took 3.42562545 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098557234 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118291704 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088631297 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117626 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099847461 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121723985 seconds)
  done (took 1.628134546 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091078523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114567086 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090733904 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11502222 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095105859 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116234502 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089257934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115245827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090504251 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115292433 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089032733 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114224624 seconds)
  done (took 2.21999395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50664164 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120450629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121426133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088807885 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12494612 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089746699 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130115319 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09356201 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142435135 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089324421 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116649803 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091418622 seconds)
  done (took 2.698672992 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236974199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126137978 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284732864 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367285065 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156445713 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164558866 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279081624 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166354714 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198718979 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150537303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23085615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196897279 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152667158 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192858547 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138302722 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145430147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189731473 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251942449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15363652 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211713813 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207090777 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167465424 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180786682 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152350161 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111786349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194851838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095669135 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129856714 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234619594 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179275205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190545189 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161842682 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147369865 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237837575 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24971081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195649204 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279047417 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134726318 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167050171 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142406314 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265200753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139498956 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234095491 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156369807 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105671034 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221264421 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166125555 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177189288 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146921578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140058976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198425123 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239935419 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193352095 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139391761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30145074 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151180575 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157859704 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189632162 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253119846 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22670167 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18962685 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121853498 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188597245 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191188605 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21189135 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152422246 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18310487 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148590495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183763421 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188725645 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166921761 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204362524 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180013642 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139516011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171598451 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174089427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173790801 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260337875 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186313633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123346298 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170007634 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1505357 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104702841 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195738259 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125739125 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215658785 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144249956 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165073524 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20909194 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159742809 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161961971 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220547931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185259895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149254294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084013645 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153070501 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156466093 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176503626 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140106133 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160115174 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15700749 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130263921 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16893982 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098034316 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211145617 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091778776 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174207289 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183001298 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128479685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162429984 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154556647 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151055401 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177498252 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202038009 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141441215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134328745 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20952246 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178879452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141663088 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177235896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228529571 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117572866 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15020717 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227554712 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217094093 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141016069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230539213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153467549 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108707467 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133818494 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182077551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156129976 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162917049 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133262098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184127247 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234383949 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099423799 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139237896 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195505355 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134795623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132946323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155038449 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146959473 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111804131 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144664009 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145169894 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176042827 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180612587 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155307402 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167949793 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150452035 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250058006 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14103075 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151477643 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122058043 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121681812 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194034751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224937548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104659386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233978937 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172552183 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199682849 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196341286 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107973439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17859601 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131411878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093680765 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221169162 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16915563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162132032 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197559847 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223378885 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181016313 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182363305 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165396649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201725566 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165891019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157163162 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11134501 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160984273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160143644 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124693128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112727783 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135403064 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150424032 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142838868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133170559 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199041245 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170964633 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216711675 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160258632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122379715 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209068903 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102211096 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178062362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205421098 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145747138 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200544105 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194643145 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214153569 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117503223 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228450643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09435351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12625665 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141993487 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17182951 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133946093 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108519767 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163451645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179979122 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208248296 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171547966 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206748077 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202147094 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191761648 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094610754 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168974823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18420712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203416266 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153678573 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139795605 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151929241 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177855174 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155304514 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255262414 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170659199 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175629068 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232970029 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124427837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13273852 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151039652 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178415983 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154779256 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175895436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147735598 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139654894 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160947977 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103659832 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160358938 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213037102 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162577854 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187513195 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150698507 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185617652 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128511534 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162342006 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161007786 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165325484 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081746349 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202324078 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203777767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147438202 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167050386 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215690463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10516221 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308778212 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236101811 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195733344 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138198262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154988336 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161471709 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163529761 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172204896 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179938845 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159773133 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188100596 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160597041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137350594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111456566 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150956814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152808866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132937871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149317484 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178191878 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138626525 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189896236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157043385 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159957116 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174487349 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150796034 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117842318 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15041786 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243722581 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184426964 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241189271 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150951766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179482938 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20712849 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127316428 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104054999 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134363236 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178546296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137557678 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192210903 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215175518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200415145 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179311429 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207721938 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112201638 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120923908 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158741686 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16889497 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203715816 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148483349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147446359 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231887207 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109773738 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133665751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167379918 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289929059 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146036771 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195790908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108210216 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281658392 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10042198 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132667445 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16422519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236634887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10831827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177657643 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171083444 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162099142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163889263 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149990677 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192421944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238440867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198846432 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212099888 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105354409 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157620718 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175534721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221464903 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157115145 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111343679 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232567293 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196033069 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195954945 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142994735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169167732 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169325715 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158413188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215061836 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108372782 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234916196 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134803683 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192751477 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153663045 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138740506 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177590469 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189056319 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140510183 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187305199 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211941053 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107297166 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135433349 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166724374 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179253536 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154416902 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128017489 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18211304 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126654925 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195770504 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261854074 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134305727 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155830908 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118798515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136826686 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154827637 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158967461 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139588483 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140845788 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228452221 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13447086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192240717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228656084 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173521787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175231726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146149413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694355993 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104089209 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224707027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118710348 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235462572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151150529 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17354977 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159961245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169356999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193567211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161148931 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231075627 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221491989 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181385256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132220838 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159463054 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15730691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144491239 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126685121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168358391 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160368844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145049206 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206132795 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16387473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107210642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140794482 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198812796 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149668036 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184924659 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179476374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13960359 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174089235 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217869562 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106107956 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207983385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207668266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142180655 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149379298 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134583731 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148966655 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233437963 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12609842 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188334249 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210835345 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132034251 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196117274 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118487219 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222329797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159172222 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186331319 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142666988 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158829627 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156905727 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138390135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102072816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156616415 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16744544 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151515063 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161049807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165412368 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196704206 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123328332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11690654 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310567115 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177451598 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215710434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137151537 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135785466 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163224537 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121952723 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205900189 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180106723 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136655664 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107507865 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13820443 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130202848 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136139817 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157219224 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194180693 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166074646 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234605124 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109054176 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279688189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140546249 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156762628 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089129422 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133560439 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150721644 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145721647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156565269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193760438 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262941026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150325627 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10721585 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150498438 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127142248 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108383259 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164765528 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166019528 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177258064 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145162766 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109477454 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155062643 seconds)
  done (took 82.632411919 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163216471 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133154844 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147767733 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202187565 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177139053 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270261063 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210361579 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254498731 seconds)
  done (took 2.630080475 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094065873 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146695351 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158305823 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13370248 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091779831 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119827172 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343316332 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133648502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117099687 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121181119 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174383889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094311617 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548525836 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091714015 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120331032 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.1087848 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092821307 seconds)
  done (took 3.757527052 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.167274774 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497894602 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.942873265 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194990359 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160380042 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117545958 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706731794 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095586352 seconds)
  done (took 11.958939259 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116061808 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136238077 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123926107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153042397 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140946086 seconds)
  done (took 1.757080188 seconds)
done (took 123.873082391 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097181558 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127768111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098595708 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130427747 seconds)
  done (took 1.52007175 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094579357 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071010202 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101003686 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074597638 seconds)
  done (took 1.417188644 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189821603 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168534279 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402090576 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071807265 seconds)
  done (took 1.580960766 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115413437 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13285792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105322347 seconds)
  done (took 1.442840797 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105948544 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129406103 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102986349 seconds)
  done (took 1.423223429 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106118487 seconds)
  done (took 1.190422136 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10867747 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137777289 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110172902 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136077247 seconds)
  done (took 1.578564586 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099156243 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127369309 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10871233 seconds)
  done (took 1.41950018 seconds)
done (took 13.008532622 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102752051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41867447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413307359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117037052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723171473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380644668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032927699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14654813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166345528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093461389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139877228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673717546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022070926 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374900652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983044722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.466189356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677244622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121854112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120103814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094515579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017165073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0925698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122094217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093107515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702739263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426640664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095420901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466989104 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092576186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127076144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382875547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123181677 seconds)
  done (took 17.084208572 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095194753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174309607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098958169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137800554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123249463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093997861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127017154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094330933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179961651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123009782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111411963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122099866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126406428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095938588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14172711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092495727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125038409 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092527411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121429595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121502823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112244139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120130481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094128383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12156837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093179876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135506699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122978718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093311468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120564833 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098405132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127717848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095224436 seconds)
  done (took 4.817591224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140844881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18227815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12846297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126920707 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168597809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123960355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198800211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117663852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182099934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122442032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139118592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092534222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157067476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122394604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114744428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120979891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096541497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122019796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092762267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123442262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139564213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093464126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121857452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093417216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123554192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107924357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123738949 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120891248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093576221 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126695824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099603489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124374725 seconds)
  done (took 5.134189547 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097754214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126119057 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110126375 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138704006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096224364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125382878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0975316 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124878561 seconds)
  done (took 2.006221409 seconds)
done (took 30.129642725 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111412992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127413274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106881641 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13439604 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102928889 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132198482 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091683196 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134139141 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13416403 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101890087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138288074 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093463746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122810509 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092108552 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135687884 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097848874 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132710704 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103971557 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134012031 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132492017 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095662725 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133028486 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103141384 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133518861 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104902032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132896908 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137644662 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099894079 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122662333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095295493 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124628409 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103934129 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123842855 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105772281 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127034852 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097916315 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12354741 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094249351 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133373969 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132574827 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100331283 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13368232 seconds)
  done (took 6.001970161 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107366764 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139212906 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104341845 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080881642 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117130539 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080792165 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13739368 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079154888 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109955332 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107231566 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075098465 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105854669 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078553448 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101657474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077878361 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075611921 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108691537 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076030851 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076767252 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105614768 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079445215 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07233199 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107700758 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078728267 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074563307 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110332211 seconds)
  done (took 3.563464322 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10061718 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134248804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113935014 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183781227 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160419306 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099307019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131537397 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139677056 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1092596 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119949703 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096667001 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149549148 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109414704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130088067 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092228486 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137060295 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134520924 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094602779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128375054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112253325 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138758019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102945821 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141106373 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132820402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092118574 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122885938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097843102 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134932049 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09743192 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13134729 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096649822 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125220488 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122522111 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104549528 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126509224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094641152 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141699437 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103168148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130815568 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09348688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129580913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122012805 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114350567 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161579863 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091672188 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130129865 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095630266 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133452733 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121600953 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111636368 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132300093 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091898667 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125380645 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092024459 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122764908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107003404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124353325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095356012 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131535226 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127275323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106105445 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125266653 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109818417 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122270873 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100328315 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121809986 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093486094 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12118614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143779813 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09504879 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160769228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094154473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123741822 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102123967 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13094727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129526915 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094650729 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137385353 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102387155 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125832255 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10254422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126075167 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096030568 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141081173 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123818265 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095339762 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122037309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100824623 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124099238 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094387529 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137098697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092652884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126115074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111063928 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122770805 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123089983 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100731221 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126725484 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092338612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136597697 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099278708 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123844293 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102685431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124414169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12511622 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103291243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12651388 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092198775 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127707241 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10011707 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123153564 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093900136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126147571 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093794755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132297398 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128563676 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099463215 seconds)
  done (took 14.833636521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230988817 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216391209 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235664753 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263505797 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136177346 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114402811 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213447211 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155667608 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124660952 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160424727 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171317399 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181165077 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139736422 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.211677898 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171114418 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093488221 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143782019 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135720213 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.24568274 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258754612 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144151333 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101242318 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162705856 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160155183 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137567951 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102247173 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140586395 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134461644 seconds)
  done (took 5.80124548 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108790728 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156520469 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098208954 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145518843 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149589817 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093308511 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12808883 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094566776 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135899338 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134964451 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093184857 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129342747 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100451342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132324511 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124083342 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103262826 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132096593 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095210393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126386857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097089878 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133807196 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102053893 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128192446 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121463023 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103585401 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122283011 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08727609 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142548893 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122342385 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115953403 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121481207 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101823785 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137798097 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094431814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123255749 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096074644 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125900977 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09559664 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125603994 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092521834 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123145503 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077676785 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12270934 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137570783 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100040129 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080508378 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130882059 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128431893 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09590809 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121147934 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096410733 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125955832 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096846939 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130589042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097241638 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124986693 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097338563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116277544 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100233001 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125448388 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084743203 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121515036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099706296 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117922557 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101622644 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12811166 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092722943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125775696 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0985614 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129665987 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095792988 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130415937 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091310988 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126361322 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095353417 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129418252 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126408946 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093097851 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122192526 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09436289 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075501394 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124549535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074189895 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12662981 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092762413 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122794889 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095210639 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130251322 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138846501 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095414904 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133275846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094299994 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123035469 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096909128 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114120011 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096486371 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139968554 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141187087 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094411307 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121923893 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108211466 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12653172 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092947648 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106917994 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102172748 seconds)
  done (took 12.991540537 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130256488 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153428399 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124950307 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112621664 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157759918 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158101164 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101311313 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130737481 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095171516 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14260796 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093603197 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132591065 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093565659 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137843439 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157025367 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104557718 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126043584 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107439861 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128621021 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168059556 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111733783 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143085374 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11046185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124184623 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128241048 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110699349 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161197436 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107915746 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137791954 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142648699 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108918532 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161427956 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144013542 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098470561 seconds)
  done (took 5.479737914 seconds)
done (took 49.761841327 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.193089421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435656141 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187400572 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118699872 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.207475881 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22517079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.203842782 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.18704472 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.303460604 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193533144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457560544 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.794954907 seconds)
done (took 58.627622205 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.239734055 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345664866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.477867635 seconds)
  done (took 3.938609791 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.793965805 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.128510072 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448172669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188697737 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193841143 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.48606457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.895195965 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.556310241 seconds)
  done (took 28.012629692 seconds)
done (took 42.104063496 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200566303 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.226442029 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.218929211 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168514567 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300892983 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.234164571 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.55789692 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.218952391 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207392819 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17540005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.209601623 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203379255 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193945657 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.555169548 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198713755 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194045432 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.22472433 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.692790732 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.593255691 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202911914 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.229688166 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25086496 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.213179934 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206706056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236172756 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196601349 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194117927 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204074202 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.767094399 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198806249 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204102092 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.767870049 seconds)
  done (took 190.563888285 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190479251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.308078524 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.382820921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.235321914 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.531065566 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.395349972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340096491 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.744271706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.212893845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.191637934 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.546127827 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19299399 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.610909531 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164264617 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222116159 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.255221573 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.510174629 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.577800963 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229587425 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.307678149 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194151739 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.46557291 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.374531835 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.46385664 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.221831938 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.233159811 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.201069779 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.207339324 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384834121 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.432906341 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.256752467 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.239136901 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816738573 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048340251 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.217533206 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.208419083 seconds)
  done (took 150.233333188 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19187407 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192321531 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193551121 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224474037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192205915 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.774386388 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779712289 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708142813 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.63514257 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197636742 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.611523099 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502930587 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19440651 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287005793 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206106824 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193846738 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194708996 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209086805 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236071409 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19772149 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194653196 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778350278 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209829298 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.318458306 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.370852692 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209464523 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227568004 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584494933 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193289195 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227824062 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.526212497 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243768716 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194735272 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588860658 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.358863443 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308278776 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196461476 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228059946 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.19363739 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475164236 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194794109 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195634645 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19843544 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895217271 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199121722 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.777281306 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199380496 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.149421314 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194332563 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195739214 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.542196068 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898620514 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215376498 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195474362 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199490816 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195298883 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195379699 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228206478 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.533691708 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.291880395 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212713595 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195985506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199152687 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228251107 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195777444 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.267822372 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196983778 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.413199986 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.267362707 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30420525 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783311077 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200758274 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295214703 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318648731 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19727379 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196048175 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196291542 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195963347 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308610517 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196903425 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607703953 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373230673 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214285711 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.62052481 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298856825 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196860214 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612783454 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202097664 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196751753 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.038634549 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298814794 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198825161 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198194938 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197640272 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.613350454 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78574376 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501440264 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202377226 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.559110699 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201788779 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.626082284 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778824165 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20208928 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.890675868 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203432974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311917203 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.375523379 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.216242377 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.19792057 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.618578623 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202524351 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257454965 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198052074 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597467167 seconds)
  done (took 365.53829992 seconds)
done (took 707.454200795 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.795328318 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.791481904 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.900125656 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.786487993 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.747304309 seconds)
  done (took 10.145682109 seconds)
done (took 11.272153219 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386415882 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385579621 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258478769 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.386767421 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231266814 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403596143 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.367565427 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223594523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299298618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280793662 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29919991 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25215689 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234356974 seconds)
  done (took 18.135378579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523311669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511019942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262450086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512247675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239407237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515385491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397413408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421791604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413824148 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232879697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213576772 seconds)
  done (took 16.369999265 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533821426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515110745 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267251312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513527291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240019518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544182658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403159375 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424089398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436444857 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233703835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214720477 seconds)
  done (took 16.45278208 seconds)
done (took 52.086182371 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209937891 seconds)
  done (took 2.3373436 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244019097 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407001882 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230231528 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215697408 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212089901 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211571523 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215039856 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.211648231 seconds)
  done (took 11.075473571 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210163899 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207433197 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210299666 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210900982 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.210005349 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207005588 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207642712 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.207705329 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21064363 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207178463 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207518576 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210455214 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209134338 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.210536052 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211125844 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208877112 seconds)
  done (took 20.475969073 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209897609 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207960153 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208220032 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20840206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208253176 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207813122 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209961151 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208231096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20752832 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208909251 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209776587 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208391773 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20957424 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20826039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209045911 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209549999 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208239393 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209824368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.213363556 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208703514 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20966447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209502884 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210081349 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209874373 seconds)
  done (took 30.150516992 seconds)
done (took 65.167940835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.847527114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.968556242 seconds)
  done (took 6.94574946 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.2106011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210088528 seconds)
  done (took 3.552612043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212493637 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211837376 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211196373 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212264169 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213150511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211036896 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212362463 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212471538 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212428614 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212001013 seconds)
  done (took 13.250969283 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.2126625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212045587 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210394304 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213203437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212300597 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21064555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.212948752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213096488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213276016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210647532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.213498587 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210768107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215183372 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211877261 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212641693 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211570206 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210963235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211329918 seconds)
  done (took 22.950707357 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214402099 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213482113 seconds)
  done (took 3.559932938 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211045538 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211614517 seconds)
    (3/7) benchmarking "month"...
    done (took 1.211890934 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211169242 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211590416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211666322 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210629331 seconds)
  done (took 9.611012408 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214182973 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381708167 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464983385 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813583882 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215287227 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216847891 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.08952225 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218670661 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.219182554 seconds)
  done (took 13.966017904 seconds)
done (took 74.96874242 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.234303474 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.223959698 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.482681413 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219076564 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242209375 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50702001 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.219111352 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333341205 seconds)
done (took 37.596269196 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.225132156 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197900735 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.001757201 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.20571467 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.303383383 seconds)
  done (took 18.84287761 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.263960071 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547870295 seconds)
  done (took 4.946089755 seconds)
done (took 31.14962157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216197217 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212405429 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216595994 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21650249 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213746511 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.21300635 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216010136 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.214678451 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213575088 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.216732587 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21575483 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.215728066 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.216879368 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216201585 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213442856 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213810547 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216915861 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214300286 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213351267 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21548407 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216080285 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217266604 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.214825823 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214435501 seconds)
  done (took 30.298525969 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218029703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215633929 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218019632 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.217557593 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.2148363 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.217887046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.217548688 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215043816 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217116285 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218098648 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215592785 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215280298 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217789594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215244552 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217764053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215784132 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.217642653 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215624874 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218173728 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215534198 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.218465171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215097055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.216038751 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217820538 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215237833 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216659296 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.218000585 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216971653 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218424714 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216984722 seconds)
  done (took 37.638948807 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22385738 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.225871543 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21910828 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219176407 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.219011224 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219372229 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219413789 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.219642645 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219365953 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21828274 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.218740249 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219240801 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220025661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.219813278 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.22027546 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.220384495 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219927175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221318867 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220319899 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22081607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.219856582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220935231 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219706092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219731158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.219911249 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220515832 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.220147822 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22040422 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219829125 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220634658 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220780212 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220386058 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221358387 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221133646 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.221133348 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221227305 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225177277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.2283084 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221937807 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221364882 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221062914 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221743528 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221198675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.221251778 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.221690198 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.221418546 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221686482 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221768155 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22154919 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222298403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223394259 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221495929 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22240831 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.222732088 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221779736 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222138256 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.222328055 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222268564 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222097601 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.222237618 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222793307 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.222454551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.222524469 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223125304 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222187476 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223703479 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221858297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222575226 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.222830694 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.223800242 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22360141 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223208583 seconds)
  done (took 89.081060253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223468761 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221346289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220619526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220225231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220767796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22342486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22138637 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223836444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221203209 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.223570517 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224517887 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222262971 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222152309 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.224847772 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224378298 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222231722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225286233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221581346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22568526 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225692172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22539203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222902193 seconds)
  done (took 28.047982083 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225634954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226329782 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222456475 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225351992 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224658694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224627743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225573698 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227235834 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224358012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222953014 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223248799 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225236448 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222759478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222999695 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222391634 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223619766 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225955159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225014251 seconds)
  done (took 23.182892549 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223753524 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.223340496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226558837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22343263 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22327105 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227173128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223098949 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226247952 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226466799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225392928 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225789328 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226636276 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.227168825 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224396901 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226501948 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223525248 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227172958 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223855318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226581193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222899041 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224021523 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227540103 seconds)
  done (took 28.09851129 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227292967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226778344 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.224508368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224611613 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223960812 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227284622 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.226170995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224905485 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22767214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.226919378 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225599834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228104557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22622878 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225499248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224449486 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22506552 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228258646 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226477286 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22807715 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225567217 seconds)
  done (took 25.668069523 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228967692 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229889031 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230194853 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229983527 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231087333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230146098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230278293 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230993434 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230076361 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231195997 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229601103 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230913788 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230899967 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230621178 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231928403 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231902304 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230764284 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231021999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.230871644 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23175773 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232465988 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230497889 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231209432 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231910556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232265414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232355773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232013786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232051069 seconds)
  done (took 35.615182123 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230220901 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232074293 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228113251 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229250135 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22789369 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229511702 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227827573 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228614935 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231859568 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227380752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231721265 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231550891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231857855 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230793441 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231086871 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231799295 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232200339 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229240234 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229756597 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229186572 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232402143 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231235267 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233135338 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228758854 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229220567 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232636434 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229307641 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230180407 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232222234 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229408734 seconds)
  done (took 38.058793007 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251362343 seconds)
    (2/2) benchmarking "in"...
    done (took 1.25101876 seconds)
  done (took 3.651053521 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230265839 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232793202 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.232866715 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228879321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231013072 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233326729 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23283958 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23124995 seconds)
  done (took 11.002200721 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23327925 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237569483 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235967919 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23339393 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236469766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234448514 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241186445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255856884 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235377458 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237264937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241649756 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242164384 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236406572 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235376305 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233689521 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235510789 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233703703 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235137936 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235260374 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234904562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235340704 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235848101 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237725233 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232404339 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235815073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244248145 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25892055 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.235374476 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235279063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.239156157 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236122022 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232548296 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235644567 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237035793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235173523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236297783 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244859457 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254585184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241821279 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256609617 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23689346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23407133 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2373752 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237802053 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236775044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237022296 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23717968 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234496496 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237093172 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239672866 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242338142 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236948751 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.2341798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239822037 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237139774 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24248887 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257178982 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240656328 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246415861 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.246631097 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270771225 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262572191 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238907641 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238514184 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247263854 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261141232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244501811 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254194666 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23377875 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237007195 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244311508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27029737 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26378254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238040601 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238838636 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237738247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24043356 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238114415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244437305 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260626532 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24474346 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239550334 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248507492 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262062102 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.238772748 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238761245 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239295682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240634886 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240192772 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249070639 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259493793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239949024 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24017803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239740183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240695172 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.240483258 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238924502 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240855059 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236610029 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240454602 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241537186 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243804701 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249229071 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240711236 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241625497 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.247034643 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261130409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240474332 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247582432 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239768574 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241098459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242778168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.246534419 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23866324 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243593469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249495448 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241623749 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242890853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242390836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242738899 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250743285 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269532505 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24145775 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.241091301 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247065215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253863526 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242210625 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245296108 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242242875 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238972925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239524213 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243557176 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241977109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242737687 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242728425 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243578537 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.240105967 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.242419658 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243385673 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243036493 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243975935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.24284319 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242830177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245149348 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243909832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244602553 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.248828554 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263212838 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.244376962 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244190942 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.240593816 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242543591 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244380084 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.244267257 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243252972 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24414894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24398916 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.244296124 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245142378 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242905101 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244370108 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243755552 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247936583 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245030593 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24728607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243710153 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241245996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243439205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244737656 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242574935 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.245008423 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242700961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247504048 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252062603 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245185403 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245040605 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246600878 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244067194 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245488409 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245868301 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248093228 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.253433236 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244284927 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250779045 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266410703 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245845471 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245616915 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245479315 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244805566 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246395875 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.249520469 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252992321 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257231146 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271929192 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247231413 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251178665 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24631282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25046388 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25029748 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245973515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246958716 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247195568 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247087026 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247467479 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248370949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.247026973 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248290723 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.24723963 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.24684664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248464498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247000966 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.247655198 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247944659 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.244450468 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247742908 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247093666 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248127759 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244956575 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246323484 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247967424 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248830333 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247910943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.253114139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245183868 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249724331 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248991287 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247726651 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246671908 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248339796 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249960678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247467867 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255144228 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268858017 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249128275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254938318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267405944 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.248396296 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.250645817 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24926329 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245913616 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252790506 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256258372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248826979 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250427319 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249872697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249315636 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24913212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255075057 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267647474 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249864128 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249485632 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.250392878 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.246552667 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.250707358 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250151193 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250192544 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251546436 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250556853 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250336592 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250910242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25052547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250939089 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251802723 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25466266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259181 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255854391 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251564083 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.252499239 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251999313 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255109971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251830627 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251907553 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251284707 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263035023 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277938819 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256992717 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272621972 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.251891449 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257764215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272983878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25551618 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252270359 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251899125 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.252170383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252311829 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24882286 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253830249 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251222821 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253906971 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.254786953 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256821655 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253765864 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253055766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252728585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.253961029 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252389709 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253139017 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252609661 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253919544 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254289213 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251653615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252858068 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259353574 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273628729 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254908695 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252865397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.253857397 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.252271868 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254051244 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.253881976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257251095 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262737326 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257092117 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261441334 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255813499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262960033 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254502923 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257082817 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26298359 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251187219 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252652719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.2543581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255808082 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261447749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275770565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25478429 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.259617212 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255716231 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256492951 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.254860926 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255168822 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255346213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.256049976 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262319748 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274155315 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258839004 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257187545 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253116137 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256112847 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255601688 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254138042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258175034 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255139853 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256302692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.255292311 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.255231673 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255251748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256369108 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.256622194 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252175166 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257754523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264005282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.278454036 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260748149 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256368472 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263390473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279257687 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264794538 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.278135992 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.257778596 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256976393 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.257052333 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259174722 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25706662 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258971321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.258081352 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258523129 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261286793 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257526687 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258812717 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.259213231 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25891154 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.257702994 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269927124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283618494 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259698573 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262453529 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255766325 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25983748 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263238148 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258665696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256768578 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262064182 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269651607 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265672328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.257843699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.258467959 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258911395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259138169 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25847084 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258348122 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25943155 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259133653 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.259108188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.260209205 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260824446 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259597512 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260084166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261289555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26003799 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269593217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282148845 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260402253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259814929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259372406 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.260001801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259866888 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.260346527 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260779446 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26009781 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261527223 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267444933 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266315798 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263120327 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.260354233 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.261611945 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260406361 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.261110392 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262320383 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260453052 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261777446 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260837896 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261378199 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261825403 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259522408 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.2606955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260644634 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261753223 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263528636 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269576647 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261229598 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258156533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260887376 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261461473 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260456979 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26237675 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268601445 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285938152 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.271916956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27114207 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266788354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262866997 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265561611 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270863835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260117 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.263549312 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263725189 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262836735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263630796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266208397 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265062744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268538392 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283923083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262763496 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270987925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.282462841 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264005252 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263631083 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267627715 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262758732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261294574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263858127 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263343179 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269272945 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284557996 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264247979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265081287 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264047643 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2654737 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269143711 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26401657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26470553 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.261098414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.264470862 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263904374 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264307692 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262131389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263517028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265397436 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268656862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271116768 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.262881854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266299755 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.264207527 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.265249261 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265260722 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264319951 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263513508 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262212747 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.264460635 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265969725 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264297962 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267622844 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264215796 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266680453 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268316582 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265674423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269181598 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.275909283 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.272910077 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.263613244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265508948 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266190445 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267794327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26668616 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266341007 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.267122867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267145428 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266445936 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26774183 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265872878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2698463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281671003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287157535 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266147523 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268284196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269594979 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.267148698 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265641806 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267228329 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268216311 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271422572 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275642447 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.268733669 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273266334 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288243261 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269316713 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.272658188 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272119861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275033013 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.270791297 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269011995 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268705899 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274036885 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284042737 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268704557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278040279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298496701 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289693799 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27005853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269469113 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267454801 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.270174961 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270881982 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269856298 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26908388 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269976732 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270020221 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269519914 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274976062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271104306 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.271519997 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.26823771 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267711167 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269941603 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266632231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269957623 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.269726888 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270880933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269752074 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270187055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269058741 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282950772 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297497119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.270851677 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270902072 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268468678 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273951088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273325533 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280907694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277489315 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271842032 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271033184 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.271598905 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270922769 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270012548 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270473624 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270539114 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271213482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26816291 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283271839 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3001109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276300962 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271152073 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272799024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271698126 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27138356 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27259272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273926052 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271673651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274604866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276522593 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272424988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.272259204 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275619366 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.279616179 seconds)
  done (took 749.759375786 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271008465 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269359605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270673745 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269836567 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269255511 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270063015 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269923139 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27004809 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27016777 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270197431 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27011463 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271061819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270311711 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27070946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270170783 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270871513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271077598 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269941134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270335842 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269337294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271290586 seconds)
  done (took 27.86232809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27352729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270744705 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271662541 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273874841 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272034664 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273447721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271036834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274362183 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274070772 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272119805 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274465033 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275555109 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271128074 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.272490956 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27135374 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274171893 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273934328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272034032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.275241474 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272806584 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275502812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272868488 seconds)
  done (took 29.195828081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276194852 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275897194 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27513313 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.272712765 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27475036 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.273071439 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276118388 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.275302489 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.275658312 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27617136 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.274341764 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276708092 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283028814 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280922407 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.277515847 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.275321847 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422342658 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278084546 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.277171031 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.276819032 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.274019455 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281152701 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295821922 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.274437366 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.275318943 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277496826 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.277305017 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.277369294 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277717217 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.277786534 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281007608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.277273472 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277308752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278939878 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.276795084 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.278290156 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280514325 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280264848 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.275260432 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.277698652 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28755038 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.297225278 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278877507 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282761111 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.299695903 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.277306759 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280169583 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285071086 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.275916715 seconds)
  done (took 63.999366135 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277614216 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278278182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27493471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.278022619 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277657486 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.278233182 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.27722994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276759919 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.275932769 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275164183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279031163 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27588266 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276902282 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278037527 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.279349058 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276760857 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276319341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276027794 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.276554954 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275869567 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27689039 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278291224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.278673746 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.277200132 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278622926 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277071088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276272597 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280297228 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277436863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.275865789 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.280002519 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27934493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.280228009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.276937437 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277129274 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280433774 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.279861492 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.278190573 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28071388 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.278167592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.280397196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280329477 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.280666308 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280086426 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278304157 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.277590494 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277964588 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.278236311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279997185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.280267469 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.281046283 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.277920985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280193548 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278121605 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.280854892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281762342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.279090536 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.278314007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281193078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27981794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280676382 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282124912 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.279634076 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.282542017 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.281263871 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.279911594 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.280652653 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282618939 seconds)
  done (took 88.142455066 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283030131 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.282458189 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281817513 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282923012 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282621505 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282898963 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283346714 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28207725 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28204262 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28285968 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282439978 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.280837955 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282122157 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2828455 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282357062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282445709 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281171652 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281676252 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281769486 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281880739 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.282119523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282054894 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283006492 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279986874 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279637046 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280069547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279759124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280354186 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281193294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.281188028 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279310197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280490532 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280280697 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280899857 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280429775 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280500417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27988686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280808027 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281427036 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.281369792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281850707 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28009898 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281343047 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.281138323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279943734 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.281490097 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28002633 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281291877 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278890987 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279756154 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279215028 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279963168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281038365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28095237 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281012511 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280100707 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279909047 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281487489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280300168 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280269032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279640718 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284445602 seconds)
  done (took 80.632217808 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279751108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279944745 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278129509 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276759248 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28103816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27929488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279400237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28005737 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279346601 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281384532 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280112941 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277166287 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2777581 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281006872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276822138 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277280562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278111657 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278219914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280408169 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278403832 seconds)
  done (took 26.773366654 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278667478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281353366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.277220706 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27838933 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.280688208 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2779389 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280784446 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281287442 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279506265 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280693579 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280914708 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281061554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278534682 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279085591 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282255975 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279085122 seconds)
  done (took 21.670682246 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279152714 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281197615 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282454104 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281847097 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28073116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279038633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282662998 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.279441237 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279682012 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282824691 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281971756 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281552786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282445927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282968581 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279109068 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282142421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.279301475 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.279922432 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.282736325 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283439077 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28106388 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280238502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283185213 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.282706751 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280902984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280674523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280556005 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280765011 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280105903 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.283804689 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28169017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281633865 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280843794 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.282175928 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283993449 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281227189 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284741111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.283034971 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285242089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284385376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284286315 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281251711 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.284669235 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.284190521 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282321459 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.284878199 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28263308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.283690482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282164647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282498751 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285462181 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.286615683 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.284656735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.286383218 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285573805 seconds)
  done (took 71.724624998 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28573911 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.286692763 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283552039 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285565846 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285376505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282897008 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286385307 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284090519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283547084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286166522 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284085535 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286696626 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283772609 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28609149 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285037935 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28710539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284002297 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283896992 seconds)
  done (took 24.32813703 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28468172 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284612801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287189611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284488803 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284001754 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287066745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28307548 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.28634258 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286909976 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284591703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284274467 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28797096 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286660942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28826316 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285691569 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28489665 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288370021 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287801011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285034604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284036795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287640934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287033159 seconds)
  done (took 29.488822308 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.286296076 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.286334587 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.28823124 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.302549378 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304821795 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.309180881 seconds)
  done (took 8.976608079 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294852373 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287650186 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284796814 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288025958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287839178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285681974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286173025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285710834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288148971 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286387617 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284918598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290188532 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28875456 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285971152 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289746174 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288868667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286748025 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286934273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287434818 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291772412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288396953 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28927711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287483883 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286177965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287597891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287881824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292208247 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288321456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287669621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290095485 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288841448 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286252972 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290824103 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288843467 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292539121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291179936 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287007773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28992887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289681549 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287006764 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290323408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291480872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291187215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288523725 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290647426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287737812 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288859943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288610519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288878377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290764731 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292261623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287592971 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290035699 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291940589 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291535755 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291765123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289093725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290984581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290019461 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288142403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288385348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290273185 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287627249 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288777436 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291737891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290977557 seconds)
  done (took 86.29639645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286881101 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288548615 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287456027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289651487 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287878395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288407152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289864662 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287845498 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287561867 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287859564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290617906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289382479 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288322657 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28805311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290646571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287058838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287025858 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287466126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288387616 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290380158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288637051 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287788652 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288377052 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288106365 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288169921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291188009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288205468 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288597958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287967135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290196898 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287557044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288547707 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288136623 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288537468 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289172378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289303679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290541306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291667672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289177057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290959286 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288001807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290995013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288966975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288601552 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289470481 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289732862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28910224 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290614019 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289154137 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288557072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290383697 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288536102 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289506755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290485058 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289862804 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288603678 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288866705 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290051553 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288897891 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292062033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291181817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289515461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292167394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288339016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290495926 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289015867 seconds)
  done (took 86.285711622 seconds)
done (took 1746.615692694 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45524167 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406904727 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.291159307 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.297827402 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291645526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.312341245 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.3030819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290560207 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29157478 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290791207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.291241667 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478263609 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.346807226 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290486056 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.291608631 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.387685238 seconds)
  done (took 42.523104332 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319583422 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.299144012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409198972 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.315065786 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320334226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.484370529 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355796554 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295671595 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.467468987 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33842204 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.866922522 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.318905766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299107761 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.408739337 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314151793 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.481332333 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.550563246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.874437724 seconds)
  done (took 29.922434507 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.748489995 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304370543 seconds)
  done (took 9.255995318 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314163417 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295574691 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295889804 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294196833 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.285855506 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.286696142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292455735 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289317351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.946370701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.418151452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295556342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300976686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312226601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293817706 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291146227 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32939876 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448163361 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292719769 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29043094 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300102627 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.29472401 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.407012684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335767554 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292207106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.418347739 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.937331162 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301677974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301418827 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426286466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292037187 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292849289 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294551904 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294118124 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.911504548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.790518941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304511415 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.318931167 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303038258 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.292051227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459504045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295280785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.300950277 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.294936433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.802800676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.440583416 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.410796022 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.478838165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312857823 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.296235701 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356292781 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296211373 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.295494502 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.323188333 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.048554798 seconds)
  done (took 109.303071373 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.292663176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.67555515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457583746 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308400907 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.082868573 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046944403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309387906 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.578088323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32966698 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287227894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.622182417 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801396293 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317106069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.34540821 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.734898032 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333390156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286252764 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.134343459 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30200803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.292576107 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771190068 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291069536 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308516725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445602461 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322984448 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.729456164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.659454057 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.819922396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310127836 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.284622606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751812193 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317032981 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.302072573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.289394906 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.5416533 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633864308 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627167691 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.30954233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287243319 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288661712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317109672 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729442288 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643727761 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.307698356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29179838 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741081716 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308679204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.291633455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.286787803 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492886004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.962224756 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286110098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.633257105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.292443851 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.572764675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340371706 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370804997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757424319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303394619 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.438981209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308191298 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286425988 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29259753 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28741094 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287167442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620002477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681579655 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290950394 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619346021 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755540862 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302359814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825498691 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.097239335 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.292551065 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.347312607 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.287709954 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.980419931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.765574922 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344531042 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288185438 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606576628 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307827807 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60050559 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303604086 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288463864 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800039832 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290976993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.294748234 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.287973341 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.304320467 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.057538382 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.28895594 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.571923066 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.303770137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288648817 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.288696889 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.288386802 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288489501 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305071151 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.288949588 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.813562116 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311573556 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.254020729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309835416 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28998366 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288695731 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.292080042 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.289883273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513462113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.709043463 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.312793779 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289948517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297985568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.297378696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433256297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.296025512 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.584547075 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307881603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290952559 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.296389049 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070270976 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358757918 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289939062 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306319034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19305533 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.499646406 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307537488 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314007918 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2909106 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307568058 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.531260385 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315155743 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.370755989 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.29486719 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986237888 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325526029 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.311946312 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.622597011 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292636484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263196974 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322624132 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291601431 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573551441 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.551760611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.58926195 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.294467862 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.298311282 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97469153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.334215154 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438643189 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310963999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29421664 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48880919 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409132651 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292357163 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.883423014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293462265 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511021587 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292546266 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60373472 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.777978297 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315930961 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298323157 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.99512249 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.994612926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.144774236 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.293352223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.605574133 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.239859038 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.767266122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.292594748 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293213625 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.881158636 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293366475 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.294659325 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.294173901 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.294770601 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357764794 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465795889 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.556159924 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.297918244 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731910052 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359597654 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29478526 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322012344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.29608934 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.639099991 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.298392118 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298982521 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.302711496 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.296993556 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301277703 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753659342 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.128693558 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.295063537 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446535455 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920321672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.310786598 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.296037283 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.865125833 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.522028079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835023526 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338968373 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.591588842 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.314421208 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333039988 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942712184 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391084008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800683514 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312792185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.31906809 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889519608 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312353992 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357395538 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296187868 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295269966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828058609 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312688578 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.301536753 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.541337587 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319871211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.555812752 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.29726279 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.306811563 seconds)
  done (took 1101.43680832 seconds)
done (took 1293.646535171 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.298153476 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.296267441 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.284410735 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302769843 seconds)
  done (took 26.394990891 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308001181 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.302310359 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303492903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301515996 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309537384 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302354383 seconds)
  done (took 9.039790229 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.365266934 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.297510076 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303918638 seconds)
  done (took 19.180180989 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503065793 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.571482011 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.642913914 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.42337655 seconds)
  done (took 10.355148937 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.304868385 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305326157 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.304726435 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.305757785 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.308641753 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309875167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306302219 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307274184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310982126 seconds)
  done (took 12.976010447 seconds)
done (took 79.161661061 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.297407889 seconds)
    (2/286) benchmarking ("sort", Float64, true)...
    done (took 6.325494664 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.084661112 seconds)
    (4/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.496310628 seconds)
    (5/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.296194589 seconds)
    (6/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.33072822 seconds)
    (7/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.400564899 seconds)
    (8/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.477422598 seconds)
    (9/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424847566 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.54821453 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35392936 seconds)
    (12/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.383073636 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.323940319 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.278746084 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.279202631 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.072088358 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.278608822 seconds)
    (18/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.129294844 seconds)
    (19/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.151312079 seconds)
    (20/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.301262947 seconds)
    (21/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.28477894 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.635288109 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.853802307 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.315000582 seconds)
    (25/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.347824513 seconds)
    (26/286) benchmarking ("sort", BigInt, true)...
    done (took 6.362925761 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.112208583 seconds)
    (28/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.506138372 seconds)
    (29/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.783551062 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.286337649 seconds)
    (31/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.549398146 seconds)
    (32/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315859771 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.532911739 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.070704277 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200987692 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.308608576 seconds)
    (37/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.287407608 seconds)
    (38/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.281173001 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.197052891 seconds)
    (40/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.402955226 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 6.299043065 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.299178411 seconds)
    (43/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.432749492 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.279411391 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.431962395 seconds)
    (46/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.364014973 seconds)
    (47/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.30967202 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.362498433 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308281855 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.29004404 seconds)
    (51/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.22629241 seconds)
    (52/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.281153149 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.212319968 seconds)
    (54/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.805240502 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.413641842 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.415979907 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.576623224 seconds)
    (58/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.785903153 seconds)
    (59/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.3871219 seconds)
    (60/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.360066531 seconds)
    (61/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.094670562 seconds)
    (62/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.282238051 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.819303663 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.392041895 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.357901099 seconds)
    (66/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.651229344 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.4126739 seconds)
    (68/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.907514985 seconds)
    (69/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.757668808 seconds)
    (70/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.657281428 seconds)
    (71/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.500782996 seconds)
    (72/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.33640665 seconds)
    (73/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.690545132 seconds)
    (74/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.402657682 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.668331019 seconds)
    (76/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.37952152 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.497621575 seconds)
    (78/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.384730493 seconds)
    (79/286) benchmarking ("sort", Int8, true)...
    done (took 6.300694653 seconds)
    (80/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.313812756 seconds)
    (81/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.325353062 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.281925535 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.487783187 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.650525672 seconds)
    (85/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.318429046 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.940750272 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.282170721 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.897287688 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.507513616 seconds)
    (90/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335726302 seconds)
    (91/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.308731652 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303307365 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.301923677 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396640404 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.497452001 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.319473564 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.429213814 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.160831367 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.311855945 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.327495836 seconds)
    (101/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.284812079 seconds)
    (102/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.753132409 seconds)
    (103/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.283473692 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.321873613 seconds)
    (105/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.322204924 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.380672698 seconds)
    (107/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.822406172 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.713674333 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.025839776 seconds)
    (110/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.674216402 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.150447087 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518123098 seconds)
    (113/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.369317374 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.42958125 seconds)
    (115/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.483514305 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.956771345 seconds)
    (117/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.413618909 seconds)
    (118/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.518472267 seconds)
    (119/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.079735388 seconds)
    (120/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.285030706 seconds)
    (121/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.498556186 seconds)
    (122/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.3709613 seconds)
    (123/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.284667015 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.213031869 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.971202076 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326984606 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.305966276 seconds)
    (128/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329004842 seconds)
    (129/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.328931689 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.817756783 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.348950845 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.561444408 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.333408494 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.762955089 seconds)
    (135/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.33694336 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.054762216 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.720432418 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581725027 seconds)
    (139/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.329516406 seconds)
    (140/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.847392507 seconds)
    (141/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.532188788 seconds)
    (142/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.292064882 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44141794 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.618957704 seconds)
    (145/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2868704 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.302575109 seconds)
    (147/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.403683536 seconds)
    (148/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.370030855 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057945726 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.314242687 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.06712988 seconds)
    (152/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.314052926 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.410326294 seconds)
    (154/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.029726599 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321135507 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296235934 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.304671707 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.332492902 seconds)
    (159/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308590283 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.868882906 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329833725 seconds)
    (162/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302293311 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547777562 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.678480297 seconds)
    (165/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.349435693 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.706376202 seconds)
    (167/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.684438289 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332891177 seconds)
    (169/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.307739683 seconds)
    (170/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430958098 seconds)
    (171/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.39303441 seconds)
    (172/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.669741629 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.327484241 seconds)
    (174/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.288412273 seconds)
    (175/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.322859079 seconds)
    (176/286) benchmarking ("sort", BigInt, false)...
    done (took 6.330053733 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.795222742 seconds)
    (178/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.308264055 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.313293527 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.048102434 seconds)
    (181/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.288329623 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.288997871 seconds)
    (183/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.958263938 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.401409626 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.30699737 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.337607872 seconds)
    (187/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.392800368 seconds)
    (188/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.334469383 seconds)
    (189/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.362040575 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362646975 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.288656772 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.778808323 seconds)
    (193/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.28258898 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.123876488 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320060696 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 5.438314991 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38286446 seconds)
    (198/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.319382961 seconds)
    (199/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.319098422 seconds)
    (200/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.335139619 seconds)
    (201/286) benchmarking ("sort", Float64, false)...
    done (took 5.594678049 seconds)
    (202/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.051179288 seconds)
    (203/286) benchmarking ("sort", Int8, false)...
    done (took 4.317037057 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335940768 seconds)
    (205/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320408472 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.935766756 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.017307534 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.549865913 seconds)
    (209/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.660744332 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.290376531 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.151484256 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.157952556 seconds)
    (213/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.418127627 seconds)
    (214/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393478821 seconds)
    (215/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314702322 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385140936 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.290874869 seconds)
    (218/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.290874699 seconds)
    (219/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.291635754 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039178602 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333577385 seconds)
    (222/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.56691238 seconds)
    (223/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.309594797 seconds)
    (224/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.291254517 seconds)
    (225/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.917310978 seconds)
    (226/286) benchmarking ("sort", Float32, true)...
    done (took 6.318455191 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.352310554 seconds)
    (228/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.709832906 seconds)
    (229/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.034044915 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.328787291 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726774898 seconds)
    (232/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.444288355 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.291676038 seconds)
    (234/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.569362041 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.812317018 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.765322142 seconds)
    (237/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.729576061 seconds)
    (238/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.157665039 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.791563357 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.223635453 seconds)
    (241/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.496516433 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.526115245 seconds)
    (243/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354292299 seconds)
    (244/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.293212762 seconds)
    (245/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.612640671 seconds)
    (246/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.761931164 seconds)
    (247/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.431908955 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.338871307 seconds)
    (249/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.824446289 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.33914903 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.692244353 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.946050739 seconds)
    (253/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.352104009 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.576916249 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.7569095 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438099061 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.293416792 seconds)
    (258/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.690325362 seconds)
    (259/286) benchmarking ("sort", Float32, false)...
    done (took 5.314260304 seconds)
    (260/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356825954 seconds)
    (261/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.128029587 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415444448 seconds)
    (263/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321591371 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396753117 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.722585506 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.44303775 seconds)
    (267/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.688870018 seconds)
    (268/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.296499015 seconds)
    (269/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.294438006 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.169202197 seconds)
    (271/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.574979157 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.089741519 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.425653134 seconds)
    (274/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341152919 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.357356786 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.718421702 seconds)
    (277/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.051940838 seconds)
    (278/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.615891748 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.301592667 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.106972817 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.833652793 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.33791164 seconds)
    (283/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.329679545 seconds)
    (284/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.456893013 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.888070416 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.330754782 seconds)
  done (took 929.72756412 seconds)
done (took 930.944137948 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347874507 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344145812 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.324731645 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347715553 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.438042572 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.34983181 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.336418415 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.32925477 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374215133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376479594 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.32468082 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.349204896 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.326620967 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326454084 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.325882623 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342363296 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.370809003 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.333555737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.342523428 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.336318531 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.342872495 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32453255 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375263054 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.349480007 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.330257236 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330137981 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330226383 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.346516625 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440004891 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331037506 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330983327 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.33864072 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.369921359 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.332133121 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.323429186 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.346927178 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.339224235 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338525746 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331115898 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359938461 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.770777752 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350334789 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.329479367 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330556847 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329715914 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333704599 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331489285 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.334173853 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343221031 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344447113 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.775359625 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.367139078 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.330897129 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.330722319 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340437631 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.32971359 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333011414 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346795422 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348465164 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347973766 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.365329056 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.34234042 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.333069962 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346799857 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337439486 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.822557697 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.349994005 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335726684 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.770717979 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.360240618 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.814646309 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.361522974 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332800827 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.34372778 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361917292 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.370229255 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.331492759 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330229118 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.337954404 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328583944 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340966146 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34569762 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.337557222 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.332523989 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345781689 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.356176513 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341191656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334093774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34090214 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351557728 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338771638 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.342663369 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.336821543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.328346764 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341959698 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335788871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.335764656 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334653137 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.337128739 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.344438081 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.773785916 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37354019 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329484875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329254245 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332313549 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346159487 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.77458026 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.357219366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35604781 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380823925 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.33448224 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.368064667 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.342450022 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352800888 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.343845186 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337798441 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.330069325 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366862744 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.795051881 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.371803545 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.335781919 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332925694 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352140535 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.33539151 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330851223 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.379868679 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.342099379 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349815382 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454487113 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344940051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365309134 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33297889 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338218536 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.358419073 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352815255 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365598981 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.337679352 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351567408 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.35008756 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332206579 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345246038 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.344688624 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.337245749 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.341007544 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330600487 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.358707297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349593654 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353029037 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356626984 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456505456 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333639959 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.373198038 seconds)
done (took 225.445381823 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394960122 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328605543 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416081558 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332627546 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.433704686 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.436892911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330588246 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331486901 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330029044 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.712401785 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331068609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329988286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.333170838 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331025056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.41734414 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333997382 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.3317121 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.67592258 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335350656 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405217816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.332900384 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.332398735 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333857982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.716060887 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.331697122 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.328709018 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.404960033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336018982 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679068447 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.33052881 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.331833878 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.680865613 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.424537977 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.353119143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344158274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341334124 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437535398 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352810415 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.418300365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416976084 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.418390417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.373543427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.336665667 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333161982 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336572107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336924803 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.333404077 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363157736 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.330941912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333406372 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.677173967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345869955 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344306812 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334133918 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334680678 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.356518727 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334467635 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.337732304 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.427641008 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339124827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39874966 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.715211088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.716608688 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33829661 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.335987972 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.335383575 seconds)
  done (took 148.510521895 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402848296 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.40932898 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.447998081 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353583957 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38620767 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.453375436 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.353227494 seconds)
  done (took 11.049763523 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343454244 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.33888995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38738016 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387686584 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.337560871 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515298144 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337649336 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.349294671 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.335009749 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390487174 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.340480631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338333384 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344875998 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.338140324 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386158262 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.348399041 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.453596494 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338910756 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33836885 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489337566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337051662 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346383503 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.390568694 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349276451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.340104802 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343699186 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.150706101 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340427357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336088049 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.339112589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337455388 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.416108903 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338902483 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.336743147 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337791773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455612537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339331849 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33809504 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339141815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.339438711 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339116489 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339478225 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340943309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337367518 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.340093161 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.362064481 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340317876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340128055 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.340159683 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341356385 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.3909012 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340830861 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.338264566 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338181954 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396194234 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346197637 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342676187 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338337912 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342390436 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339039489 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492405175 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389074129 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342108317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389847443 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343103164 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341500321 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340931922 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341910099 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395070455 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341439179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390480748 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33914033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530659713 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36414525 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342882172 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344625631 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.344038587 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342788089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.339588107 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347655348 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3397881 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.344988938 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346131877 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340207399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341469866 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.511360345 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.452264543 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340264582 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355063212 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.34936131 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.340888451 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.39638955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343010753 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341226735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395317927 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457773754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.396883351 seconds)
  done (took 154.269323959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347507508 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350139607 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.34493051 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359564138 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.34390109 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343875443 seconds)
  done (took 9.340084151 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.345356197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344769894 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.343473399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.344092076 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344446098 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.344722881 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.343700481 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346280175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.348939274 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.344122331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.348054341 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.345446513 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.346950795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.34650292 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.345129248 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.344221058 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.346094369 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342365246 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.346478937 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345814566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.438968038 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.347049857 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345607107 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346389159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352231422 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345605364 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355341174 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346191357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347644256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.353435127 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.364638858 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346559502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346616265 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352889281 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.349457333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347167913 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350531273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348311562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.343712828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347680269 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347561956 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347137759 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347055969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348396745 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.349395488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351045907 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352691731 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35413671 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.34788434 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.348816086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348718947 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.347577009 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.34828092 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348459271 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349294411 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368263997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353009647 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.34834478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.349419412 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350396369 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.349434394 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.348557709 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348890954 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.351870527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.35472824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35013431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349895886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353434898 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348320158 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.34894259 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.350478892 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.345617321 seconds)
  done (took 99.440921684 seconds)
done (took 423.851503699 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.741780352 seconds)
  done (took 7.996867222 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.534024886 seconds)
  done (took 7.790240128 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.087042391 seconds)
  done (took 22.350139419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.347247661 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44458458 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365576351 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.349658599 seconds)
  done (took 26.763726949 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.545660764 seconds)
  done (took 7.800698339 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.34208676 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345577179 seconds)
  done (took 13.944151515 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937555617 seconds)
  done (took 8.192486201 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.360073174 seconds)
  done (took 7.62089032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.353480936 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.36584682 seconds)
  done (took 13.988631262 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.340393787 seconds)
  done (took 7.595154051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.028249105 seconds)
  done (took 12.284204832 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.341034204 seconds)
  done (took 7.598687716 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.350049573 seconds)
  done (took 7.604901053 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.357182424 seconds)
  done (took 9.613242922 seconds)
done (took 162.401611689 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.342141308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.352063808 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.35054132 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.348559766 seconds)
  done (took 26.648045965 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.383184207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.38328594 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384555617 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394232166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.386579728 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382509259 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376615664 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376986763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394253109 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386759839 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385321768 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.385886385 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.384701617 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.375522533 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.386108042 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.391459874 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39476463 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40069402 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387286125 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.3872134 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352707418 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39568544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387830478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351599877 seconds)
  done (took 34.472740201 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871713447 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422581787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505433625 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.403686973 seconds)
  done (took 7.459623979 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.402655246 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40454508 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.416244884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454921205 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483194288 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.415334659 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37433806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373663342 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.358936379 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.4062904 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480279232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421848961 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487255706 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351874024 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.537000371 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.351312948 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.35180226 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.403822348 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.4562992 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470755937 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.353044473 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.404431261 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.407917844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.422548067 seconds)
  done (took 35.24846481 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352710333 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371225196 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351064552 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.350445654 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.360858229 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352051947 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.352190681 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.35297781 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.351446226 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358167955 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.350509664 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363964437 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.351042776 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352539468 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.358711995 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.353559882 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.35759591 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.352296164 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353364276 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.358430056 seconds)
  done (took 28.364987655 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.34729625 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.25259422 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697367226 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.60235724 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.348305054 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.353770858 seconds)
  done (took 28.861082035 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.422695899 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.577359276 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.361894739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.706661561 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808969981 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379805873 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.355013893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.593913637 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.915560208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.901345116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418310121 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.422118229 seconds)
  done (took 20.125224467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.362160341 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.355468277 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.361738169 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371666085 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408075563 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374719883 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.361920919 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.347306624 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.415618048 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.429185327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373008069 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410214895 seconds)
  done (took 37.833081655 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435948941 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394989942 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.268916119 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392280755 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087065044 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561299317 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390689086 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067406077 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380494375 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625110147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360812471 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441840429 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607214633 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36197642 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360736178 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.326490004 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601926389 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817273562 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353459073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.379516473 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376460934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363516561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.460625623 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581296413 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588841155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330480335 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.612592803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.12800014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635194157 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36505873 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362577838 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352055086 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626329129 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006929019 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474612151 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563846337 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395387969 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.895257824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.341692298 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.385239341 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367984287 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356158154 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363197973 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353908812 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.28839664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362640162 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063787488 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.377714036 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.066505722 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352755904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611456042 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449665601 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.356737283 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.923712441 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431678798 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377580238 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.357177461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44793914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945752963 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760458467 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366746835 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.295225356 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.356454748 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293073659 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984227954 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.376282195 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358484368 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3578284 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288099833 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.354411408 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372661952 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502196936 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381015696 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005392006 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035155581 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374305634 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285814678 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887935302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364114274 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.296937949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582134948 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133628582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292107824 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.297951913 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288129945 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042838624 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363725089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.720956598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378089174 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07304949 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586539503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399217181 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378277536 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579554982 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.235029038 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355929611 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.355964043 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484393759 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378111515 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062175814 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313695345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360718738 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614175179 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.567361593 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357515512 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.343375154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861833914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388908845 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37892366 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365197664 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574543801 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950606517 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389816819 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.764653522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374386565 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.134427336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071713722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371965824 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.36760311 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359546501 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604435195 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.116085596 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24878083 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425865616 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36185837 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358876551 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.401670761 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20829063 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.24086045 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.552133918 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395235763 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.375337988 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.360464147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303228383 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.356693504 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379117606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.138497289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582259322 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358584847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64303419 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293204841 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506804536 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368018885 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582245743 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.551143465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.38213555 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61945617 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362828415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37092726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377165681 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378798572 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460451522 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382019888 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.35940604 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623070365 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.363461316 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.364364295 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.414272136 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144161133 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365123485 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365669211 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361219774 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955448823 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35508317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367383148 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249175919 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376529605 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429174658 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36722845 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574529454 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.194699742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386942586 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.384143599 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.360356503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59060999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.370501752 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.399500168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449148034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.843371436 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963974955 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391906808 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295090844 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.074671586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.057018791 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36241862 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551515194 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362109546 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5747896 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401300717 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366060819 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945453669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381777452 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.316146593 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.375424142 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374879029 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36855566 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364446408 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.151720714 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.811382362 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377930375 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380903928 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507426641 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378892875 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297846116 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881092579 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367762289 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364066675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150109251 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398475034 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.323660937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210553906 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650372231 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361212488 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6231713 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.438821493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.403577876 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.360139967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366959721 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373770764 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.385734544 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373523188 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.375948693 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.337254562 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.811256587 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934822631 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088965012 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918997738 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715436505 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.392994033 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292771574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101965132 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327938814 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.022116303 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558256749 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12505201 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338528912 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854456433 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.592533907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149463665 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633078742 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602713074 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.696912709 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.401574209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629264603 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578495059 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400773944 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381018932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302338957 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.648198916 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920823098 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386381157 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44817231 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096040484 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407448251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.148431284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.367205184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.071196207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784097398 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940430406 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755282948 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377111274 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381625884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163697861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394555475 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.893652969 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989653578 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386479283 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.86189355 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330862925 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583035491 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405966371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.367075772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.672897064 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.386307954 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624603766 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630448226 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304971147 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379443438 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908962772 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243701015 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.374016402 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368386182 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099093125 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371180941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663369067 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.375601599 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.152637999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391045033 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305292738 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305193707 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.063575657 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374202723 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346354718 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856722921 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.376094671 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389604254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3819117 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221192686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627525294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.384370434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949276302 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611869577 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369332092 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393692724 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37458344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371089271 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.352450094 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.252496997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605313862 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391376222 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613654383 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.3216154 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.280541639 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433080423 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593155612 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272094816 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37305892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615385918 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.107897335 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.81349901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092649577 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42251007 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373303705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391239965 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373280938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418528207 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461602909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586749505 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.409902217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383532634 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783974554 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40835671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38262649 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.386535146 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46758369 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.840573828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.163716115 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.152799786 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956126667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11258996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976117306 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653479726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3756199 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382918065 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308352187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522801296 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898907671 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647506989 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502725082 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.381940706 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397672576 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374160234 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376050549 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609056158 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649425476 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244849632 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387619398 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039483112 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.532834328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384774662 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585791759 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863135542 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936140118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495287917 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374455776 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090677645 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667857367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466831669 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374011485 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9647657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.386057973 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.072194351 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.389402114 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386001521 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523711953 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635084172 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038003505 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.404397983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537161208 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149414345 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.443322783 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632331052 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.834624795 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594468618 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985578626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09460515 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639301874 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445752073 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592054758 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.504957722 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524337294 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.38305642 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.266820312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376763293 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223406216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.088524377 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.387807763 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969187484 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666255613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381063942 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.386685612 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408441827 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.387629958 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600600425 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080243233 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610449426 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386938005 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381651011 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.369426639 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9670164 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668241053 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321469483 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381709306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62184709 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641286331 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403738896 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.831057642 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.089735856 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925680847 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352094521 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401274544 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386636404 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093899442 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97936206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.194536115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877492719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045516338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387585091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660632099 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.384059367 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389157046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663633711 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382093132 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380633112 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623408877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.992421284 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175699284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.392038372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.483055936 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.324516829 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.606152645 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386882584 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324761648 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381109377 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.794750557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407972807 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509762346 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391458712 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.377947264 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395821897 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.123587888 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654650551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385302117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.361067009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.371744597 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392027033 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499954707 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954463328 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415993934 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.056672292 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734747699 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638285634 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382791709 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.36982661 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.384120093 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381590619 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099695288 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352030565 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382911669 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949979647 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.384597899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400167748 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385605563 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.598280584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593106251 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383404998 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608950113 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413968497 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405442985 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.284387373 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150108523 seconds)
  done (took 1653.967205665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432490389 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.406205722 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.423446011 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.466637048 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414392262 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506939269 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.449662693 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.40686097 seconds)
  done (took 52.800184581 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.391949703 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.547653964 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413384159 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.393001819 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.39974926 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.392540986 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.851190933 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.418836443 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.401629432 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.393805447 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.385530138 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.39149412 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054260006 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.402766469 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.389977568 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.388385168 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.40166156 seconds)
  done (took 66.318042824 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.576965147 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.427600274 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.405890992 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.42851872 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.386917531 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.394355819 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.984948739 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.400744134 seconds)
  done (took 54.300615893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402650998 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402000143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402687744 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.403343974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403379 seconds)
  done (took 8.308042202 seconds)
done (took 2055.966911751 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.388730228 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.39307934 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.389481456 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392041127 seconds)
  done (took 6.859019985 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.36542807 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.085117196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.36913832 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.38996763 seconds)
  done (took 18.504528793 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.390878754 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.409951119 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.08720336 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.017612101 seconds)
  done (took 5.402016729 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14312484 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.152914762 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136199314 seconds)
  done (took 7.730825059 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387089183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396577031 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.399053023 seconds)
  done (took 20.480627707 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682435276 seconds)
  done (took 2.981218534 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537258919 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.586309101 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.705443964 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.727993369 seconds)
  done (took 7.855958005 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.772043064 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.775166612 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581722086 seconds)
  done (took 6.428012133 seconds)
done (took 90.3408099 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.192293677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39372829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.601626524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.206909206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.625645846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.601721349 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.590551813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.177991915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.773523686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.675324193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.172667352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626837673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.541268606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397388637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.53815117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.772735521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.625403748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.245604785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.854306948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.049280366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.591528814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.803719569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.001031481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.825861937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.625114296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.550841532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.399366382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.775904694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.026275759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.414618032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.55074895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.222749714 seconds)
  done (took 191.751930884 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.390458838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.404329141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391965525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.396863166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390699305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392202499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408105916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407426258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392945671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410780149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.39225123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.396011804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392893525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399083031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395543333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.392616236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409727663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.409268701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408656231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.409949869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.39282714 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.409571105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414029771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396544208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.393768648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410852531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391899967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.413577739 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.391899776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392487726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393829225 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.3928118 seconds)
  done (took 206.087965829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399161923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39319407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.393315895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.392773769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402620722 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.395274397 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39692566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.407102908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393645351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392964343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.408057924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.392928316 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394694833 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40403417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393597567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.404811677 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403795676 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3943467 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394689331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411417282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.394150062 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.395191991 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.412238369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412840989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397251194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.394981488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.394522494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.411529424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40910036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.395737196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39708548 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.395069565 seconds)
  done (took 206.084043878 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.597596441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.401697592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403312355 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.355821712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403042926 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401734976 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397471853 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.591668533 seconds)
  done (took 14.857680024 seconds)
done (took 620.082887559 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.689292764 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.404444546 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.604402819 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.423252872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.199220367 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.45077688 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.422181628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.592173041 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.32466968 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.598812582 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.637808659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.438136478 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.779525074 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421902111 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.676669039 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523586992 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.322478439 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.451900131 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.735326579 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965764783 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.687612457 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.860435003 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610253039 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.311470823 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.793663348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.879846601 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.160989182 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.324439878 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.439765424 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.743677757 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.01520111 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.410903149 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493239259 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.482667122 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.540839146 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.520901243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.355044207 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.482302905 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.628437915 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.628677258 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.955527606 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.142083755 seconds)
  done (took 94.437312088 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.387576896 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.387579904 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.387276601 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.387704886 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.389488509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.388848656 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.387029784 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.387528339 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388425099 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387948592 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.387352807 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.389622247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.387952649 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38947324 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.38713828 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388338594 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.389510685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.390631298 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.388405846 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.388581814 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.389372247 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.389249869 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.389438549 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.388090846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.389767349 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.38880551 seconds)
  done (took 37.410521444 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.40767106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.661223214 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.816500493 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414322833 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407766391 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411781372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.486644323 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.407488157 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.410256934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410038746 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.578742905 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410967698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443276482 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.844959744 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.410759416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407781581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.407491707 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.407519818 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.669384134 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418010309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.509125925 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.408096618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.487824494 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.418441764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431553895 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409742909 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414580456 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.973074088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428321424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.578780126 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.201199984 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.491850337 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.920237966 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.845166985 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.198232858 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419312954 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41066813 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.583711577 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412376548 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409938871 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.489369753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411645816 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828921337 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.065123209 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430065565 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.411491629 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.995108721 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.601594099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.65643457 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.426740301 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.856106741 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422831362 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412300924 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413298191 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.65663244 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.427235609 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41071491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.979233464 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.436728955 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.490539388 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41386449 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412008922 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.679486229 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415121847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.667713195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414073246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422510411 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433292698 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.831380266 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422101926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.091226134 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437028179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412224031 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.580483072 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.666791181 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.026780642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434473731 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.684993528 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941051361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505536558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.415345092 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.965864575 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.511295897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417053119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415417406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415338599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412638114 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.465289123 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.488274404 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.023254905 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097096723 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.012297683 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.512302454 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.426615184 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.413862824 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.985367092 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.441945957 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.414778914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.829610206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098300775 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.442084207 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.422689378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.096286287 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443242103 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493067389 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419498552 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.848904245 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424449977 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467074867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417215614 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421979991 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439689816 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492662231 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419702909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.415862037 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.062749298 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.617980734 seconds)
  done (took 185.92021963 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.410706175 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.40721514 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.40923682 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.408580282 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.408528128 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.415841342 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409290022 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410458765 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.41513425 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.408976697 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.41008989 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.410027981 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.412356242 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.412119153 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421953762 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417594555 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.022728064 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409942204 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.410326807 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.409245327 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.204129822 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.420496139 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.410616871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.411714895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.410346268 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.412009715 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.416772675 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.433259354 seconds)
  done (took 154.278192001 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417917069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.973359381 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436397166 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.549605898 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.440021066 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.414771615 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.547749286 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.47530041 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.435774671 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415543467 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415741597 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.716652861 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419509241 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.928415399 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.611014006 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.564418344 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.926581499 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436388162 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415600058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.41624813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.550009155 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.422928736 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.71680252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986284322 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.44582784 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980954481 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.411310313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419416413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.418355896 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.989598865 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.443553768 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.718712133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.496306904 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.479345631 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.007198112 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959724695 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.955653653 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.575398379 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.418730231 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.417851837 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418419487 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40321917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.990404358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448149892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.421517568 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984516522 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446811152 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421181531 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424906572 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417211386 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478925162 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497717424 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.747809114 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.008430415 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.526665266 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432469788 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.551419413 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789729933 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.423013183 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.930145085 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402661084 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.001933617 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448347663 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403932821 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420978799 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.4254549 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.570278255 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.551029818 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938556396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.447148206 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937952339 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.595400699 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.419745947 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420776786 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422043295 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000388045 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.958698469 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.587086523 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55468911 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.615527109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.405620586 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419964202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.405536663 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.499134225 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.420253448 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.002362989 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.959394698 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440480831 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422073913 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422480357 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.42432193 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.600007912 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026627156 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.526322359 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.923481841 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.752838891 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.743992526 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432994718 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482192512 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.438797772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.736190908 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.431925292 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480480797 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.853202102 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.737385337 seconds)
  done (took 168.96823023 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.668180472 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.640355682 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.515554763 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.570154461 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.032542822 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.99866368 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.747022384 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580081933 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533032476 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.68289425 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.590549598 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.521438314 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.635192405 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499006872 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.159080122 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510492146 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530843789 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570934794 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578004495 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.428579259 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.123930996 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.713638595 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.611514913 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35317161 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524993003 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182706144 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.983807987 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.936636378 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.591781767 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.754720127 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.977689792 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544739073 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.406361121 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.118821497 seconds)
  done (took 68.144099261 seconds)
done (took 710.465009998 seconds)
SAVING RESULT...
DONE!
