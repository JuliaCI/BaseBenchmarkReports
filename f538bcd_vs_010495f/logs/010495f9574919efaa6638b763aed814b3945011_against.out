cset: moving following pidspec: 22841
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237083887 seconds)
loading group "string"... done (took 0.464481012 seconds)
loading group "linalg"... done (took 7.572198121 seconds)
loading group "parallel"... done (took 0.173865686 seconds)
loading group "find"... done (took 1.188286856 seconds)
loading group "tuple"... done (took 2.087729237 seconds)
loading group "dates"... done (took 1.342749483 seconds)
loading group "micro"... done (took 0.246682969 seconds)
loading group "io"... done (took 0.654170881 seconds)
loading group "scalar"... done (took 40.92519168 seconds)
loading group "sparse"... done (took 12.478720254 seconds)
loading group "broadcast"... done (took 1.113630569 seconds)
loading group "union"... done (took 13.715920525 seconds)
loading group "simd"... done (took 4.778255261 seconds)
loading group "random"... done (took 9.636377135 seconds)
loading group "problem"... done (took 1.983383524 seconds)
loading group "array"... done (took 22.460595534 seconds)
loading group "misc"... done (took 1.419378301 seconds)
loading group "sort"... done (took 3.578676593 seconds)
loading group "collection"... done (took 19.415855947 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513254242 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137786845 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132645336 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147459185 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204221078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143158573 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155561281 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113666479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.955632858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180248724 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15393002 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513195455 seconds)
done (took 5.097548774 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221857987 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093932503 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103327073 seconds)
  done (took 0.868448367 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076980288 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145271786 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094171377 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078191296 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095105379 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078238242 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095068542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07753246 seconds)
  done (took 1.340166561 seconds)
done (took 3.191720388 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734113937 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278841559 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202165617 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461966024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194974958 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.2145104 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674956912 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.359475215 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253028033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100482475 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143445273 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387902516 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135829542 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68227751 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089333607 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123109771 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176384369 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44570109 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082063124 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11085557 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116143722 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14179236 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130130143 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090405869 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184715413 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0815781 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194642563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108086622 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080627415 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289699407 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201291152 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687332618 seconds)
  done (took 10.870893772 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111833575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133442217 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097934356 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137549732 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133544033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099040434 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085655133 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096594836 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12224944 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174973878 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114109706 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13666408 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095656191 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082193389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115579543 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244650202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121778638 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104650075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100254964 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103645127 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121680958 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113816004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10832542 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092710501 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166700514 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220174111 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110178196 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125555881 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096787815 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112998388 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14404166 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141745547 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095429984 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080513841 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171545058 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124225128 seconds)
  done (took 5.127542811 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110623318 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187317607 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102311205 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.18390337 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161920884 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138884467 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15862435 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112524304 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2295303 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109745316 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162396814 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140378843 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11520437 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080345819 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09774507 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09593214 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658683145 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12275903 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154107002 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114754994 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102813964 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083565811 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363414905 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102882 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080134395 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098147348 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065244632 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158978312 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100122053 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140690385 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120478801 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082078219 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13856897 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207808499 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109674903 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134835892 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095726407 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078753936 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178156959 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105104358 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079138879 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12041588 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076901996 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135449133 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132630097 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098448951 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096225815 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203870264 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082244435 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114146194 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122934271 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938870755 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182102953 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090581102 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09579673 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320731741 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097952018 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097642638 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077806896 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095394912 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279213408 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197938459 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079915704 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098032519 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095611304 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081785583 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382086509 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097275149 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.123357593 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083049174 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10657764 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082533492 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097163558 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103448286 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087236468 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114442233 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079422915 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099512006 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078451688 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096609366 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081139329 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108458679 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102334006 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080383769 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164301562 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079487111 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114976946 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127079633 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084398636 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095589414 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129200492 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082842405 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096973873 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13298392 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08171519 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108356698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099188762 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142228749 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082646506 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200606188 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080929957 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126827912 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09957845 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113923751 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111670703 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09947416 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08438862 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095873181 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077575191 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164922633 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080683175 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097895025 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081117903 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110476452 seconds)
  done (took 22.973713182 seconds)
done (took 39.6490502 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326347353 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102506723 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102507641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102824404 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099173406 seconds)
  done (took 1.478135231 seconds)
done (took 2.199490628 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287346845 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172138028 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095197105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166135655 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092965981 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173040061 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158522135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111983256 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219096013 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076821277 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162963337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093416573 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076672759 seconds)
  done (took 2.631216968 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094460191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114878054 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083202093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110333786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076565792 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110514523 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092517935 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117430162 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108564701 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084653013 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093445108 seconds)
  done (took 1.805211313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093309369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112887835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082326483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109891191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077010235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110399751 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092730692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115318989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109912464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084774685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093187186 seconds)
  done (took 1.801707731 seconds)
done (took 6.947989507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090808439 seconds)
  done (took 0.80668919 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.916711242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.847595827 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113265524 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148917474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299594629 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192917435 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475998269 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125109079 seconds)
  done (took 11.046088613 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.145301282 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085644839 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103973316 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083132732 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104170417 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0840094 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099090038 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099076452 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083388648 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100785858 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082803511 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10052996 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102563493 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086475678 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099239489 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086180779 seconds)
  done (took 2.327955504 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119562871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117559537 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106237499 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108702289 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08643693 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105105675 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106840704 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090094957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101490837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103555808 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091000187 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10569879 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104393326 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08013269 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104726849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108239622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085798867 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105908168 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106440191 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090023136 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106213734 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095830881 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08723287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106738819 seconds)
  done (took 3.251190935 seconds)
done (took 18.153264182 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161186259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108494338 seconds)
  done (took 0.993346796 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094044331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112593684 seconds)
  done (took 0.934254882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098030872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094857176 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122593119 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109573899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079640692 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096459367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119110203 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0806491 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096728669 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080189977 seconds)
  done (took 1.709212812 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081621228 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110437599 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10220665 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094526945 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105669489 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095132149 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0885145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099080415 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109488052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076917853 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102331882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114552627 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086018519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11691341 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105622639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083826941 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103862646 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099638281 seconds)
  done (took 2.507569716 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079883727 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096968674 seconds)
  done (took 0.910238922 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081423838 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094771711 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081131418 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097043007 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094083938 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076512837 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094289054 seconds)
  done (took 1.352197973 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469765549 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135333189 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253035129 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085595721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119778976 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303806232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098040947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085178282 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103021238 seconds)
  done (took 2.442838925 seconds)
done (took 11.578760147 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093004222 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117165789 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112397365 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466529035 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106917121 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097411011 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161122473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250679102 seconds)
done (took 2.142948628 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148783539 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324193647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113318449 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06633852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094765913 seconds)
  done (took 1.338822332 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079833711 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099783713 seconds)
  done (took 0.917258588 seconds)
done (took 3.144727338 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081240975 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097296978 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114024684 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096450491 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080677188 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098805498 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077981008 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095770673 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080854693 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096427017 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094647025 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080135209 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096772249 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080501051 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094211675 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078449937 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094766456 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080897535 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094500633 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078038333 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094324927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080003991 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095058082 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077828339 seconds)
  done (took 2.911353134 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100042127 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098385063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102511749 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086028095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102234147 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085851272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102049974 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0971229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086269956 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099672443 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100917184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084303476 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098768597 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084646373 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099858791 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101443022 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086704595 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098349694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08340003 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101661241 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103095352 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080502873 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100363293 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102585798 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084060706 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101158181 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08266475 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09787595 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102650381 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084316645 seconds)
  done (took 3.581222831 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084711454 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094514372 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078101561 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101580673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078001711 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09717046 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077479567 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095454713 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079196171 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094955382 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079913773 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094349097 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078162258 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096372922 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080877685 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097840597 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108066849 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077614172 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095690025 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078808621 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099495102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078176424 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095418274 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077870704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095648684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077895904 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095761451 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078223035 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096117693 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078671874 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098660763 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082313535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095712244 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084903349 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098562178 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078142197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09852228 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095051052 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079332022 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094860233 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078699526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09485077 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07791369 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10192531 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078312718 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097645821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078715316 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097349099 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078655519 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099409556 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078431296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095554388 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080327476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096479637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099088222 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077577804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096423601 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078092773 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096639267 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078413803 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095654784 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078275931 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097469104 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078548107 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111870704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085952623 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095761649 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080663675 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097180374 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081273339 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09687563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110448536 seconds)
  done (took 7.164047907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083075209 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107151472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080928015 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098239526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076860985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097234868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100034044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078708604 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09905504 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086082448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096168943 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080441141 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097619572 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108499524 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079261034 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097503739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086514128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094548714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078641172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100059401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080643763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099851355 seconds)
  done (took 2.752448232 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20905601 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104653778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142841983 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107553236 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084318183 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106982244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102319927 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086797735 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102776188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084457521 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100506139 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102847462 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082903712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101580496 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100470426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08574638 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102646671 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08576822 seconds)
  done (took 2.643512726 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09285207 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099284357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102509041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099342482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099758669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083684812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105233978 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107660473 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083424249 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099159425 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091132228 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101009103 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100626046 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082112053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100884139 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081374239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100827674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081203733 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1084253 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104451814 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104269497 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091202719 seconds)
  done (took 2.871376223 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09668347 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101497249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118505417 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085024496 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095833312 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079745697 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10513997 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081307389 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106868331 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100643446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081518166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096702927 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088022145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098262786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104351308 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081672236 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1009234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08127259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100530221 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077316444 seconds)
  done (took 2.634955748 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102164695 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100181013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099574687 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091763594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100821759 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082853415 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109758781 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099900232 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081975584 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125969219 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099782054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082183119 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109944916 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105558574 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099987536 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090810728 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109381829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109200096 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083243275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099913129 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125305167 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082714599 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108859759 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.210203037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083326687 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10018706 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100899041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089841013 seconds)
  done (took 3.640872659 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08163034 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099769255 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079173661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096674453 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078703677 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096718479 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078825671 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097007162 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081864453 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096272618 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081454864 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098768131 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082086394 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099344379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083949631 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099086491 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081432749 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096867105 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0796236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097077678 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082136996 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098628087 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082015755 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096379335 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07851168 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099246666 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078597142 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095570884 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081480315 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096603552 seconds)
  done (took 3.432867098 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090413222 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106925341 seconds)
  done (took 0.955019482 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078500556 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115486102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079168075 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102464591 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086538487 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099810123 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108755394 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086493512 seconds)
  done (took 1.514125185 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096342771 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11054644 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08337975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111815579 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109926912 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095372029 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160174359 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101074855 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088068432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097693642 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094479762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098156735 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105543136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081230097 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105113527 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088937079 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097372559 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087847001 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102053371 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098343326 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083161314 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111067603 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084760839 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096600762 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084146174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109945196 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109221279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084052539 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103886115 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108826142 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087727692 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094129401 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08160407 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101747751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080339755 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108487959 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112214243 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084926961 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109382661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083485266 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110897491 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095143166 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087293975 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106548937 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091658449 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100558628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083299641 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094734711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097103059 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084339028 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095003576 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081384245 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094782101 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089447271 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104278118 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112534191 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081730849 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101558083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085205237 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102882695 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088155303 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103868668 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0846757 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099098539 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107547736 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085823202 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107381709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077249215 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093818658 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080518468 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108223379 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122339132 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090492578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101281835 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083328816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09769152 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103426157 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083533025 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107697927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090328159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100294932 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108008454 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090363369 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100086475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085374733 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108776427 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098978282 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084906131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097862588 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09702195 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100447673 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081158587 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098219436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108779461 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086348211 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099471493 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080066974 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111131985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076666366 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10144972 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084005137 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101040195 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109767559 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088817139 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107139023 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10804938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089626797 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100496646 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085358696 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097049637 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083672701 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102745632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089337872 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094611388 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102892353 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083886141 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102295688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09003173 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098594411 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082366915 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108492292 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106334553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080193417 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096808386 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085040037 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100941598 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086801314 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107080219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098745986 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078461969 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096128025 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085817228 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100353779 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087345688 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105233816 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102996554 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077174356 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09879887 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087945473 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107824883 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100250528 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082687041 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105253104 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082979479 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099616368 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08763151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102773298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080905254 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105182719 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102446835 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077942288 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104708733 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085643525 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09962847 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085746451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104010336 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103446194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083148751 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098618103 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088133237 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102150329 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082424913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100138267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080652781 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109716623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102178184 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07810848 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097335646 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090261449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098604074 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082924382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100353829 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103020704 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083571363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09890677 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082009496 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102565962 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09513935 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10620956 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102625161 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088187894 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110374319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083327965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10247475 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100417149 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084407207 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101849578 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090309597 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10586585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106451502 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084764109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096772827 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089275285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108308654 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082693404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098522806 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0815804 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105327613 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107613017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086704578 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101603201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081240092 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101071969 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104733104 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086019572 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099780945 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081735247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10612658 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081872033 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108740322 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10240499 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091864222 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10475042 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078463562 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104714285 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098838027 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08849788 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097363681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080090626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099838259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084017205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100319584 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086007971 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094829866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090033889 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108714575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100850748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082673551 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102112437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091560201 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102582636 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086477739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104689457 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106334539 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095140794 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099839763 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086953554 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109982955 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101411543 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077576855 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106315283 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081718483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10075856 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082237231 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099529084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08622274 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110004126 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106010718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077385826 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104177747 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081229219 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101099989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079134947 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107430774 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104353657 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084638441 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110176429 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084874868 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102527317 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086804367 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100979094 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102683734 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083663298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104421127 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084104681 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103200238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082019434 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102818632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099690269 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082038804 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102985119 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086674058 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101884554 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088929367 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100668671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083358491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104348163 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103262551 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083564002 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102299586 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082475186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104903093 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084308402 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101478372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085060727 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09634092 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109585722 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083406609 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109732864 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083274165 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098855972 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089573403 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103816948 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107417226 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083729371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102667766 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085263192 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102311132 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085555568 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110073138 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099313108 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092072482 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107919358 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08438044 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105083168 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083077313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102921536 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081528248 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10294479 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102547088 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083410504 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10131418 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088340215 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103680695 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083597025 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103863083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10285915 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083016348 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1031613 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078460078 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10031955 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0828768 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102945531 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09023928 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102364495 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104127614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081565318 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103383121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081896983 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098790306 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090982522 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111960135 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103055126 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09154179 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100938694 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084604584 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110910236 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096118883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081377978 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099750513 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081980751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110760745 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085073077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110511199 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082996547 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101236091 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098839159 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084292296 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100715576 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077740439 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099547511 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086798926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103874383 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081995293 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101951653 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086293867 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103071159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108541228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08296582 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103679525 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083637414 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099758827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081941729 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101390006 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085975585 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102663634 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099460109 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080509514 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102025893 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086042638 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102676152 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083233464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103478765 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098915143 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102246371 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105058458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089813911 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097573429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086865158 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102251945 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083085813 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10165579 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087402225 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105756524 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104745772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091308707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102531069 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08501413 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102966153 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082285097 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10249612 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102498111 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084086266 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101174003 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085071141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110982803 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081595202 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104373121 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082614217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102227231 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107011659 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08491601 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104742873 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09114997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104746281 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103056063 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090331881 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106211346 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087049313 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104315377 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084636625 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108149809 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101264857 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092617912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10276876 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084360253 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103832561 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081497332 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102372255 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082970674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101041692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107079057 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08538338 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101881982 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082606086 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099963611 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085331066 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107044972 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110796855 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086703792 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10542446 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079417979 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099952993 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084788724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099759982 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08557094 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105430293 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109166422 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086105433 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102620664 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082647019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109726378 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089942745 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10669659 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100344201 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089135378 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103520918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086675861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103239121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084086816 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104069464 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108065812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085446873 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102044005 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091525973 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107221544 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085121031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104757543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083989137 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102884964 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097903101 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084710922 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104902986 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090649883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105313083 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083643706 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112304402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102440277 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08376326 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107270793 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083207158 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109758849 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079160094 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103916608 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103734404 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085596204 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097816245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083021686 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101540846 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085967447 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102232615 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078626371 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112441647 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110161977 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086622122 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101750141 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082572498 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09854212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079229915 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102247589 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085570914 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104716311 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111799094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083046357 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101752525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080691872 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103537251 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087267181 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106958438 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082416362 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098204407 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082713134 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105614924 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109966584 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082800863 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102832324 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086743326 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10512544 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082492309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107434633 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099000694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08785146 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114201279 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085127457 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104016663 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088901987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111014785 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103846717 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080250523 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103420291 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086032545 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103836153 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084800355 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104583383 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117162918 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087110049 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10235872 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083322823 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105415725 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084126582 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109623494 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104685424 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084670506 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107464817 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085821224 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112085138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105613592 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089922145 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105918507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086205057 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102069419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084378717 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101185511 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081757068 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104026922 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103490993 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089753474 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111844627 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083648067 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113504151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111146437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089198583 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100217314 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083297692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102726703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078919534 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104646752 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0818201 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101425086 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100613918 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082772221 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103053068 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09042129 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104850768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085426521 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10246694 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077479527 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105201727 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105254143 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088472388 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099977418 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084623003 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104127126 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089694086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107294701 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084484054 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105125511 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104625337 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085521911 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098313923 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090219969 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101902983 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087756488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102423699 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085361379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104582445 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107221444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089825744 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105806199 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086672634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116784627 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105978909 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082349445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10002978 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08940435 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10165056 seconds)
  done (took 57.851462136 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146367332 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081339102 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099133164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079544342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113180281 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099998135 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079569368 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099868306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081339974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10273378 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079427447 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098729456 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108736504 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124559844 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093818441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104395555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098269344 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081259974 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098632419 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081182812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110079271 seconds)
  done (took 2.866546802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105012142 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116928137 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115156873 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119056661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089986705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116940764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115114862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115306558 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100575793 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111334038 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11944415 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115957022 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092307345 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111649747 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111448374 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094322027 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118647081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109756678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116738054 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096210225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114324847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114854481 seconds)
  done (took 3.226094489 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084697488 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102272818 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085530549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098517047 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084078472 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098040795 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088559599 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101636436 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087867495 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102631632 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082925324 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102723509 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104860799 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0790371 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103065731 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08234094 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153351064 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10799049 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083790861 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106527414 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099337095 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086264474 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098827093 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080243814 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10167866 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088816784 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104384592 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081996815 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103227974 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083427533 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104298842 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081805375 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105370313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104154492 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083356751 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102426256 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08429145 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103613704 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079433324 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101509309 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085507439 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099553286 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084487888 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081941515 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101756987 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085185184 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103589306 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098753147 seconds)
  done (took 5.473927301 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105602571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160705449 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086295566 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144404518 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122189331 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114709259 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088321382 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143637841 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102747765 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08318421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123333265 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120825681 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10475897 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089554302 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111660036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104621345 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087038146 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104020288 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10901178 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084949875 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110322735 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090841364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120124365 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119355484 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109495699 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083886041 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104152991 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110182345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098307361 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110686302 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11049821 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09120455 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121252066 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110078179 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103650394 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088053702 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123611964 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105289399 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089125078 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101815879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087571456 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109538738 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110563058 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122047058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086187336 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109456204 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08535228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101995912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11850904 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087871144 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114178029 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120718665 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109189379 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085562509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109669931 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122021554 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085409034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10320482 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088475943 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119226801 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102236703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089474969 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120388877 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10649303 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112421129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09969801 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10958848 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108984962 seconds)
  done (took 8.170843116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094380081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112058597 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122445151 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121741438 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092128574 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112222135 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111303711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09187989 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112168733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117072604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111701846 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134127156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086939806 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116032556 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111898831 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09227903 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112388883 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111836587 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09281599 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11296998 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113208948 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121146294 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092136439 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121790004 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142490214 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106532983 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091616009 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111488201 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1225392 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112267941 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124741165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092881357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113630611 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122113784 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125090813 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092989394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104135055 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111883349 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092151567 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112370004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106281653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101009751 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111427273 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106975427 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09183138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112054066 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121769425 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125898209 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114843517 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097203144 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113169299 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122497095 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111685616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093349604 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120835354 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148696971 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12127035 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120971792 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112168538 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101699573 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122361366 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13066287 seconds)
  done (took 7.726827453 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108068401 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115861362 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118417835 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100917397 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083634991 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111401815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082953916 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10331479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114383617 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096011931 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118013322 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109090866 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112788772 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097683554 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109375032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114158033 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089298706 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109588337 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114956859 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109721189 seconds)
  done (took 2.942093979 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093086963 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124659636 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086093796 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11346906 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108834771 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092579174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107460426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107858783 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086463629 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108458635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097096643 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118591414 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105209586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092861845 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117479791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113029611 seconds)
  done (took 2.49631122 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096572961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11824044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120395043 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085443792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105174447 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080651051 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106367508 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101190464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081681534 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121231198 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085161961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109337147 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105909324 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086560856 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102190563 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088499982 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102062777 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083229541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105125103 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120545313 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096376863 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104798045 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105921872 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087706 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10560932 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090664638 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10679092 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104129774 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084278578 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106010171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085089301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113139204 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102492845 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08408599 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104236336 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083054351 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105406593 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086565476 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1091917 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104712633 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084382611 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105204659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085832262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106686183 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081998848 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106795612 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101916393 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093097968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103589387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085882279 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105846115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109045785 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087752075 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116994582 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089216897 seconds)
  done (took 6.266701213 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099434777 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109737199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080511137 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104218455 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088195109 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10825311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109959055 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089120996 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108071357 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083402983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107763765 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089840876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108142657 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109208394 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08733751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11059396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081073207 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107524895 seconds)
  done (took 2.61546192 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091436973 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105376381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093146423 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107462336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085408409 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109453859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081741405 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106375011 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104115459 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086009353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105509775 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088246747 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104584654 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088139053 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105999616 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085517288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108276701 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103318659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085998083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101439165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088302719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104662098 seconds)
  done (took 2.972042413 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11909041 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125763092 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092809382 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229685819 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105272935 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133253695 seconds)
  done (took 1.63870291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11041502 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121569728 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106365421 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107795791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11592951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10773687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088784817 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107832253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11813126 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102720942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108327903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119133321 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117788195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097386973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115797418 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115357056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108098514 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088880572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106864691 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129745121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088086259 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118540255 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109088196 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087894877 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109009856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117825994 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118931611 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123178708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08940744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119156015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114599161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088639451 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119692665 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123356009 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110510095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099263611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108857513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12985315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115008036 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097086936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10996421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115189625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098258536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11517461 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119833689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10867669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093132559 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109483918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108522341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136863681 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094424167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118282061 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11542318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118807171 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118104031 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135302144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103905572 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118438205 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115502909 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123364446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118471129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095222848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11862029 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12229209 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116662045 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118222427 seconds)
  done (took 8.184197794 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103088764 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126817075 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10871907 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123214746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097561033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109392293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108832164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088740438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108491869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107721592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152341565 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088844812 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119101791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118309914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109443244 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088577659 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108931826 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118563764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088119875 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136037435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109264618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11867034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119547104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097779707 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123904078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115811104 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108927416 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088064683 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108866149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108679453 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094904299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110195942 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118727613 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087148945 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118674329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109093082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088369743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115784485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109003251 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115317533 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098013569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130879381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109648177 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108405458 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123166727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088488887 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109413406 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087777437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109616431 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107655476 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10321348 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124218648 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123563029 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11856177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110563146 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089237724 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110516378 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108904901 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089226623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11634472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118544313 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109109904 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137005556 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088450082 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10878858 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119337696 seconds)
  done (took 8.064957121 seconds)
done (took 155.333723111 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099941732 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136965903 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096591847 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168758568 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106963649 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119768061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139013524 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098323087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107949871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086674053 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107255135 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087569996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172272182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085660683 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107585661 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109054175 seconds)
  done (took 2.667537108 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200550773 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255636161 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102615511 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106765535 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090279353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111181163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10595337 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09123554 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110548416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086423096 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110138358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086900819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106222564 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087069056 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111279514 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090298143 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106902896 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088427943 seconds)
  done (took 2.891992933 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113366393 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146832769 seconds)
  done (took 1.111543703 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118856547 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180737979 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318263637 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156166832 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107592864 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128386522 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156964908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131450677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198558404 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124326666 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12289394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098225461 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141037993 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116354721 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09391715 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120031441 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143568297 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093243445 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116355759 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117332551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117569536 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107493248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116759808 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094329976 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.1817879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119800226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086217183 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108149917 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117227178 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095124262 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114327324 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125459838 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098232969 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17543486 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102914813 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178006162 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098382405 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116077154 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115855408 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092829286 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120282145 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119178576 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104964396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119046051 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085611817 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11974118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106125315 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086004143 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116036041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097298525 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116092063 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114037728 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156881309 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119898129 seconds)
  done (took 7.574069441 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796161476 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157700348 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091123488 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88468428 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139252464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104311798 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78101141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136009438 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234287516 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761592573 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134800697 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12344673 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228949621 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237204707 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953495045 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313077062 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671070991 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103874089 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152598603 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154603804 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120372401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138450194 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130725857 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431697066 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095354492 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113871009 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117444587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100406791 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160752388 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126860635 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115367107 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178545168 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250577337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206815999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117642887 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090614301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112158472 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171130584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267829122 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215664354 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181308203 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088055486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112339858 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122963395 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111212074 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1102773 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164608487 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174801717 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193404841 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09356492 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122046798 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120605593 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12186967 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167626693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121733132 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299306586 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312363364 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112875586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122119474 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106759378 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26519114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124160682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225486217 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11802006 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213974399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111352653 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77970888 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191756909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091485656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118584203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121224393 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095663124 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122714314 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167609169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394251614 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125531231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094010239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113020364 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215488161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126570097 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112436435 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162716101 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117138938 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099772098 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126328724 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123557257 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171147139 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23000825 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125237675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120719542 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094950789 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12699144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117796276 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213152171 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219282454 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164809562 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214078113 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124374647 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164697346 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191628215 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099144768 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195908737 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098700867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127128505 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124650032 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217107214 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146880841 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102017789 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117271889 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119926412 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149303604 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127705534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097865112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19269583 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45877746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169475543 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110415799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129069941 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099695775 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161032954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11925438 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260135049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122934909 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170750308 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12008411 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088475853 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122050659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166119497 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12399454 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121594956 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102020423 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12038028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236054489 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219421444 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124462109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22196278 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184674146 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120606386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172800094 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123308735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169216891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122107926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122994668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095911335 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796382805 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125536825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099520333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11742979 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189297343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112068567 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103625721 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126217102 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109932209 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753712115 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129035113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12307031 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102851558 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119880447 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122519925 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096983938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117300521 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163283711 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231481233 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122401567 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121565845 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103913313 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183193049 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096344863 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126512565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126136719 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125951608 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10202409 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115956657 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125974529 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171459023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165024629 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223397056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590641564 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091477248 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125863042 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229704764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090941823 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289079242 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120895803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226799261 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166530254 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121698029 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30817282 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167628709 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190027834 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128277535 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175312329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087340151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119413469 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165264068 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114117251 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119869389 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164406289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126935196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103980308 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961353832 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113031913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226685001 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109825706 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172671439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096013102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122934734 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295325721 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112356129 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108047399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187226267 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094969925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126787003 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.730030255 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104938875 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123979979 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119989411 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222576969 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165789824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097977039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120759747 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122291106 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164055474 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211357523 seconds)
  done (took 44.257087609 seconds)
done (took 59.345073883 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275693199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214221824 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258897591 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170218357 seconds)
  done (took 1.865740398 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17073444 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149158202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120841365 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108333897 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150708602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085813435 seconds)
  done (took 1.66090227 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353622098 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271040008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240050989 seconds)
  done (took 1.745224198 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28694266 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249447545 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356393941 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.397216267 seconds)
  done (took 2.288114225 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210263106 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133552747 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112095626 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104723532 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203180417 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251081603 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142303437 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202898039 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122788442 seconds)
  done (took 2.40501794 seconds)
done (took 10.841812272 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.246484796 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.171725105 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.151950763 seconds)
    (4/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099851211 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119189713 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127251437 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.22002154 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.242186891 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099190266 seconds)
    (10/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142641497 seconds)
    (11/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190181588 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094734095 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135339471 seconds)
    (14/286) benchmarking ("sort", Int8, true)...
    done (took 0.221231305 seconds)
    (15/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.230990282 seconds)
    (16/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226996914 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.150923093 seconds)
    (18/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.252211976 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149775021 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150368456 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.23313801 seconds)
    (22/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.160984766 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118087097 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094561496 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136948959 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19818115 seconds)
    (27/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168354499 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.201498036 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.224766446 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195015607 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116111961 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101815726 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200590942 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117424152 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135149863 seconds)
    (36/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116461618 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137048249 seconds)
    (38/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.155350925 seconds)
    (39/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099282954 seconds)
    (40/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.252391237 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174089269 seconds)
    (42/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07622396 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124449561 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067421994 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.135441922 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212663656 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228285466 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 0.149856224 seconds)
    (49/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.159549923 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111528888 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123930963 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087602713 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175308705 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094043464 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11712848 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102156656 seconds)
    (57/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183939502 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.1093461 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090956339 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167373335 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088256385 seconds)
    (62/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120756307 seconds)
    (63/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11790817 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097055975 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.235448419 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174413897 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079621133 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232727516 seconds)
    (69/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116573695 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138520342 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085056146 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068759769 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122308366 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.121419185 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124374247 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.164794346 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.130911227 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138451871 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094986674 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113822682 seconds)
    (81/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.07848955 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.110431506 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.136092753 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087272868 seconds)
    (85/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.152289524 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093253507 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.089142817 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096308623 seconds)
    (89/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174234842 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.195879268 seconds)
    (91/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067363504 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123001692 seconds)
    (93/286) benchmarking ("sort", Float32, true)...
    done (took 0.237364183 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096843928 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136983307 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134858918 seconds)
    (97/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135748758 seconds)
    (98/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168032696 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067390782 seconds)
    (100/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091141937 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134151376 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122273621 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084207786 seconds)
    (104/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116448945 seconds)
    (105/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068107586 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141077629 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113327673 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.194912752 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118636981 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11856213 seconds)
    (111/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.155200586 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124252968 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093705698 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118580689 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.165092949 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111922573 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110102488 seconds)
    (118/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099751575 seconds)
    (119/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173074973 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125972939 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087865084 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184706636 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201560602 seconds)
    (124/286) benchmarking ("sort", Float64, true)...
    done (took 0.233098146 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161748665 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.182958943 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119652959 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068361207 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118428945 seconds)
    (130/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.127152073 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11611867 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09459072 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109458758 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165478026 seconds)
    (135/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147465241 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113819262 seconds)
    (137/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068273478 seconds)
    (138/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135028836 seconds)
    (139/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.070605238 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131096406 seconds)
    (141/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113046731 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095286662 seconds)
    (143/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067772014 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181488378 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109841483 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095251417 seconds)
    (147/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220538821 seconds)
    (148/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.1759155 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176226654 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091298596 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091997509 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086803092 seconds)
    (153/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152571805 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086945472 seconds)
    (155/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180956907 seconds)
    (156/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173458638 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09600031 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111340899 seconds)
    (159/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067732785 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108312234 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088511652 seconds)
    (162/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07692764 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090849865 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08789807 seconds)
    (165/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164061742 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06842731 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091453436 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097984451 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111958572 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067484617 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115121965 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068449461 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069017986 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118310198 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093368205 seconds)
    (176/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111968433 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173251333 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097544267 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117316963 seconds)
    (180/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150428074 seconds)
    (181/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100758657 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089851853 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089797133 seconds)
    (184/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067069933 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12020524 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088532084 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068389486 seconds)
    (188/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145741595 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066768618 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111462538 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.225451809 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068930732 seconds)
    (193/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112517293 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086538452 seconds)
    (195/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092198595 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093947971 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13743544 seconds)
    (198/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087580339 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111012716 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086864923 seconds)
    (201/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090679075 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086492056 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12018406 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095787273 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130324901 seconds)
    (206/286) benchmarking ("sort", Float64, false)...
    done (took 0.173518995 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0877064 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126343134 seconds)
    (209/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095365954 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116735306 seconds)
    (211/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118756307 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091128933 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114461061 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093308424 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.386131914 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095967539 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109391946 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067030067 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121734953 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09663988 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.173446621 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067270607 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112605219 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068441863 seconds)
    (225/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119429754 seconds)
    (226/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068125729 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102128339 seconds)
    (228/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067380793 seconds)
    (229/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067347607 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115537213 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069287381 seconds)
    (232/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.111163796 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067229271 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 0.189923764 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11033183 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086127551 seconds)
    (237/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067053076 seconds)
    (238/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110389558 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068541536 seconds)
    (240/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120227021 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068044519 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115838607 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067285871 seconds)
    (244/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076288533 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119918428 seconds)
    (246/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078204022 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089321302 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.0902223 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112282447 seconds)
    (250/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076396328 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165165894 seconds)
    (252/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067489463 seconds)
    (253/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066925373 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124583564 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111054097 seconds)
    (256/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112251351 seconds)
    (257/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115420782 seconds)
    (258/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088674128 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118408798 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094608261 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112934134 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085939327 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108971469 seconds)
    (264/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085859757 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11890729 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06686935 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135596457 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067623292 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111354922 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092546653 seconds)
    (271/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114290875 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067897728 seconds)
    (273/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09518852 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087103664 seconds)
    (275/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116170835 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235031972 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067805722 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068101311 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120419928 seconds)
    (280/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068230829 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117647386 seconds)
    (282/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067621264 seconds)
    (283/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067205107 seconds)
    (284/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091283349 seconds)
    (285/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088403639 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11847673 seconds)
  done (took 36.201462154 seconds)
done (took 37.082091739 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10026866 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148540102 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097043933 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13668401 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124558146 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091426511 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118726458 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098700389 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124099088 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124664836 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097974993 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093196565 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097416066 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120971473 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096477324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139329459 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124427373 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094490969 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119506075 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08596931 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119514262 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089780012 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112046125 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070560625 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122441654 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094349264 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117240657 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120981404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087069499 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111213198 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090407676 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117826163 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087330037 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124665513 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093939298 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119667166 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097562282 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121333602 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11266258 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087082139 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11863072 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087051051 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117828956 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095006739 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116947555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092726511 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119947332 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100301955 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139567691 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11610623 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09511053 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123338542 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097437032 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118372047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09063935 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119870447 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091910656 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140192422 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120673357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092699232 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119311499 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095771057 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116967581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095822909 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119708261 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121972666 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098166685 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117222191 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097606431 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116265201 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086781035 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119327937 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090801003 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111611032 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097218798 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121738078 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08668509 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11678387 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118282353 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09207089 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110286376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089799672 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113049782 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093319621 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113259674 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070329116 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11547947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093704621 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11101185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096414603 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117278853 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094787405 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114123989 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100085727 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110890511 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092543987 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112685624 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087575517 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113618748 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091529462 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111417965 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091022028 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120630907 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088724995 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116700907 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124653908 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087533643 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118476066 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087130352 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11173554 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10243232 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122055424 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087170406 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117537187 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087173327 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118995695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086980545 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111157741 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087268988 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112545871 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093519352 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112083069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114545765 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094868166 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125370232 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087479614 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115029625 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090613032 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.1116225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092990912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112044492 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08799814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114289953 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078347857 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114501737 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088275249 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119998249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09098043 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119700344 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089317302 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121374623 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092279758 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118273811 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093928751 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111173203 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075191138 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117408466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090407756 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113905854 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087888676 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113888011 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087486327 seconds)
done (took 17.0072026 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088769725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184647232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151502975 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142869609 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108446923 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112773974 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123354489 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119533254 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114700209 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14373023 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11078161 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133532313 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148272563 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087210874 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112764303 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09238775 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113649263 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102523143 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146594905 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133669543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165345533 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087023072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147906637 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136312031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121809701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115121855 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11366116 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093190319 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115737835 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103302262 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133159685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116494108 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08804201 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134343907 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106038746 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121017835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087763426 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119722615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088089368 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112570731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141870409 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134453252 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092868051 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118547097 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092094399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115479654 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08979018 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121832568 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098898468 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117182806 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127327139 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15779311 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091863093 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123587671 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086959689 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124065655 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122861204 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09127896 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113503848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091110467 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11297101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0920858 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128409255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14247283 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092047031 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12271301 seconds)
  done (took 8.651770851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104974741 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140462832 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106236502 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132017705 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112723003 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08898449 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113697169 seconds)
  done (took 1.742397556 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088674008 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135701084 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11246306 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136759695 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133257777 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112508145 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124532853 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089240255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131404125 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090305379 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135441362 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151796565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091735233 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121696205 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14021275 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089452807 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1390601 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089491803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117729415 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112188274 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117982715 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13674575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090989335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114219126 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104007131 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114997663 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162745093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094735744 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116171919 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0922653 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113421081 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152402998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103408395 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125794612 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089192988 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13074068 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128864825 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087998519 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126846382 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094840706 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128815615 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09039844 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115723481 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088544133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119838226 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100372663 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118365381 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090412268 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117187098 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13444999 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090347369 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128566968 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107384512 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118426368 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091216097 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120155677 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099106492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115202064 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134491641 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091551902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132116114 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106978874 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130541417 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13188261 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09299002 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128996971 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103308619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118082352 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092373196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118617709 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132520948 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088506651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116219339 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101499807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117187374 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113459324 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138359411 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116070697 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101072771 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114736849 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089977274 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114507373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113199318 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119513616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090422443 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118538368 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092254384 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112938301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089382266 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118100552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088244994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116185651 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120059764 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090795823 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117850981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10680063 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11579181 seconds)
  done (took 11.900372019 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091543448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115815908 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091641475 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114940079 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091809815 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116189838 seconds)
  done (took 1.575046173 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115187989 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118820657 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105281991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121975815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156857031 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104434702 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130303283 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124602084 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108407072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127828693 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130041533 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10575732 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136198045 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122179221 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104695537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121300729 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.1046763 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12636804 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128324042 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097147961 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137816158 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121810271 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098145133 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132065249 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119342279 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096658572 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126872129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102895038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128385311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123930694 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096859408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119412161 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096661017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125417422 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.133010426 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09718051 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121990097 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119853371 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101015357 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119391751 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105175679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121904631 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127971685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094836574 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124609823 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12141905 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094572441 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126328898 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104076646 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119602224 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120374936 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096881949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121723227 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095266729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125056981 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126487524 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09432036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131290734 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123262299 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097131759 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119834547 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094324914 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125012417 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119150663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10505485 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120098731 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12238503 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09758149 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123179239 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096169208 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120196906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093272027 seconds)
  done (took 9.272636361 seconds)
done (took 34.081802555 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69150707 seconds)
  done (took 1.644661823 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826893663 seconds)
  done (took 1.78153151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.30078371 seconds)
  done (took 18.286980555 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493324455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579227372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998656709 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178300955 seconds)
  done (took 3.203445939 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949075376 seconds)
  done (took 1.922758792 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284640706 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235444508 seconds)
  done (took 1.478286398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.791583494 seconds)
  done (took 1.761477132 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.36091678 seconds)
  done (took 2.319835808 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329739322 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18420219 seconds)
  done (took 1.481520404 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548508578 seconds)
  done (took 1.517064858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.03067491 seconds)
  done (took 11.003817148 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267811234 seconds)
  done (took 1.24843505 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304454649 seconds)
  done (took 1.276670577 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.53686714 seconds)
  done (took 4.511484547 seconds)
done (took 54.402972792 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099385412 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127803013 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102435053 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124710144 seconds)
  done (took 1.422875958 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102144409 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122128737 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10202745 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121240968 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127990304 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09668028 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124472762 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102446171 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121683961 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096804188 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122178033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120650253 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100009013 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124437879 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093919464 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125417161 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100433065 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122670173 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125785061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097609897 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119043589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098578299 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125480271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094802584 seconds)
  done (took 3.66521033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10130575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119761023 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097484097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118884829 seconds)
  done (took 1.419750336 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100774546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132267522 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106503279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126475229 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131412292 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105718565 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118797509 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092863404 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120317827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100764568 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117267772 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14050363 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108019178 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12540855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101965286 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115164639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092195071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131835753 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125309295 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101266042 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118875113 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099324661 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116820489 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109791363 seconds)
  done (took 3.716971686 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17144269 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128919453 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139707586 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.0957464 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160803719 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142527175 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088710668 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141928469 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08905285 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133272106 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119241226 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134689855 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131048215 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089097512 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11545946 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088190361 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129564692 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12969708 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091451946 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128491092 seconds)
  done (took 3.434571288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098565691 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118407293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0886888 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117372325 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099763063 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122656453 seconds)
  done (took 1.62946429 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091588997 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115012406 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090771183 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115254231 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095483468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116916629 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089090144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115618764 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090166496 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115414199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090320346 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113738521 seconds)
  done (took 2.223724173 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508096121 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121132491 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120664837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089861662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124755505 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08968196 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130742366 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09286328 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142394753 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089848644 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116946418 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09246077 seconds)
  done (took 2.703357538 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238502184 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127011365 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286883069 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366522156 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15722536 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16587729 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280396732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16287669 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199868414 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151278162 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232510808 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197642129 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153549917 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19341046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139004712 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146022629 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190140681 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253319587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154115714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211553453 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208347721 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16792342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180418105 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152355006 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112718833 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194451495 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096298914 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130684157 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234931544 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180948067 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191046879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162727178 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148014791 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238078507 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250371066 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197164606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27972935 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135215245 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16677924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143026846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266418049 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139458114 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23443014 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156083476 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105313662 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223623688 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167322585 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178183545 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146936522 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140449723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19962764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243062186 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194679639 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138948989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301805279 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150438955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158148577 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190412555 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254229909 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228427618 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189690063 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121642724 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189978145 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192317251 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213626063 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153061668 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185294747 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148815792 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185601182 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190436163 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167369102 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205747427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181738498 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140728294 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17203277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174743418 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173552309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261408855 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187054077 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123920684 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792443 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150261335 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106080446 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194265676 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126860571 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216964689 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143984144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164482477 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210530066 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160786074 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162344951 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221495383 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186341217 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149572864 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083795246 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154948433 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156254357 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176591453 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140537759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159488745 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15867402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131113158 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1703702 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097705984 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211912032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092093099 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175986371 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184444091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128319223 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163903687 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154795683 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150683702 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179678065 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20135068 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141780183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134828063 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21101813 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178905814 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142972921 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180154947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22948822 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117852013 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150474391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228405651 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218952645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141272675 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230757316 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154633006 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108720357 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135082402 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182281698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157776616 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162597368 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134697879 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184317832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234718785 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100054141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139895636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197936924 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13586147 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133372056 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155492195 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121534007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139714791 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144375173 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145754919 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176180209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180510556 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156686861 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167756457 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151579293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251019386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14140815 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152728228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123033718 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122560212 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195257382 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22675442 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104070495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234779896 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171964109 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201110737 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197871578 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107933604 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178252001 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131302966 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093867773 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222369264 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169099999 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164088499 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197180606 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225065457 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181059459 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184435424 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166088645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202774361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165494256 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157741619 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112217865 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162100172 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160137365 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125107513 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111865632 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135822665 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151033222 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143320399 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134848882 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200532948 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171740756 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217021565 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159735031 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123351392 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209004245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103168922 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177706916 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206352437 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118822294 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227155872 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195086699 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215244544 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117778107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229609614 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093897894 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127434378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14391429 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171837236 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134501835 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109628359 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163850701 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181334973 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210203373 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172578088 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208086839 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202371803 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19151757 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095230269 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169737119 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185356342 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204668754 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155441015 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140295517 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152545668 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178961151 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156406756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255693799 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170757669 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176493107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233964713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124737695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133188191 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151252723 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179279347 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155597259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177258313 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147699232 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140198047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162118834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104292857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160815053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214578462 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165556609 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189464567 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150354746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185707489 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129833056 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163285988 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162052355 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166889161 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081475765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202147155 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204014289 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147825778 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167309407 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189132742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132201562 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309437568 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235701711 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197226737 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138736892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156155724 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162998815 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164164894 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171537028 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181050196 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160423041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189134461 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160652708 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137370814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112466886 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151453737 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153796767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133625779 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14948957 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179485246 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137845018 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190652621 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155931347 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160857488 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174254453 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15158906 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117177091 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151440443 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244767389 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186090669 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242054579 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151632354 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180610313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208035609 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127303135 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104511363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134632237 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180042374 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137855321 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192703198 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215024297 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201999924 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181015526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206688335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112952574 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12194437 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15932482 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170475349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204270735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148987107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148360643 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230704433 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110584711 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132848865 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167581501 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290457012 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146725172 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196237009 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108864239 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278761877 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100019932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133779726 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164887366 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235871057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109219441 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178672976 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171520233 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162549879 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164960071 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150523882 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19235392 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238315806 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202163273 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212676825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106104172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158349896 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1768495 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222677378 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157322035 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112225217 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233226981 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197081751 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196353838 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143278162 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169326708 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170550771 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159325213 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217383091 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108043447 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23723782 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134703083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193596612 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15423479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139103085 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178534339 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18978396 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142725016 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18788515 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21184785 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107441847 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13475202 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167301831 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178454321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154826782 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130689651 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182857402 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126138748 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196406965 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262257839 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134747739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156927739 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119784386 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137628557 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155455476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15916995 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141229738 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142288161 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230233712 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135083495 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19162485 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229976179 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173040127 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175597154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146988891 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69498519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103697487 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223588556 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120579944 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237359774 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152727334 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174874698 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160953204 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17016209 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193395417 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161226432 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23142502 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221573922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180380012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133226266 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159108617 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156416323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144230244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126657662 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169167849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160145915 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14639837 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.206975972 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164956097 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107594811 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141744461 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199909605 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150597298 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186703797 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18083044 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139463812 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174018944 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216288129 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106658743 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20924641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208158034 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146333913 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150121658 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134811939 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150537039 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234074537 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126729221 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188835205 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212236665 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132151675 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197423405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119672753 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222798463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159260649 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186763503 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143843502 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161411879 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157894945 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138789339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103210637 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157394628 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168032557 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151325531 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161701406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165688977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195084499 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12442838 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11744073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309772566 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17801902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216196468 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137617194 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136081763 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162695909 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122205134 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206129117 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180795407 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137498922 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107544456 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138690748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130136666 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1355677 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157609539 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194925487 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166984275 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235232829 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109661107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280733557 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141255849 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156299173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089843396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133875377 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15135775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14597646 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157110391 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194785906 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263105487 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149646481 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107751341 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151097583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126399414 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109164277 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165398268 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168139451 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179258291 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145539713 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109690384 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156681944 seconds)
  done (took 82.93286 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186478054 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135918347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1486372 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203254321 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17737747 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271500581 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211127692 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255232349 seconds)
  done (took 2.659583657 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093941016 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146911178 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158776085 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133230877 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092045793 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120632856 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344220719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133811517 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117137547 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122552697 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174695192 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094485821 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549956743 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091184694 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120205191 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.1081846 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092633231 seconds)
  done (took 3.759579036 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.233866707 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.498913885 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.980490309 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195245192 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.16062 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11790938 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708947299 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096182927 seconds)
  done (took 12.065528687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115820152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137452698 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124909353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153434939 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141666076 seconds)
  done (took 1.757405535 seconds)
done (took 124.360239405 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098109256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128393165 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098240562 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130647203 seconds)
  done (took 1.518617881 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094863206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070988193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101078601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075132601 seconds)
  done (took 1.415186825 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191425033 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169927227 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403144012 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071630065 seconds)
  done (took 1.581008416 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115727309 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133111939 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105280019 seconds)
  done (took 1.438346469 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106913282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129827058 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103430675 seconds)
  done (took 1.421019746 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106621519 seconds)
  done (took 1.187409816 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108851195 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137737005 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110024886 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137043712 seconds)
  done (took 1.573598917 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098781334 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127934314 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109815106 seconds)
  done (took 1.416517064 seconds)
done (took 12.986878947 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105150102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424296173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413072637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117701791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724355933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380966617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05708404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146894058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166104288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093514199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141009908 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672798811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046317047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380482836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004378163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472333299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677434185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121521737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120217681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094830056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040031569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092335972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122784099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09297519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704302621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42726427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095669987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.474249684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093380371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1273789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383972774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123033196 seconds)
  done (took 17.20747883 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09551125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174218359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099008596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137884824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124026387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094333748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127739907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09335803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178979225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123284817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11113714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122853813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126527049 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096163613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143449186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093301889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125545242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093387881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122863592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121394167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112204394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121411381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094276392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122165237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093870073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135817898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12277304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094530512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121102403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099090479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128469475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095307368 seconds)
  done (took 4.827983979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141210387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18288951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128645164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126470881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170024652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12486893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199090459 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118343574 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183618646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12380032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139785855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093975396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157778622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12682004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115527754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121529698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097102383 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123088615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094035351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123808524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140690081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094270365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122303048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094532502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12387524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108352925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124520865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121279842 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094716845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12716137 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100249879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125087444 seconds)
  done (took 5.159883132 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097135761 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126367094 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109454145 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139071982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096256601 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12649578 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097694338 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125046569 seconds)
  done (took 2.00470884 seconds)
done (took 30.283685536 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111604398 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126856074 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107514972 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135373686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103637444 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132229419 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092829835 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134250813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134553434 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103534112 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137983149 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093341406 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122836795 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092250645 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13594519 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09788609 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132903075 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103178923 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134430586 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132824207 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095295815 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133453382 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103304711 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133807378 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104823299 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133714511 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137283582 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1007627 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123183853 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094873508 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124431046 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10587662 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124389593 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106196059 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126872785 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098137086 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124278947 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094736148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133861207 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133250802 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09994601 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133641153 seconds)
  done (took 6.012750745 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108285087 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140477373 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104958009 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081044845 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117920771 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080478333 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137895753 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079543934 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110303835 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10761856 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074411794 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106086915 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078656316 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10217505 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077517775 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075418228 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108782707 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076120532 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076120481 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106024197 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079709089 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072561661 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109020592 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078887282 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075009032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110194814 seconds)
  done (took 3.567787662 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100572318 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134793198 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113738423 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184055812 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161646876 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100163325 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132160739 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140146991 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110140428 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121253688 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096901904 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150539753 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110400553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13049042 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09261446 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139067548 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135838098 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095290439 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128802359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113213459 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140066979 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103449942 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141288379 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133164261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093333762 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12282855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097560267 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135398911 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098035993 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131990956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098082541 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125713638 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123056414 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106346365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126478155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094395255 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14259466 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103077952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131835759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093679753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130488641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121916238 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161875158 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092050538 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129419145 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096005286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132269273 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121658423 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111257605 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132654412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092580967 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126739784 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09209821 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122801834 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108297097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12441573 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094639693 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132008319 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127056462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106195184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125367104 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109446794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12292907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100762502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122380548 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093802196 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121545251 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144957883 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095370266 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162645944 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094279408 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124742086 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103148075 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132052199 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129148466 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093415218 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138163233 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102688449 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12631163 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103056028 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126936842 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095665444 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141058442 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12406717 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096048046 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123269936 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100462321 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124997976 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095968344 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136870993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092050789 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125963103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110610522 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123038149 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123355551 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100801386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127214133 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093110792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136603061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098119886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124139516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103214296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123048507 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125192249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103701881 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127364826 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092484713 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127934558 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099109039 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123876031 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094863104 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126143597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094875544 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1340393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129910284 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099934944 seconds)
  done (took 14.879911366 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230480937 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21677503 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208045587 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295452017 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137453304 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11579193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.245771702 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.12711029 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124674908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161034239 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172427406 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182804364 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171009018 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182456306 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171634834 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093781165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144404581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166433755 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21750425 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258885306 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144408866 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101918524 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161915508 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160933644 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138350662 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133440886 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110799472 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135312641 seconds)
  done (took 5.824086481 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109027979 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157039678 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099039431 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145542074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150069956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093126572 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129053652 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094365757 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136642511 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136861996 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093841863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130366685 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101225788 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13298624 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123385632 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10313918 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13236089 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095114131 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126824025 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097161457 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13446246 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102201037 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128706615 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122212452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103975801 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122649767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086777705 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143991925 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126661035 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116349407 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121891334 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102044605 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138385342 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0949069 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124535326 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095879658 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12687701 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09629279 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126488783 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092623158 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123999535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077941326 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123665005 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1386685 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101326046 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08095057 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130831731 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129189073 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095895244 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121382569 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097164533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125945392 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09707173 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131514905 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096618033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125093697 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097401786 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116301408 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10092845 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12640914 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084882244 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122471935 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09940031 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119354031 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101803767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128341921 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092969999 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126310797 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098199532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129949593 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095744087 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130792684 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092051153 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12642128 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096497331 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129882655 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12747069 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093897657 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12372563 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095199271 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075523507 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125835182 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074787187 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127949525 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092574813 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123664529 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096772887 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131078719 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139883935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095554247 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133427222 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094205504 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123688723 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097185734 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114125832 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096178066 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140295176 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142764585 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095343659 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12328475 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10852172 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126771701 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092690407 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107219059 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103050673 seconds)
  done (took 13.047652435 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13185191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154485387 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129688837 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112487123 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157012776 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15821691 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1017906 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131528434 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095445604 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142809716 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093682185 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133788201 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09409556 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138227272 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157581427 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103442402 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127111993 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10862331 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128424208 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170539293 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111610883 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144032604 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110734265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124674032 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129338932 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112060118 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162641043 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108487802 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137810404 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143634209 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108958609 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163317069 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144970318 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10006988 seconds)
  done (took 5.501107959 seconds)
done (took 49.920767954 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.217225339 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423089544 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193250037 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.161032564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226686876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.205629698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.221269393 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188654738 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.832558708 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188844495 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440053813 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.772855373 seconds)
done (took 60.189029075 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.232205497 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343809872 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494034645 seconds)
  done (took 3.952826149 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.808722314 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.131744503 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447453824 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188960354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189975914 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481053212 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.897169446 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.557178056 seconds)
  done (took 28.007231782 seconds)
done (took 42.12005055 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202915955 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.211401558 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232752845 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170003419 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30328857 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.222767218 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.585252379 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.254840015 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208263482 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178072645 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211569825 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194159476 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19600081 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.647841284 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.193254557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200567211 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.276913988 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.739711556 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596799185 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196778517 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226712329 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245252588 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.213189961 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216854536 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236630724 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191742834 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1947692 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.214801638 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.792908252 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194369673 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204968677 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.218137263 seconds)
  done (took 190.289119162 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192194363 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.277978776 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.376876109 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.241080973 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.620861835 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.395026262 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340117465 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.713518118 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213963366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.212273345 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44331609 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195814587 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.557947659 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164863719 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.223004868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259102669 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.403772861 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.53679766 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229778061 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.349975801 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.193539107 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.572810645 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.499653259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.434473048 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.229550876 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.236546997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22048777 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.211273319 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386802656 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.356058234 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.1997224 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216362364 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.820996939 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.04619794 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207289787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.232092955 seconds)
  done (took 150.131263963 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194194528 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193166527 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19540644 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193684398 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225929431 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194308458 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779243537 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782727179 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708615311 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.945873509 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.621466836 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457709216 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193902228 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288370571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208413257 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195594645 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210373879 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.237897656 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198826568 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195797128 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780176789 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211012506 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325157194 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.371697531 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211501748 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227293069 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585947117 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195336456 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227737003 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528354847 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244137694 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19469991 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594381836 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.899175995 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311947505 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197601948 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228856379 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196010615 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476937905 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195992146 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.196095628 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199156577 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.194912955 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896160573 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198274717 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782883187 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199734093 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.184350596 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199828269 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196154329 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.196603197 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.493906974 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898135302 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21712121 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196449532 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199899922 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197349371 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196853061 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197565197 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229099738 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.470325169 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295117984 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215026019 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200897174 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23070987 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197748747 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.273333297 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214404087 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.768770413 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.270378877 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305351535 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787165069 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202901977 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298223404 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319600994 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.198361876 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197996992 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198582093 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198106082 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308645131 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197978945 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615055233 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375721617 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215982029 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.619120826 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300256394 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199238909 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613156585 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201913888 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198237022 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991436737 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299181622 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198846079 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198291201 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198759271 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.612141893 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787743408 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478179915 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20248348 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.513343659 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203172094 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.629227485 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757919588 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892574518 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203800791 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313006567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.377180917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217042399 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199227298 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.62350172 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203822996 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259453865 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201418299 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598246092 seconds)
  done (took 366.670529387 seconds)
done (took 708.210044589 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.815088556 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.804520781 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.912224861 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79731783 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.760479794 seconds)
  done (took 10.21496394 seconds)
done (took 11.340576683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.392647689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394481654 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264250347 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393370093 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237271911 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.410486726 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375112499 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225116017 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302312757 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283248257 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300577142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254423259 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235664453 seconds)
  done (took 18.194071445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515222796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506045372 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264614925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510649657 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241050399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517412446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400912042 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417999123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413592234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235044131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214272487 seconds)
  done (took 16.363604772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51595376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542767616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269639197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518404135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242808226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522186128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428679264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426684854 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439128695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236685686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21482957 seconds)
  done (took 16.484148373 seconds)
done (took 52.169504828 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211528206 seconds)
  done (took 2.338054662 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244753059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410597601 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231333725 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215856701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212060777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212209367 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216893397 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212192119 seconds)
  done (took 11.083855843 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211831423 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211585866 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210485791 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208870188 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212981259 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207861122 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209239558 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208818767 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209224636 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209029283 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208092834 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211046103 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213168121 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213034135 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20913457 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211376791 seconds)
  done (took 20.493825058 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211404589 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209646516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210056203 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211415509 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21035311 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209703902 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210581282 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209490051 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209928186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208911121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210328539 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210003487 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211424229 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209828595 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210143269 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210505759 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210653149 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210300706 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214935742 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210038914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211289575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211681047 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209396789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211008661 seconds)
  done (took 30.183990921 seconds)
done (took 65.228628696 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.83554697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.907819222 seconds)
  done (took 6.871909999 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213690764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.213136529 seconds)
  done (took 3.556863867 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213486697 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212428162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213082291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212745626 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212844589 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214314007 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21314075 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212459313 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213545095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212825499 seconds)
  done (took 13.260930116 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213142367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213283689 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211288 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213785602 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.213849316 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211446694 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214200637 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214385512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213584607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212012282 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214258502 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211791315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213360688 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211129139 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213143193 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.21197601 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212676195 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211501116 seconds)
  done (took 22.961930836 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213258176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213185329 seconds)
  done (took 3.557119942 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212304032 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212298409 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212814764 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211717135 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212460452 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212579341 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212991387 seconds)
  done (took 9.618127016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216330138 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.389764751 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.470440222 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.807375967 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216587776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21978971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.088609515 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.22034423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221707512 seconds)
  done (took 13.982561302 seconds)
done (took 74.94035877 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.253378506 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230944019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.470087145 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.228158587 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241297675 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507560666 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.226076339 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333548462 seconds)
done (took 37.625425936 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215042491 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.2002808 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.964071641 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.196816385 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.30237478 seconds)
  done (took 18.795530595 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.258917751 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545923068 seconds)
  done (took 4.937294799 seconds)
done (took 31.081866196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216006248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.217023826 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216380164 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.214036979 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216544907 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217250868 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.214579832 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216387631 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215611319 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216953427 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212594214 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216527824 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.216569844 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216480785 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215093909 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216918839 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216435352 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217310747 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213556226 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214103207 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214130595 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217460651 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215464462 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214379666 seconds)
  done (took 30.312535234 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215458792 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213871245 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216020915 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215294419 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212499605 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216397502 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21580581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21203505 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215570432 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215292413 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213297434 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213047681 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215445835 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.214616085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215732975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21488907 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215391033 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212750541 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214851099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212925061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215322403 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212370939 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212778116 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216159721 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213197808 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213384795 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214968314 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213128766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214716671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213398133 seconds)
  done (took 37.566458535 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219997988 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223305495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214717879 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21504546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215154577 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215787041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214416091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215024886 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214719415 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215942281 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214854913 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21529573 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215238867 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215958795 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215458613 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215123957 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215029854 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217260179 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215048777 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215596998 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21580294 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215335004 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216181423 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216484095 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216448095 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217124766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21603116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215688269 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216140336 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215090425 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215498495 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215494908 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214917823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215823057 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216040333 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216015993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220009055 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222321156 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216730738 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217040028 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217850954 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216218407 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216318633 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216619902 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.21670447 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216605033 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217673805 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217683637 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217459902 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217015413 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217102652 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216866889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216631955 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216857353 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218097103 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217776143 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217010698 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217444574 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218015325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217438437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217224378 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21668086 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.21750327 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218144574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21872867 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217940545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218276473 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217408356 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217769223 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217719257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217471354 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218408123 seconds)
  done (took 88.739736218 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218004812 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215072127 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215932928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215572372 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216172836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218404943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215578811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218467079 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216448896 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218258036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219139623 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217042374 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215828765 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220041691 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219605524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216427403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21881655 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217657515 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220653157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219478694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21868609 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217695059 seconds)
  done (took 27.923228919 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220178472 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221795777 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217386316 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220473936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218656474 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21972297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220495203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22284295 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219760137 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216788982 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216951608 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219844299 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217629731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217796245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218602795 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219253423 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220501013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219090146 seconds)
  done (took 23.082356767 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217846884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219533875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221016402 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217839463 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218414336 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221388426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218763291 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221376412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220871238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218805788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221456435 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221622787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22211531 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218776388 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22104665 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21972086 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221829316 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22011727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221015777 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219448046 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220018318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223016655 seconds)
  done (took 27.983398006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221808591 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22249923 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220086857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219712957 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218935759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222638507 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.222927051 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2206979 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224224009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222595149 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220288763 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222554559 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221868172 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221877553 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220404828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219982923 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223025825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221076427 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222181838 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220257918 seconds)
  done (took 25.567015899 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224650753 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224739292 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225044346 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224957301 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225049062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225508888 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225640349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224841752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225516373 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226087114 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22522606 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225855409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225232558 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225842733 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226461343 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227217049 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225147556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225551977 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226576656 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225920652 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226296104 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225855296 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226208475 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228281512 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226336627 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226119103 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226052198 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227369419 seconds)
  done (took 35.46379083 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226021126 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224697606 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224634866 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223572385 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22401078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222610087 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222836161 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22400844 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22657239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221889376 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226818824 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226129518 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225576729 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22590918 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225507873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225896233 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226967965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222930272 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224956303 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223819948 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227096822 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226908967 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22693393 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223627577 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223474177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.227027895 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225160145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224495803 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226240296 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22378144 seconds)
  done (took 37.891257046 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245931373 seconds)
    (2/2) benchmarking "in"...
    done (took 1.244020223 seconds)
  done (took 3.631846024 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223733288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228380372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225846581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223417951 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223661163 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.226933794 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226772142 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223872132 seconds)
  done (took 10.945416577 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227821955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227530887 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226756105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22725862 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.228239636 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227707605 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234132211 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246142006 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229612179 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226795644 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234605911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234330443 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.229144295 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226912109 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227064484 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228957738 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229253985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227502322 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228155715 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227784981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227928558 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229304796 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229368483 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224576537 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230371512 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237288722 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250798937 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22727474 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226955115 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229974283 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227539277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224227926 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229931836 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228394129 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228025046 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227648551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236322867 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246064314 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234049968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247541658 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228016604 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.226235787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229018357 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.229641347 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230370273 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229164875 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228209618 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225806131 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227250465 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232289445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2339623 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228091176 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.22574308 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232138662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229711144 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235275874 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247731874 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23366655 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237794393 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2386516 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262002174 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253764625 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231473433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229419728 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239289678 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254883036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236548466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245715908 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226255901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229407802 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235964553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261862724 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25507397 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.231186927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231045897 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229537916 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230576522 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230066507 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238221985 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252486344 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231116873 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23566439 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240704031 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254106613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230603237 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23100809 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230464949 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231871924 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23171527 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241777527 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.250356445 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231618567 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230540626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.231580382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231601093 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.2323863 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230013516 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233595215 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226493453 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230486009 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230647933 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234570171 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24023665 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231802687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231153186 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.239242113 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250024603 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231420727 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.23802773 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231005689 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232218153 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232817576 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237672403 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229850772 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234578212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238038164 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231968798 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233308515 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232932253 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231286118 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241411513 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255744922 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.231126083 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229809968 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235329657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24214122 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231887871 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235409493 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23168385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.228958557 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229967063 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232902252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232313112 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232029457 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233005571 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232159502 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227387851 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231828552 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232755117 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233540357 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.233204086 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232727492 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233445386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.233445207 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231942113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233673627 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238038936 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251416195 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232081109 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232106247 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228384716 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232392518 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232977698 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23067419 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232049949 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232519926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232451092 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231827779 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231226193 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230499998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232189176 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.231828871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236156046 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232857907 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234618969 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232355309 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230008006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231926714 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233045606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23204773 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234325136 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23122455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236155537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.240197602 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.231983434 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23172043 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233418594 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23272563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2326147 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233709396 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235877596 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241076748 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.232906559 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238857154 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251855427 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232663587 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.23380573 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232090435 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23209323 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233459322 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236184936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24059077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2444033 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256906562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234768409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.236934278 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233467262 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.23799717 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236240916 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.23338844 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232902866 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23307664 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233901705 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234240595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.235403791 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234745337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234194194 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234869528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234260399 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234554101 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234875613 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234541783 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236301765 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231423445 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23387926 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235290921 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233747155 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23074432 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23373187 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.2361878 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235253286 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.236067954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24035217 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232787156 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236367857 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235340879 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235040836 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235955761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235878783 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236483931 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.235397067 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242717069 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25397769 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236911922 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24171865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25550763 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235045527 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.239114457 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.236395911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233881754 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.239126943 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.244101069 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.236494162 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.237135034 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.235934167 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236974897 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235829955 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.243090173 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252865943 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236002145 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236699093 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.238758752 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.233863904 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.23761095 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23681908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.236452352 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237443185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235881122 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236108032 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238876949 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.237167506 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235943046 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236863608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239189627 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244577612 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241537074 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235561096 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.239800495 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236355708 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.239128394 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235994295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.23635118 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236051369 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247886436 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260380397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244281383 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255269228 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.236007483 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241344783 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.255549671 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239109713 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236819391 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237042695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238883097 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235365962 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232589786 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237176144 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236219676 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238365654 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.238351958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24034664 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.236930474 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235836512 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236490352 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.236689469 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236635939 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.235697772 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.236877849 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.238789536 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238251227 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23531032 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.237112999 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243455279 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254537506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.238411573 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237663556 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.236753614 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.237429648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23943594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.237993536 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24075913 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245523058 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241025676 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.2456226 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239929603 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246317905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.237521576 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.241911128 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.246283062 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.235499193 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.23780774 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237939046 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23934082 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245049368 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.256920795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239997515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.243030739 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2386722 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.239487151 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.237944446 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.23918161 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238769429 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.238759911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246636567 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.256898248 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243655912 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241727473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.237244497 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240081057 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238390793 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238233667 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242588122 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239708399 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240255072 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23988948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238817152 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.23974747 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.240649078 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.241329669 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.236829912 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.238551249 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247385151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260564196 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245044404 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24012121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.246370909 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260987871 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246461402 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259421896 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.240596948 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.241411282 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.240337208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241537345 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239463382 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243027195 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.2404099 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.240815086 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.242296939 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240800956 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242142896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240956841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.240903214 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.237844798 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249819167 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262307846 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.240849783 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244021704 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.237281483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241291271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.243381834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.242657065 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.239264466 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2430553 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250748037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247356877 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.240872227 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.242532593 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239846671 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243852273 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240169929 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24061009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.240953677 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240901874 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.241920953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242057157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24384535 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.241412509 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.241552924 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241653974 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.241625334 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250731653 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261030488 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242435324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240997877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.243038233 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241893388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.240951214 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.242006004 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241512481 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240863784 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243299457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248096142 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246310603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242519096 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.240719006 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.24162568 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.241012391 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24127291 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240932164 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242293792 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242374041 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241158627 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240906245 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.241700013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.239378385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.241958088 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24169561 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241540368 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245131829 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.247368731 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241364216 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238932395 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.241189375 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240239914 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.240359108 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.242562887 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248077437 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26447447 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.251764629 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248846939 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.245870818 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.24130726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246137495 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247872277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.241722204 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242808039 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.243821039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243137916 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242407531 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.244220911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242575648 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247528515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.261579593 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241507772 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250555908 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.260530073 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243056215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243210405 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.246604734 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.244046038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240261189 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243284823 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.242768831 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250190677 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.263348118 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244403216 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245879932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243129161 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.244901706 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247356843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243396968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.245760626 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240400809 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.244780968 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2442783 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244332512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.241591041 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243449232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.244284953 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24732715 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249555135 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242589708 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245449105 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.24413711 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245537136 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244714308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244891135 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241884502 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241145451 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.244953875 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246353444 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.244090405 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.248351736 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243800302 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245679144 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.244970925 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246667637 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247471137 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.254163632 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251908458 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.241625357 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245118867 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.246519346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246893189 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245684501 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.245526514 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247006492 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.246404345 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24553442 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246608408 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.246650508 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.249223103 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261096545 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264363146 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246516428 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247324718 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249311305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.245192979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.245183685 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.246280708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248952095 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248903546 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253991219 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.248027163 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252934801 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265627934 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248224998 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.251391216 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25107857 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253216003 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.250459276 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247783114 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.248062705 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251776951 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.262377387 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247831955 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257521501 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275865667 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267256073 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.249121828 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.249315087 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247051885 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.250265222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.250015652 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249179467 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.249648245 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249893979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249534603 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24939117 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253671825 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.249828186 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24969687 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248925647 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.247424059 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250096274 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.247065034 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250460583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249532255 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250114497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249733797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25073705 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.249486896 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262009989 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27495042 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.249670658 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250033133 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.247865713 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.252884914 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252758621 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259438954 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25682802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2514817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250976527 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.25105517 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250672904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.248450287 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.250747792 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250487313 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250259499 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248574866 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261659479 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276313474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25470766 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.24968499 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251342876 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.25009558 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25137798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252490587 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252246543 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250336257 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254746943 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254077171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.251272439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251453827 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255359408 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257461508 seconds)
  done (took 740.682135421 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249450798 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249414959 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249673848 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250229679 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249941741 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2507612 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249934379 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249428755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250121367 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250549982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250660376 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250532559 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250082508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251004963 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250945294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250435287 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249579938 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252188641 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250014846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251019918 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251075776 seconds)
  done (took 27.422479791 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.253496854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.252543989 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251710466 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254036716 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251215237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25473577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250771109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254178312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254090987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252252432 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254469577 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255594557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252640669 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252247714 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252079248 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254762723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255194688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252000826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255211442 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252048812 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253841644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252995754 seconds)
  done (took 28.739493761 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.254429534 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.256206481 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.255438918 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25278992 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.256004238 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252082914 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.255153233 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.255216442 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.256058974 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.254987172 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.254600369 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.257815832 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.261375341 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.258733581 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.256157565 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.255465735 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.403215778 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.256942703 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.255205458 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.257373816 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.252824794 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261401063 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.273866795 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254032009 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.254230705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256763179 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255403798 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.255937674 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.256889129 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257161264 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259466713 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.255350818 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.256549304 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.25848042 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.255894094 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.25826762 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.260008561 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257752176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.253034078 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.256263167 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265639198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.272906402 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.258074622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264288906 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.277602913 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.257418067 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.260393952 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.265505678 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.253647046 seconds)
  done (took 62.960125072 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.256935861 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257526745 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256608147 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256724272 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.258489643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.258304892 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258187167 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257295747 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255707104 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.256839265 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259584047 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.256532801 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255602866 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258571823 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259276415 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256118933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25533309 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256878548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255825339 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257003955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257012455 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.260288472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.260066812 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257630047 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260021402 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257972288 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257587171 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.260251617 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257802275 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257419307 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.260931219 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261366124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261001599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.25734168 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257886407 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.261236744 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.259882205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.258079966 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260602779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.258376911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.260507092 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262322335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260163561 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261520627 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258335396 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257224169 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257052113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.257296688 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257796896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.261053373 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.260803152 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.258483389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261445863 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.258972661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260065556 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.260831133 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.258938306 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.259072405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.261369195 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258751302 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258510043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260980895 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.259396611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.262495127 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.262739249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.260185708 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259314403 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263246316 seconds)
  done (took 86.777685172 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262535464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263154516 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262336629 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262289035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263184732 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.261997034 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262732218 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261960771 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263301485 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263188524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262526816 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262258886 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263751665 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262553807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263336512 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263384216 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262984158 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262345851 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26332339 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263300643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263164593 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263838104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263955963 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260653195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262371537 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264518124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264752312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26500336 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264474387 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263873924 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264940716 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263279398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263823969 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264727669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.266314845 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.264600542 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264835229 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264748032 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26583223 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264404885 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266122804 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26621597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264144279 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265632308 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264308009 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265777696 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.266337955 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265402102 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266464119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264141336 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265910925 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263166553 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266964998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.26954883 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264723769 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263137957 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26727275 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265641976 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266422554 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266269353 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266315843 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266569873 seconds)
  done (took 79.564108486 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266678946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265954371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263185113 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264113259 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269462027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26522409 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267823417 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266201559 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268982671 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266736472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265771986 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263269746 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266759045 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264793328 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264027511 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265559085 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269052208 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268166596 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267650801 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265737025 seconds)
  done (took 26.502464163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264882795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267501281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267513909 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268659784 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269081818 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269607289 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.272738489 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273044866 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267671485 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270153791 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272381826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272345125 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270245471 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267527747 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268605018 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265950689 seconds)
  done (took 21.488560375 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265930671 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268877656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271524089 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.269711531 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269599671 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270173068 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267398443 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269109382 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268192001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269443814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.267756804 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270104983 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.270094281 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269777838 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265339512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269899232 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.267392492 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266291283 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.269557554 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269740708 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.26726526 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.26619101 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271540334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.27138419 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.269066277 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.272238278 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27157163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268773559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269080273 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269631592 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270306707 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.26597103 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267311513 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269638667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274865518 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.26903368 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273838134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.271041256 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272227805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.271143988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.271528379 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.269186548 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273197851 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271953558 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.271184152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.27100767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271115596 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269112892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.274365066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268815806 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27140159 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.274646864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274318241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271643246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27182097 seconds)
  done (took 71.034901972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271324312 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27219843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271287457 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272129741 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272260397 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268741279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.272885775 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271317294 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26987159 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27158579 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27208838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272879252 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270932971 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272856839 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272636584 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274167038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272489391 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272544739 seconds)
  done (took 24.075801556 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273707088 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276148247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273480819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272608639 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274516946 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275331721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272442884 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279000495 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277844228 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272164107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272775199 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276672852 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277270436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273082541 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273715834 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272460912 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275669784 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2724745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273129944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271460954 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275033106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276941703 seconds)
  done (took 29.220766861 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.272824519 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.274514373 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.274604071 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.289787645 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.290592446 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.295062914 seconds)
  done (took 8.880049463 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279571203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276014559 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275835956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279339689 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274814037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274872743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272906608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275969666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27654109 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273222333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275108988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275823731 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276677544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272679231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275987271 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277345321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271742891 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276163413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278135552 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278802907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277270771 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278597803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274001353 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276936669 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275806583 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279361987 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281746747 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280150139 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274714528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277110293 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278328049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274880376 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279384706 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279117963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281095143 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276197143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278827209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280799571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277787126 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275213026 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280999877 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282996353 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278142427 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275740596 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276749604 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275787097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281284371 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274122122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274769406 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280545007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281257754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276125846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277272558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28378779 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280641045 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282896089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274173885 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275638641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277999134 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277369901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2763928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278137883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2767864 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275442832 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278513453 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275984876 seconds)
  done (took 85.513949799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276331985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275366929 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277430714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276933979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279453054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275401845 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275770359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27695055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278588162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277468419 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280363842 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277343021 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277096582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2782926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277535307 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278229869 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275643997 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280406833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280836263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2813258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274077543 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27515299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276706143 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278268955 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276565684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279921413 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276996903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279375938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283025015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278655145 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28148919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284711316 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281719665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280072486 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278974883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280589567 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281459105 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278788641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280669138 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286230175 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28294987 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287513244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284834116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282644848 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282971136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279695405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279072212 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282279428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281927793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281744504 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283520026 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283358597 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282959505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280093839 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28077006 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284996597 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284017888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284308001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283227721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284907952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28453038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282928931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284569247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284733735 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279419073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281308601 seconds)
  done (took 85.692879637 seconds)
done (took 1728.796738089 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.445879749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400772795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282943131 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.339126371 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.280215145 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.284618602 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.302932058 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28002844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286390485 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284195338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283223131 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473502444 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.285848779 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.28283848 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280413031 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.375598124 seconds)
  done (took 42.360057861 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307332523 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296587404 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394940626 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.309536117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.306952138 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.466156922 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.344673416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.293588907 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.448602097 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.335023833 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.744446026 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.308287209 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.292621047 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349350001 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306417368 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46731374 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.52369149 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.782290814 seconds)
  done (took 29.470535825 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.699288507 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.306806105 seconds)
  done (took 9.197770867 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.305248353 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294379264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288522193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.286967894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290030061 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.278872436 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285552941 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.29474314 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.6323712 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.4104171 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294527374 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.29476645 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.305328588 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287139431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285212198 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321209343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442040944 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288327947 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.283584289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.292122512 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286636311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37532394 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331450106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291768906 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.40426825 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.642503845 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297781843 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.295558963 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421940331 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.293635446 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.288125567 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.290861846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289642592 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.894894865 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.794276085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304677294 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310343391 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303354501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285573351 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.453840202 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298490574 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294803158 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.281867445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.800047417 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437853978 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.40351394 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445080934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.306794507 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290221719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349641446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.290090143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.289675955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.317121225 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.028754821 seconds)
  done (took 108.35811941 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.307633767 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684684178 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450100866 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307369781 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963531766 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914481662 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301167724 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550462884 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32630335 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284994142 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610137077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770990191 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301528549 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.287510256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.790420003 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.284927714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282668826 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.154410564 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307041425 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.283079694 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762002088 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29278736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.283792412 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.440826128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.321438055 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727338789 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.58381147 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.677354418 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309721061 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283529837 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.735621083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30934117 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.303459694 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.283494468 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.536429789 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628589061 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624658295 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.314918327 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340699444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292268046 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.301887776 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.719178877 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635010889 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.31078198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.31408387 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.730995337 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31025745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.290076901 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296404264 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492408619 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.975290693 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290577885 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.588745043 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293781349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.580883626 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357173087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367550475 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753861751 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314771448 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.329311058 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361608681 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.286945991 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292810938 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292650991 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294927389 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620313693 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.644717937 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29148605 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.619655368 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755992598 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311845127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.806246757 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.110709215 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319157199 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.342792403 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289224035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.946433914 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767379062 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320756747 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.290524123 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607675089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312166004 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.597255008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308921487 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304324217 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801088281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.294717795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.299009635 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302238926 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.293279815 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.074170265 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292914472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.567224934 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.364155163 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288231371 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287479699 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.298500561 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28796339 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309603625 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.29273134 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.79782791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.312720314 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.262131011 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313115638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297930025 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309868837 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.292475338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29933089 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515360629 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.701921317 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.316150253 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297773983 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290250546 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.303354931 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.439726887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.296916162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.577661702 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.31313085 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291957949 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.300571247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949500487 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.357972514 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294952739 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320467414 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188412328 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504034864 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318781789 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.311341201 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298096996 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317444361 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.472721996 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321692097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.380560785 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.297296553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975045904 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326837749 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.332118646 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.627261185 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.305610656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.200691497 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315102635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293519984 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580242682 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.553162983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.595470312 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.295580551 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.295246235 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968116914 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331184967 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439719646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31394561 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.299653885 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.491432135 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.419514149 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298045524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.905783775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293494459 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508519346 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.299920544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608867539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.766244727 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312063387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298670114 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976779219 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.98277495 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.143815379 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.300039526 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602810718 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.268047724 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.779145745 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.293041509 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299652293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.851647396 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303270561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.301330994 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.29424661 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.297847929 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356644258 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464102324 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.573981637 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299499734 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722129323 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36056647 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295108393 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306900955 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300044601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645325423 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356754803 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.299534801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341308766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.299188049 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303262671 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748800451 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.138342956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.30568826 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44911295 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909943348 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.315788702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.284176912 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.853873822 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497348895 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807231701 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.320979463 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.551971083 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.289313988 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.302339542 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894673881 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362605999 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763288668 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289803434 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.266036486 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848389696 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.287625323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.352077736 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.266326792 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.266756716 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78539527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288008293 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.266279613 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.437726474 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284153651 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525809523 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.265072795 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.260163834 seconds)
  done (took 1100.044462419 seconds)
done (took 1290.623119389 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.255935582 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.260993347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.239917445 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26052109 seconds)
  done (took 26.196056282 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262412129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.263963875 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.265385416 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.262611351 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.266896338 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.263633878 seconds)
  done (took 8.759894076 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.310186329 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.26401328 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26345342 seconds)
  done (took 19.015264404 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.458421389 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.5003225 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.589243478 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.316062033 seconds)
  done (took 10.043678326 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.267750987 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266214272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.266737671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.26858745 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.271300019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.270523947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.268255452 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.268743351 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.270696776 seconds)
  done (took 12.598073232 seconds)
done (took 77.792936908 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.872754218 seconds)
    (2/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.48235156 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.291666185 seconds)
    (4/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.262893012 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.293650829 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506464254 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.382147565 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242143388 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342767196 seconds)
    (10/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.289283525 seconds)
    (11/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.36941949 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.286900653 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.606266593 seconds)
    (14/286) benchmarking ("sort", Int8, true)...
    done (took 6.283386587 seconds)
    (15/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.538593456 seconds)
    (16/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.256467395 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.269634946 seconds)
    (18/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.472269831 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.625131426 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.10243467 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.265413372 seconds)
    (22/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.446870026 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.312066741 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.463439108 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.704760436 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.250706932 seconds)
    (27/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.034234557 seconds)
    (28/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.819855416 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.2845343 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.451415398 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312312156 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.559849428 seconds)
    (33/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.251431482 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.373088799 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.143907638 seconds)
    (36/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.110511428 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.286874333 seconds)
    (38/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.075003019 seconds)
    (39/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.349092483 seconds)
    (40/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.733355047 seconds)
    (41/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.250182408 seconds)
    (42/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.611640905 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.394569863 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.249069419 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.614791296 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.267031233 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.255138909 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 5.259840747 seconds)
    (49/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.639354214 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.141394372 seconds)
    (51/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351830261 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.263984761 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.247272264 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.394135314 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.528468752 seconds)
    (56/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.375902675 seconds)
    (57/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.252101036 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.888183278 seconds)
    (59/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.329149274 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98913024 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.328375462 seconds)
    (62/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.377733354 seconds)
    (63/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.292258766 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.280599349 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.253102157 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.247900639 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.249636135 seconds)
    (68/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.30124331 seconds)
    (69/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.687158292 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.846486571 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.721844505 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.260367381 seconds)
    (73/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.36817988 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.609070435 seconds)
    (75/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.367732827 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.976320223 seconds)
    (77/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.48366693 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.259531619 seconds)
    (79/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.303837466 seconds)
    (80/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.405960255 seconds)
    (81/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.849165213 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.393468571 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.085700455 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.661269707 seconds)
    (85/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.624120303 seconds)
    (86/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.966858053 seconds)
    (87/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.241222969 seconds)
    (88/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.35142098 seconds)
    (89/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.241271382 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.344755664 seconds)
    (91/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.777897181 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.338100389 seconds)
    (93/286) benchmarking ("sort", Float32, true)...
    done (took 6.266628475 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.262358186 seconds)
    (95/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.284003633 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.277750534 seconds)
    (97/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.300179031 seconds)
    (98/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.381242289 seconds)
    (99/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.258765376 seconds)
    (100/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.747418889 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.238575508 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.304056868 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.235227004 seconds)
    (104/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.584765436 seconds)
    (105/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.606592134 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.168373483 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.625711852 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.239701111 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.466439041 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.025642965 seconds)
    (111/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.475699329 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.977283152 seconds)
    (113/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.012240261 seconds)
    (114/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.252339503 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.780576594 seconds)
    (116/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.040549816 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.252291501 seconds)
    (118/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.27114199 seconds)
    (119/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.181391258 seconds)
    (120/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.588860771 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.258438291 seconds)
    (122/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.27696285 seconds)
    (123/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.905276795 seconds)
    (124/286) benchmarking ("sort", Float64, true)...
    done (took 6.268136326 seconds)
    (125/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.234807466 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.770092137 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.297759145 seconds)
    (128/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.234554996 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.512153524 seconds)
    (130/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.600342121 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.976231162 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.530698213 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.487942876 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.259532736 seconds)
    (135/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.028393358 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.380173758 seconds)
    (137/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.234674281 seconds)
    (138/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.264652012 seconds)
    (139/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.23481792 seconds)
    (140/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.059295259 seconds)
    (141/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36741208 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.355871959 seconds)
    (143/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.234248022 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.346421801 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994504052 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.281407635 seconds)
    (147/286) benchmarking ("sort", BigInt, false)...
    done (took 6.254199852 seconds)
    (148/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.083277095 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.236041724 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332894396 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.453292374 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.993408527 seconds)
    (153/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.457118262 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.662891555 seconds)
    (155/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.938723077 seconds)
    (156/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.435352567 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.282101524 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.25353826 seconds)
    (159/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.444063981 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.745081186 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.262248707 seconds)
    (162/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.465968368 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.247946482 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.65672325 seconds)
    (165/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.270168087 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.235238577 seconds)
    (167/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.766201887 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.315049693 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.341393494 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.237184573 seconds)
    (171/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.338007613 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.259120357 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.237333993 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277942937 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.275716163 seconds)
    (176/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.250431975 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.456389341 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.29982202 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.276774633 seconds)
    (180/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.208796304 seconds)
    (181/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.963613636 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.385356162 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.597372374 seconds)
    (184/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.672042161 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.293372737 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.256955993 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.482841971 seconds)
    (188/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.020193049 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.246127136 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.861178793 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.350217049 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293107175 seconds)
    (193/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.608671485 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.308295138 seconds)
    (195/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.727492053 seconds)
    (196/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.06688007 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.50445302 seconds)
    (198/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.261671733 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.138810112 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.697003586 seconds)
    (201/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.428459146 seconds)
    (202/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.37199525 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.874479191 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.468931189 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.531429144 seconds)
    (206/286) benchmarking ("sort", Float64, false)...
    done (took 5.526054036 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.824750724 seconds)
    (208/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.384157684 seconds)
    (209/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.350858501 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.268051498 seconds)
    (211/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.35692729 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316467377 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.271170466 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.274316397 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.273600618 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.277704548 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.293093615 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.658894511 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.267425099 seconds)
    (220/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.279728252 seconds)
    (221/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.279231061 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.933987232 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.266610509 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.278102762 seconds)
    (225/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.286167255 seconds)
    (226/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.240461815 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.23280474 seconds)
    (228/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.240390144 seconds)
    (229/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.833987216 seconds)
    (230/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.379901574 seconds)
    (231/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.233711109 seconds)
    (232/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087607538 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.252109551 seconds)
    (234/286) benchmarking ("sort", Int8, false)...
    done (took 4.276337579 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.779723558 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.455683507 seconds)
    (237/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.252309245 seconds)
    (238/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.992847448 seconds)
    (239/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.240684632 seconds)
    (240/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.285337717 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.854660084 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.286456641 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.613732271 seconds)
    (244/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.615544215 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.657450681 seconds)
    (246/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.578098619 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.083215912 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336278202 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360127725 seconds)
    (250/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.641488778 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.252579472 seconds)
    (252/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.258868441 seconds)
    (253/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.846116851 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.957062914 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.169521135 seconds)
    (256/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.337970334 seconds)
    (257/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.339831706 seconds)
    (258/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.255779738 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396999455 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.337494921 seconds)
    (261/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.365525065 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.338174548 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.366083026 seconds)
    (264/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.337415615 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.065702339 seconds)
    (266/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.457912963 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.262477346 seconds)
    (268/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.448709957 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.080242096 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.298590141 seconds)
    (271/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.258491022 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.30064419 seconds)
    (273/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.258310289 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.667196811 seconds)
    (275/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.298733494 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 6.257232186 seconds)
    (277/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.237954031 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.637566117 seconds)
    (279/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.300925536 seconds)
    (280/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.239137899 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.286038786 seconds)
    (282/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.334322778 seconds)
    (283/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.254924447 seconds)
    (284/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.058635116 seconds)
    (285/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.260358401 seconds)
    (286/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.313688233 seconds)
  done (took 911.784043919 seconds)
done (took 912.966032738 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.289866129 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284648341 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.268429949 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.290440398 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.378831645 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.291301315 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.278245396 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.270763857 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.316660105 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.318532919 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.267427311 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.290397122 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.270299747 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.26768543 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.268160592 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283095341 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265997348 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.27456996 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.286000987 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.279032159 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.284624388 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.267140892 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.319066545 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.290625948 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.272981412 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.271893961 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.272755992 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.288032781 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.380968765 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271782488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.272461611 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.281570299 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266167108 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272961075 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.264606792 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.288882272 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.281637948 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.278956215 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.274195642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.302091328 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.64926795 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.291399217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.271918744 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.271193407 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.271007843 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.275775477 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.271583506 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.277627068 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284732428 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285816885 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.653809915 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.308224465 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.274030949 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.27279783 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.28178769 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.270607819 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.274875476 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289347838 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.292141094 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289043398 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257532611 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.2811667 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.27366905 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.28785423 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.279889227 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.662403595 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.283219548 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.276228808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.654427275 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.298913414 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.679885989 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.30094092 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.273321882 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.285302656 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.303919689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.273056118 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.272557037 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.272282174 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.279922441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.27047832 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.28261995 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28720544 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.27788829 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273681471 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286898536 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.296203331 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.283842386 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.273608997 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.282743483 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292530063 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.280716941 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.284196848 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.276780703 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.269380854 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.283348622 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.277344978 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.276473345 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.275894126 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.278390116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.284871687 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.640163459 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309093236 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.270747229 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.270405752 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.274820959 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289488087 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.641619837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.29123691 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.296001666 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.321831116 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.275960632 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267623885 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.284614078 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291715589 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.284516346 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.278718704 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.270860722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.251280956 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.633483191 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.305872321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.276926359 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.274128879 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293113219 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.276425533 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.272468179 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.265466109 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.276644587 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288990418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.396412974 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.286780828 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.307723637 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.273725583 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.279644486 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.302464316 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293107971 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.307913634 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.279484456 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293629504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.292006726 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.273391118 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.287426572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.287796183 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.278028548 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.282295612 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.272785576 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302544798 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290939949 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290163926 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.297799266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.398445181 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.275235179 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.252745524 seconds)
done (took 215.45193635 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.34643357 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.26689337 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.372194594 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.274345388 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.38647038 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383210888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.271824607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271328201 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.272807597 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.670592464 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271499615 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.272197707 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.267984102 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.272567099 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.36815854 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.27451906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272269475 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.634728378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.275140894 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.346879668 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.276697296 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.274157337 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.275013782 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.685560645 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.275907714 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.277208583 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.346930317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.275282636 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.664732004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.272102415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.276661232 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.695976621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.366127402 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.293061133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.28467934 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.283090379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.387653457 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.292389431 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.365682701 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.364024118 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.374729747 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.315296695 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.273128557 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.269965449 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.278034988 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.278023127 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.273541375 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.304906635 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.275769924 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.274802814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.633156125 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286734423 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.285265735 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275083233 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275108748 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.296711271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.275701812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.278353836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.368718507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277967748 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3399381 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.682431347 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.680590085 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277866909 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.272821536 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.276409678 seconds)
  done (took 144.891338882 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.345980994 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352217907 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.387071511 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.294046235 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.329690164 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.390828783 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.293707532 seconds)
  done (took 10.582215337 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285177352 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280155983 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32775437 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327907124 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.279552577 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.457979994 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280239184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290744683 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276638804 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.332632759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281374127 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.280183463 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.286518072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.273710965 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341122541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290316913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394395852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.281546018 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.280755303 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431171797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277345383 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.286937673 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331384731 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.291933539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.281307532 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.286170911 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.094944339 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281024131 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276725528 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.279917683 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278057401 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.35558777 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.281132528 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280554504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278954915 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395846219 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.280453664 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277893115 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.281209782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.27794929 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.282891362 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284290866 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.282253387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279201998 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.2808426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305051312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.281511069 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.280854988 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.282065646 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.282547171 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332427234 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.282716946 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279705035 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.278670114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.337343434 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288561408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.281910732 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.277902917 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28216072 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279500764 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.434253231 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330680178 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.281443428 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329550415 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282966719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.2828848 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.28130265 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.282612777 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336575375 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282727074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331099552 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.279839416 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.469472815 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.305667196 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.284561812 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.285575865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.284940336 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284052659 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.278913214 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.289663996 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.281785986 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.283965266 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289669983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281107511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280925235 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449151966 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393222043 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.280968787 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.296542645 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.290678601 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.282447769 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336714334 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283662913 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.280893702 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336954466 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397677651 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.337716402 seconds)
  done (took 148.511961053 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.289041465 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.292989984 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.285026987 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.299996665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.28590855 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.285677993 seconds)
  done (took 8.932770645 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.286124848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285270041 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28516389 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.284668854 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284804332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.285258155 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.285811087 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287977446 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288537753 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285206714 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.285832507 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.285790152 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.287243954 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286583611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.286647724 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28665933 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.286402605 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28287752 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.286672745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286626475 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.382778152 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.285874933 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287470624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.286915604 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.290841014 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.287143541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292748381 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.285696361 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.285831886 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.293864031 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.305123656 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287896519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287749135 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292837299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.290088421 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287918948 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291164487 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.288332973 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285309927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287792575 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.288344698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287369538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.287100676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.289041838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289369394 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.2920631 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.291494525 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296820677 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288071939 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.289242513 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.287592384 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288173487 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.289612239 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.288631377 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.290887538 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309270936 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.293389907 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289996064 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288551847 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.290668893 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.289348673 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.289625609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290533661 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292478997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.296582031 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290017633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290975133 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293487751 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289593222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290286967 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.290366854 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.288335643 seconds)
  done (took 95.107136296 seconds)
done (took 409.211703602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.590540812 seconds)
  done (took 7.789964736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.343578573 seconds)
  done (took 7.54506265 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.036404455 seconds)
  done (took 21.244673795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.296434955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.352529445 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.286235329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.283431278 seconds)
  done (took 26.419411229 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.411332213 seconds)
  done (took 7.610086087 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.283693684 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.283512035 seconds)
  done (took 13.769738987 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.708453229 seconds)
  done (took 7.9083758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.729458049 seconds)
  done (took 7.937942306 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.291929297 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.299516335 seconds)
  done (took 14.045468344 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.282607761 seconds)
  done (took 7.484105893 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.613811561 seconds)
  done (took 11.816850784 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.298866193 seconds)
  done (took 7.503552842 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.355347955 seconds)
  done (took 7.557743142 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.026952869 seconds)
  done (took 9.229711501 seconds)
done (took 159.0640806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.285112475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.286149331 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.287094592 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.285068314 seconds)
  done (took 26.345005059 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.326917515 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326352689 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.328569332 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.337760307 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.330322373 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.327066496 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.321073695 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32105528 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.338026899 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.330591129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.329368303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.330067509 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.326605183 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.319794762 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.330076048 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.329690759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.339046947 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.328543035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.321198146 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.331552081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.295005985 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.339737312 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.334346894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.295697111 seconds)
  done (took 33.041559871 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.815170225 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.366537706 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.448400015 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347292494 seconds)
  done (took 7.180749525 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.346631831 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.348919198 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.361022223 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.400672696 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.426989399 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.358919813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.322446482 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.3188574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.304348794 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.350273241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.426030892 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.366460351 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.433577498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.297787418 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.484645904 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.298064016 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.297182965 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.348691002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.40085877 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.418654232 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297294741 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.349695895 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.352921538 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.365648742 seconds)
  done (took 33.88123259 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.297448284 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.314612763 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295054097 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.29434138 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.304409046 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.294957967 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.296298358 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.297515685 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.296510764 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.302513362 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.295624036 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308182093 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.296768038 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.296049682 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.302139768 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.298159957 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.302704684 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.295976005 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.29666123 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.303662118 seconds)
  done (took 27.196529348 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.290926697 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.23543014 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.641847804 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.547206245 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.290319541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.29080353 seconds)
  done (took 28.502767876 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364399429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50785693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297118107 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.638085803 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.728883231 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.31440918 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.298934831 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.531801406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836444293 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.82679828 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353151122 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.363031302 seconds)
  done (took 19.26795589 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.303694476 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.299517634 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.298898224 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.31471087 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350815128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.317467732 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.305241048 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.29202709 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.357014568 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.371595085 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.317633788 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352383755 seconds)
  done (took 37.08931201 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379569862 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338206405 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.188052422 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389798492 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018218847 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50396779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369479242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029909858 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322838156 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566849703 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293696776 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390426328 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548518255 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295395074 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301158152 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.244333694 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543034731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761859049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303623649 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232096079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326221548 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30777627 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.322286855 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525329433 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53076997 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.273358064 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.55441242 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069580251 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572285441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314577203 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30650039 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294018144 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569354933 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935749099 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416140994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500299709 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339667908 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841364509 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.290541296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.221222708 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308134453 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303526226 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305328769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296173826 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.230444639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305593848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026403505 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327345985 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.007248855 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297438557 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547526584 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396192568 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.300669199 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867743633 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361403917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.309732709 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.301961852 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388221473 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883308048 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627472799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308233518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.23938219 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301861035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.168208824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931616533 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.326026978 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.300911975 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302121323 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23211317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.209308537 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320714188 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445415786 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.321491512 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948856847 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978196496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333387157 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.235127639 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834108477 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319965295 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.239690735 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52652845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078143444 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236375536 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.242052872 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232056854 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977319647 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313328863 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.645729487 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326305828 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031629263 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.530506314 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340563427 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324348443 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524237108 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.178584497 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299394002 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.299199189 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433101966 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3221316 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021205253 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259053286 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.303837743 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555899018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.509951248 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312858647 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252071504 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797905954 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327543821 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.321337068 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305923557 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513132458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.888415886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338832834 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627920309 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326454011 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.08718885 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0117694 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323822698 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.311327947 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.308764831 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548917744 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.039843608 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190745764 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367847459 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306004008 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301680385 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.266117154 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15812809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.183207972 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.493257369 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330642585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.31851359 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.302491748 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246098636 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.299686404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30833138 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.087751405 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524900974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302749244 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584574725 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236592508 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449202997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312284927 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.525962719 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.477012676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.331758703 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560762105 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307259679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30982176 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321452448 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32159478 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402424905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324043948 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.302573047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580743023 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.30589264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.306907444 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.27234571 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090365169 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303183823 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.307181795 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31117734 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892435346 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320928259 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311744238 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192510915 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.31789143 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370921473 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310479956 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510395458 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.092791095 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330930631 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.332819047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.308070719 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53488445 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314227281 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.264795008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392775194 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.775942881 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894628214 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340988614 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.239243107 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.016459329 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.998216526 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307157347 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.494107212 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.305909108 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511024809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342867018 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306450384 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895888856 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330781403 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.187075021 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.318063486 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317264297 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.311290794 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306155316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.040271703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.681839124 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315300953 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.324589306 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449856946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.319866963 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240939213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.824048942 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312062775 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.307179193 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.085811092 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341721675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.183092663 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103136701 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583060694 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3198044 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569866353 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299167923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.345487038 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.313280746 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307889677 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326210735 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.314711698 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332584728 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.318876175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.197436578 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.752117883 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874300899 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024243812 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859312844 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628511789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.334534093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216261121 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034968582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267613238 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964944305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494523458 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055253705 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279955237 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784635674 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.519810449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077973512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568372103 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544837237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.604452973 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.347312512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571035371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529122495 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343417329 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310132219 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.2452119 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.590399532 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87353404 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335909685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41384183 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034319009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341822819 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.096207253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.367713902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.984604118 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711241929 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.880110096 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.719379918 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318121759 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317576902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17297536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343544206 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835594847 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922854862 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332408609 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.789931663 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272443601 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.519731441 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346556861 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.309225568 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.563044389 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.32027721 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574931239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565749143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254472894 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316204164 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840446016 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.189208437 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.317643913 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312287706 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032035603 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321242595 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598298287 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.321819734 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.04529577 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338433571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245498497 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247171438 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.007948878 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323426353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289377792 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796918552 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.331909086 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321862756 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343219925 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16531301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569666789 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.32751421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882265222 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561680057 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313967719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354615972 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.316847518 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317644099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.302251516 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216137276 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549738338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349726107 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545514087 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.22607135 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.221914433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.327290395 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551302461 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.213225824 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322433407 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560345109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.050756748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.321925584 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436399727 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362673913 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328099796 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334268002 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324876638 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341975455 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403972608 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522612864 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.350355085 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325074165 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712349887 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341976382 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323926822 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.329294411 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409168962 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.692954486 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.051372585 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.096318509 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888654362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054868061 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916088628 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595335558 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324827519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32166571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250189424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46565623 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840595038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591652705 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446748874 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.324920738 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347669642 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31714309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342788699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536110635 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592575333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.187722309 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31799634 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19464832 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.476334015 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328581246 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.527698522 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80080714 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876250463 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427896057 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329902845 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058056149 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616510784 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408585348 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319310261 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907446548 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.33882192 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.995274918 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.331677792 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321039068 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474203184 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569893503 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982559624 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353879973 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.479012503 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.093264394 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.315016321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581519984 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.755425411 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530768649 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919030311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.02811025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589253615 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390089507 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528550529 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.45744372 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46775665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.326464135 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207279171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320910577 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166919033 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.029712412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.328999716 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899672193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605804183 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.324379703 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.331621151 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349818435 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.330520141 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542568718 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006069154 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552186578 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330875653 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331161631 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311518793 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900708762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599364856 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264225133 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.325914376 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55743701 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582499744 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345839007 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.774145139 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.032867723 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860061244 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.293257854 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344202742 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33491593 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020243466 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911877163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.085711433 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821778556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987578166 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330240793 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603996963 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.32791058 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325613294 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605088194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.326512362 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323714729 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54025533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.92267725 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100249437 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.339284822 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.362245351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.267554012 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.548201329 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412901212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266000726 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323522901 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.727726955 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350265552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453388048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335264278 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.321744128 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334021801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.064488516 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595129658 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.32940967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.315307473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.324222103 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332758331 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438508238 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89713529 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354375091 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.000208944 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.676384915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578909138 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324948253 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.312964532 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.327787242 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323627246 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043289418 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293087942 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332200922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876148386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.331368096 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.342991527 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329044005 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541239933 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535149066 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336403537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543210654 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36453963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348646716 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.225210432 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093002432 seconds)
  done (took 1624.685869842 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.365752191 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.339733117 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.372811696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.419644942 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34478933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417903075 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.403118042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428992287 seconds)
  done (took 52.330534982 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.336074298 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.486484714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.357129641 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.338769529 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.335395591 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.327951626 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.784513132 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.343488625 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.35084698 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.336469787 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.337491746 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.341223051 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.968266891 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.337446004 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.32706051 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.33055528 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.341935229 seconds)
  done (took 65.224950658 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.376989912 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.670161043 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.017716594 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.338453173 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.326598129 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.334382703 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.82558349 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.353611987 seconds)
  done (took 58.48438186 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.344230445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.344779823 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.344018742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345001558 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345264085 seconds)
  done (took 7.964482829 seconds)
done (took 2022.401799939 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.332074535 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.334526533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.331143924 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.333475768 seconds)
  done (took 6.570704834 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.309211529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.029879726 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.318008366 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.331042621 seconds)
  done (took 18.228416303 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.329562781 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.336868581 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004254875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.928000021 seconds)
  done (took 5.173959888 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.08257603 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.092425048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.075108745 seconds)
  done (took 7.491486375 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.330424417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.334979936 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.336371239 seconds)
  done (took 20.24251164 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.615641101 seconds)
  done (took 2.85850725 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.477342807 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.526451187 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.647113283 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.652249269 seconds)
  done (took 7.545223333 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.723970336 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.715168957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.524714894 seconds)
  done (took 6.206339482 seconds)
done (took 88.224944372 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.06124771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333542188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.533509273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.070990526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.570225558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.536469971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.547822607 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.043812032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.600421694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.54094802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.036662332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.569473804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.496554807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334142255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.496547253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.708708303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.563695659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.11632769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.720876668 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.918691341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.548361161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.67564842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.864629084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.69348923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.562778196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.485994992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.27104871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.704327935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.891996086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.284452515 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.485733893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.092856705 seconds)
  done (took 188.603904924 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.330933365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331023743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.349628458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.33190951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353703511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.330759786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.332806964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.355388101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33149969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347467887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.334068888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.332020728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.33170008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.349080254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.35267034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.331497861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331535627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355702622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360022139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.331486874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333048162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.349596522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.342988318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.332284152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.356606977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.331452429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.332588192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.333540774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350640077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.332671119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340955423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341070989 seconds)
  done (took 204.127289594 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.33366559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350181997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.331991792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345240394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.333125062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361309085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.336935645 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331850636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.34077186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.348835193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.333137631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.333307404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.336363584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343577106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334762623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333991761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.349777603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.351012337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.333630815 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.346545874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.336282092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.334577594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.349480143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.333581845 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.342579643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336000024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.335362826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.338440444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.334814224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.33440248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.344071816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346440281 seconds)
  done (took 204.122439451 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.536961495 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.341895741 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.342413651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.29331553 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.342839388 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.341272209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332481427 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.54342814 seconds)
  done (took 14.322847104 seconds)
done (took 612.420829338 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.615853958 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.330738558 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.542239138 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.36095529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.117337884 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.380015373 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.361767355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.527952037 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.251656203 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532471887 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.556281073 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376861718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.699435252 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.361133746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.610996722 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.460761091 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.251027234 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.379022008 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.672197604 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.871637929 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.625445414 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.789767396 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.545752887 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.240877534 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.715487008 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.781715027 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061841847 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.252484819 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.379454098 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.680752711 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.941218426 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.31775745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.429467578 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.420210045 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475175755 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.455574934 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.276755163 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.418831759 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.561773149 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.552094933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.888129865 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.08161673 seconds)
  done (took 91.401801581 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.32777442 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.327958792 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.327728573 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.328784953 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.334008276 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.327419388 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.327167751 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.327643338 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.328706105 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.327487485 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.327609092 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.328995625 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.327400185 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.329316337 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.327318007 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.327924201 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.329080923 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.329989094 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.327815402 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.328038904 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.328383048 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.327845796 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.328972465 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.328240662 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.330421716 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.328952222 seconds)
  done (took 35.793952609 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.346887571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.595921198 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.751075203 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.35584582 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347719333 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351805731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425271587 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356112535 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.350332988 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.350708541 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.518637243 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.351876485 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.381719676 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.780900283 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.358006664 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.348323882 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.348538816 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.347786087 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.604926427 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359763871 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445624143 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.351383413 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.424102565 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.358167174 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37185218 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.348621668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.353097212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911153261 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.369660077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.517948439 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.111924348 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.430149674 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.856472918 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.778600733 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.114943888 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.358187736 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.350201297 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.521618288 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35214652 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.349953031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.426087001 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.350813244 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.759349603 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.004391613 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.369676925 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.351140765 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931830441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.539389756 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.593540006 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.364105975 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.789871511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358723821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.352403391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353384864 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.588962857 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.366011705 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.350753178 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.919269463 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37953413 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.426925406 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.360016321 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.352080438 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.610820004 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.35384629 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.599009895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.352521119 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360892636 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371132182 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.766256489 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.362541572 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.025006988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369559331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.35190921 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.519908373 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.605056566 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964446156 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.374161953 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.614042341 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.872504924 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.445708078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.355327854 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.90191512 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.448102973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.357046031 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.35453422 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35402395 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.352804451 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.403367204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.426384879 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.96270664 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031452052 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.93715962 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.447323686 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.366717854 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.354364152 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.91753628 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.373616071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.35305294 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.757591296 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024547943 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.371613551 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.362397392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.027686859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.372959772 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.43202798 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.359831271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.770641489 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.355832587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.406033792 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.354566981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.361840209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.375913391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.429965363 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361580427 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.355267273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.999906882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.545739217 seconds)
  done (took 178.494089029 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.354092499 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.347682821 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.350174842 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.347194961 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.349472345 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.35725452 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.349433937 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.348829253 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.35425497 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.349339841 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.349210407 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.349905938 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.352004435 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.353211564 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.360813427 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.356704065 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.965737633 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.34898378 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.350107318 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.366930499 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.138633793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.358575079 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.350838288 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.366897126 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.353399276 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.349789048 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.351953914 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368943146 seconds)
  done (took 152.560201539 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.356924411 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.900517669 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.374219888 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486278768 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.376968266 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.353390779 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.482880476 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.413731715 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.375406476 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.354845523 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.354701353 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.648581222 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.358461262 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.861101054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.548472402 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.501540352 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.854242898 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.374723229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.356213623 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.356402519 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486951013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.361890549 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.65032198 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907900692 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.379763098 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.90350419 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.342330662 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.358242326 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.357026451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.911975713 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.3800704 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.652318896 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.434890178 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.416619167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.929734655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.880563168 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.879851697 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.501355767 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.35855966 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.356156336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.355859125 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.341749632 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.915306539 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.384121879 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361248602 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904774773 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.381524773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.360483978 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.365449154 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.356383468 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.417452462 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.433944161 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676311502 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926140131 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.457227934 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.371626437 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.488395302 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.7277697 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.363345122 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.855446895 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.342700779 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914461794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.378663969 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.342775023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.359593941 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.365613486 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.504425519 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.486679767 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.861891514 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.385218202 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.863374701 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525022085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.359623763 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.360468886 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.362191929 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.91218631 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.885840575 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.530011233 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.491359649 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.549164612 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.35305766 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.360781967 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.34576883 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.435470628 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.3602689 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.915569162 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.884123052 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.3862724 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363161089 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.362476219 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.362583983 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.533450072 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936361109 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453833388 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.851388329 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.674970522 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.659134262 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.364501318 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.419417811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.37822728 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.660853238 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.364004385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418154852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.790680001 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.659941966 seconds)
  done (took 161.923695975 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.600691958 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.562197178 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456453852 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504649159 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.947603141 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.925188148 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.599057421 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507345052 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470267593 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.626435822 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.498165137 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.457053845 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.572025051 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.438683147 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.082480845 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.447626234 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472239086 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.513103474 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.516980795 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.350039907 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.039880537 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.639725985 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546743992 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.23253633 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.453955939 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.106348314 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.918764146 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.879165014 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.528393575 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.659239848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905802128 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.467402372 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.297619 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.031947784 seconds)
  done (took 65.524584337 seconds)
done (took 686.947850402 seconds)
SAVING RESULT...
DONE!
