cset: moving following pidspec: 20153
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.310324077 seconds)
loading group "string"... done (took 0.593186698 seconds)
loading group "linalg"... done (took 7.231748623 seconds)
loading group "parallel"... done (took 0.169104983 seconds)
loading group "find"... done (took 1.145407411 seconds)
loading group "tuple"... done (took 2.026411518 seconds)
loading group "dates"... done (took 1.293919168 seconds)
loading group "micro"... done (took 0.239622762 seconds)
loading group "io"... done (took 0.980079266 seconds)
loading group "scalar"... done (took 39.775242837 seconds)
loading group "sparse"... done (took 12.894520614 seconds)
loading group "broadcast"... done (took 1.021750986 seconds)
loading group "union"... done (took 13.784654889 seconds)
loading group "simd"... done (took 4.746952548 seconds)
loading group "random"... done (took 9.571883891 seconds)
loading group "problem"... done (took 2.015790657 seconds)
loading group "array"... done (took 22.863461868 seconds)
loading group "misc"... done (took 2.027658294 seconds)
loading group "sort"... done (took 3.510528113 seconds)
loading group "collection"... done (took 18.98529984 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532071282 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141689914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11768239 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139155322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18478756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130273531 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143795864 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084152417 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01979556 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15975928 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139726994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475896644 seconds)
done (took 5.029291862 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20429445 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085605163 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096384633 seconds)
  done (took 0.88420157 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066463212 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126184284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079990918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067492952 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067239933 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081158109 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067707124 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066156599 seconds)
  done (took 1.266025544 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073140243 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068150117 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083654144 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067817165 seconds)
  done (took 1.001826501 seconds)
done (took 4.142170437 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895285117 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233958808 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188886256 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454599615 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14790125 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189482022 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66529507 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337027968 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211891685 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100471005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104121321 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378528452 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109404923 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665453606 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077867679 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107153984 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158717035 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444034914 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082040144 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083752782 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104778519 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143879953 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103721591 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07648721 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167593236 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069308354 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146303186 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09572507 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067554892 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241298131 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189872288 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687961668 seconds)
  done (took 10.473778587 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099159849 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115255413 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06959335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140471321 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102693104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085983561 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071763984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083219648 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093069726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157463146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114222712 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106817158 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081849426 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070436743 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101000346 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213775215 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106360317 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085910566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087010706 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077183035 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122428981 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084745396 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094417218 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079028065 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153320745 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19758474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114714103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112368092 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070784756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081956072 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131213313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142692283 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068254148 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082295291 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140541067 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111617271 seconds)
  done (took 4.5710797 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.026359033 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161342834 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091544437 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15384154 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08583746 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108926799 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08270071 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098741498 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244304767 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.083224264 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.457622341 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129966673 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102413331 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067719254 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084160793 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069255415 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.512401627 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116603188 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123534732 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110982803 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104327986 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091455151 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071970695 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06825637 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083809952 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070078825 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120696069 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299269911 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144918304 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085698562 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191357086 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109111609 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068435636 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120134115 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180771641 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09683209 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.171526608 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067048691 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066358202 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170189619 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08974148 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066114187 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106157132 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103346668 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120794676 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08489997 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067731859 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181868104 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065636916 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082325317 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083949653 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.861828098 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080582889 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166018825 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078475493 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066803482 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287316937 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084771423 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084333889 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063708483 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.085715713 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.230396294 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163371709 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067083056 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066413359 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083202913 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068720752 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369100607 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083776898 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.662311874 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070769266 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078066424 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085993904 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068187283 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088758482 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071892683 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1013791 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066875937 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068433505 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084221695 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066528504 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085879832 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086262474 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202341551 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0831129 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066638649 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065972122 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103164671 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111748104 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072426676 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065866894 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118724768 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070380053 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084545595 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103049082 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084972518 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100533696 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069187299 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127896186 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068911714 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123561984 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067137434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112963995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07662581 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113377534 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092906879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067809252 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1538948 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065256932 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083521565 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06870095 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065589361 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085754952 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069496608 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098741743 seconds)
  done (took 20.844337527 seconds)
done (took 37.623845508 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.296800608 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091838315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091061336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075169318 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091686894 seconds)
  done (took 1.432268622 seconds)
done (took 2.191036998 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122060533 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118639691 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063834716 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113138949 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064173445 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116910943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114680407 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081853926 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119127272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064667772 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113718833 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065204146 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063997877 seconds)
  done (took 2.006083759 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081842798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084911622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0862284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082915918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07941575 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084103361 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080964403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106183172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081352339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087946926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064869582 seconds)
  done (took 1.677538944 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08174339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084990568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08509617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082367576 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079841117 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083085148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080928006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103250911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080931186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088758892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064359315 seconds)
  done (took 1.673606358 seconds)
done (took 6.105325515 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076904719 seconds)
  done (took 0.826370398 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693633464 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.62112557 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083039102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133376464 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222002251 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154578859 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.440642376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109328582 seconds)
  done (took 10.380691814 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091527061 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099288708 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073159917 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086571712 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072326004 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090171484 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070025922 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069711153 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085848725 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070329924 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086155651 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072795673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084548399 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073237073 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070374698 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0875401 seconds)
  done (took 2.101988918 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094413296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093677184 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090184448 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077425093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090265691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074701357 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092131612 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075421952 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087963255 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073559961 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0914957 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076058875 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088486799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066569563 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091147983 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078364948 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087824869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075941919 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09194697 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077238073 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091044795 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066365658 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088182702 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076031387 seconds)
  done (took 2.859302921 seconds)
done (took 16.92492222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130528342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076225118 seconds)
  done (took 0.964945353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080444977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097451482 seconds)
  done (took 0.943964056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082901233 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079672879 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089247085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092005637 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065212154 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081546472 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101467351 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066336633 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082014466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068049967 seconds)
  done (took 1.5738181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092215367 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071160857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098171274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074881632 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081820017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075444147 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084337467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07963186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078972315 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072852485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099457203 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072737543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100276525 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074744373 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084037012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086677169 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069243717 seconds)
  done (took 2.232096803 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066077596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068276406 seconds)
  done (took 0.903000729 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066975809 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064265957 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083254355 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068357358 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079747635 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064414154 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080397894 seconds)
  done (took 1.275326598 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403769974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109372637 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246563943 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089216348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103286617 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261130991 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084010161 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07064384 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088537187 seconds)
  done (took 2.261971504 seconds)
done (took 10.92023015 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079110372 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08491566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109231172 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41744172 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105599044 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067028939 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132719351 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218931587 seconds)
done (took 1.984983377 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124691158 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604473194 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398239779 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215856398 seconds)
  done (took 1.992182209 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371008818 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092724238 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075450828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067993974 seconds)
  done (took 1.384278441 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066136184 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069342822 seconds)
  done (took 0.912877818 seconds)
done (took 5.18823412 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066092447 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101779155 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067992443 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065040508 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.081382502 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067004876 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064801863 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082031852 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067316938 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066874628 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082609171 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070344986 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082065914 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065303076 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064976252 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081582735 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065054766 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065132919 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082043859 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064340679 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067477578 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080103701 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065157036 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067391118 seconds)
  done (took 2.543692921 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084937054 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082529902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071606073 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088492771 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070931364 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088043466 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07379964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067961042 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087734484 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071131584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08673906 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069994175 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084182757 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071335133 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084304003 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070154698 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087678838 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068325398 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069241508 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086102591 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072149471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08370395 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07055961 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08748073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069971833 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085570025 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068847987 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083138429 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072698261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08630142 seconds)
  done (took 3.126007329 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070410878 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064128553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080730106 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071926223 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06493013 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082653981 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064350421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081531161 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065921329 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064644358 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081783037 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065104285 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06483602 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081768926 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065494813 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083870847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081807243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065250631 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081441348 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065902674 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068079012 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081206477 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064590635 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080932233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065268951 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064609762 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081811147 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065077158 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065675711 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081786136 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067768697 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067770867 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081810955 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07114193 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084046996 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066711789 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06897574 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080771727 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065598928 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064617291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080563855 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065160107 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064659479 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088597878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065557594 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083215558 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065765804 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06623823 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081437762 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068539747 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080800751 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065098521 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066909687 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081738864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06869062 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064490902 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082895721 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064674303 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081515591 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065294561 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064643226 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081295864 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067545014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065328786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096997963 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071643292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080373688 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066751054 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066014911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083080618 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06698984 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078557436 seconds)
  done (took 6.008751501 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11558292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090117129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082006657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065754684 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078930168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065686652 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068645922 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080572073 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067214228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085891977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065875799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066055593 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084965852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078184583 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081645156 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067081365 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086620651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063698928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064848676 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084726959 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066172612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084031644 seconds)
  done (took 2.481327792 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184019225 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087889185 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107835502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089534762 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083721026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073174583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071664238 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087998335 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071413731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085224717 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070241808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087151314 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06944925 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084693729 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070177889 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085147123 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071292917 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08512814 seconds)
  done (took 2.350758641 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078465991 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065666962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105627052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066327556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083688779 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068121141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088291829 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074977754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085217151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065630286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090859214 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068926882 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084907544 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06744825 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069876518 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083500004 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070062383 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083432457 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074706789 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087734894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071120747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09139162 seconds)
  done (took 2.512036157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080868164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067415493 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100451126 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084011635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062429098 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065962341 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089191335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067216248 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089470141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069607431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067466833 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082759701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072351977 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082605355 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071161539 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08265219 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069310703 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06747449 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085674236 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063746378 seconds)
  done (took 2.309696112 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087293238 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084126394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068972462 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092422112 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068656788 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084345918 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076943821 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08390842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069549321 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107885961 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069098411 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086076361 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076683112 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090102286 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069065401 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092223398 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077206852 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093169869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068454368 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086090522 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219371367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069409911 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092339325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068883148 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084070032 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069585893 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068594412 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088978373 seconds)
  done (took 3.187316796 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066674628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067182571 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081528857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065351097 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064884722 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081616871 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065571124 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064406518 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084030425 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064720842 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067267238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083175871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06737464 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083321728 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068266903 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067572752 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083278292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0648139 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065261307 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0809158 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068106424 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067006184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083309957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065257766 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080387645 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067979936 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065184285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080357386 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067597389 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064639843 seconds)
  done (took 2.941639392 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07662866 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089583479 seconds)
  done (took 0.962233924 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064307343 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079736869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080289756 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070021814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087451669 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067294851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09158313 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070090541 seconds)
  done (took 1.403748546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081850333 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078969042 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086127925 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079661991 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094005333 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083732113 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153942899 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083935966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073156495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08256653 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080949748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066633074 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090596706 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068417788 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089885737 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074255769 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065950806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089600272 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070304273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082298943 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068443858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092426349 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070523482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064143601 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086142844 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077316084 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094800322 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067904283 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08784065 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075123777 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072533277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078338997 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068254164 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083884702 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06599948 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093715884 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083970439 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086842965 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077579419 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068939226 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094012955 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062706003 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088634302 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074191032 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093938493 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069160946 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068884446 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080255023 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066326165 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086135861 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063543592 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068062112 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078578623 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074720283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087774777 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078761889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069207407 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087241079 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070555085 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087174747 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074637643 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085730462 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071159202 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067913097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093881437 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072632898 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093048806 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063429918 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062065675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08247141 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078118562 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105963107 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07405085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084805732 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068838657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082222188 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071558971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068672965 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088726606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074212518 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084283692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072974852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090674957 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067861491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069626659 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090802492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065822636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085188927 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066056171 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099930453 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06737635 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081157052 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066616968 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078052695 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087857268 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067718526 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081752406 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075351081 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062031323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084410668 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068683199 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084388328 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078723253 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089091757 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073975515 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092325192 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07601395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067887577 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088092549 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065027768 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085289641 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067570839 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074770194 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07905758 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070847727 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084158245 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068847831 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076552841 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066430137 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068081002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091124794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073371205 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082539742 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065303705 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070793665 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083803688 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072158056 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092645526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066503978 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063463775 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080989613 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071011104 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083852126 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071559158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088237015 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071232168 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062200303 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081414377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072422837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093308847 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068544403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06893891 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091536282 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068711695 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084047231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074435541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08663581 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067120999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073565308 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084773911 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062800377 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087233255 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070507324 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066610043 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087672162 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07105465 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086108386 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069178257 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082786754 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073747092 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06855179 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082972813 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068722758 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082633358 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079509887 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069548639 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080875278 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06538509 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091065327 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065947462 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067952269 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085282821 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070768676 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084913886 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065685694 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067558498 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085724343 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079486332 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088286596 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068399958 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089446575 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078092945 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083960276 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070441044 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06765081 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08512649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069369108 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093097655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074234624 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088907722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070439258 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064547724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089646076 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074529726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08386051 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065500018 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06631636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087319947 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073147948 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087463521 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068009086 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082112404 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068793848 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071496225 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087588423 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068566187 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083801366 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07265058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083298091 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075505258 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069455546 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094643573 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071256407 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079589573 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071709351 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082667621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07477216 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063632199 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082381706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067886961 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085596887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067923245 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070964146 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078937404 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07460958 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091557637 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0691077 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067548997 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083647486 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074658924 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085637874 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071374927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071014263 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09108985 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076226794 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083763415 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070261914 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094493825 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067601882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061811852 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089863085 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066622471 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084350643 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06776185 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065569565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087106237 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076398049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090625725 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061896233 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086654601 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067265128 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067321432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080633421 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072743134 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086798566 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069267568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074478996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0855939 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0683348 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087965261 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068364677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06833361 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086787156 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071244411 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085070202 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070765281 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084009313 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071602179 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066784145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083071367 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070492243 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067880896 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086528916 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073856705 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083887987 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06848912 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086616388 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069059199 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068581648 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085124303 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067738618 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089208594 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069681246 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068771719 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08728247 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063645441 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09232419 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068433086 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075184365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085392917 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065921591 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089512628 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071826395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072372401 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086605464 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069008116 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086272213 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067959458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086968016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075653893 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065853935 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095189953 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074425866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085103519 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070831284 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085476903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069697399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067203387 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08534809 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069533638 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06789704 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086363799 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072849254 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087227822 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0690574 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086358282 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07004968 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068744133 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085721647 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063203363 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067639522 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08686029 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067864698 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094126268 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068625486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083872599 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068043637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068999984 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08385375 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064639729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091685559 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076973916 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084999117 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076187228 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083453531 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070328374 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07750875 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079015787 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067207603 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082887807 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066406582 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075566588 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085447802 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077302393 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084532374 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067696202 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065048996 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085205952 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067169121 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062092425 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084403591 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071971217 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084393277 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067294861 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068803275 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089123614 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069192256 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094086221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065864797 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085117106 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067872576 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064040043 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084521432 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067349248 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087850112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069623714 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065623387 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082793769 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0688457 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069414243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086889238 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068154007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086405747 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075300466 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084527605 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071061351 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071219824 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082320692 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070354931 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084384378 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067935453 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066679964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088580352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071507634 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086015744 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07719177 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083797288 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069251289 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068482762 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083258677 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068439526 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067228668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086285798 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067341236 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085739001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074604328 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082219895 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0714619 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067952269 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085106983 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074124792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085681836 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071805677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091674957 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068416437 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069626905 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092377612 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070577206 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088522566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068461371 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069193182 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091445763 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06706538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090746351 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069191219 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085627828 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070400107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065857573 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084608651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068301771 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066783327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092486709 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068662118 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084398172 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068056349 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082949525 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06979474 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072540174 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092293387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070733935 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088400951 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063606483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064798427 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085736979 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06643459 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087233656 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072251274 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073863345 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08776789 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068798213 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08373139 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077545546 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091229058 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072007116 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06559116 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089316164 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069228789 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087367071 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069767588 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068337069 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0866096 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072387647 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086373091 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067922485 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075647428 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088372936 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067875677 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086596702 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069000915 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067909432 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079691313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068970814 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086619008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073502039 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070056347 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085395096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077103807 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082874017 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0680041 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087567726 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06798028 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071838124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080950732 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068847147 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085839695 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069172549 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0632704 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084063006 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066472006 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087345263 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067381889 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063483907 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095207995 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075456621 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088482486 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066521153 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066553743 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081646151 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062785461 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084231207 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069789928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070237626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095111459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067700526 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084778714 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063799255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068586145 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089253773 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071618987 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082771859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063930576 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067162128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089384678 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07369061 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084231899 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068905752 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070649091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089270681 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065905454 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088466581 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065633064 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088737735 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081970219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068854137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086959852 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073865498 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092954199 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068911429 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080785562 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069737791 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071397441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085635109 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068986777 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086639037 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082618514 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087877709 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067389878 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066442033 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087694065 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067574201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093456568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068895361 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068245581 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09037913 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070059389 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094292702 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069912202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092981796 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07065008 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088364313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067103511 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068066012 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083244506 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067333316 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085863829 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069654868 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072465786 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09266122 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066639788 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095861086 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076547312 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087634053 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065968602 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067120352 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085015934 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06387133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086344044 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067791677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066075779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083732124 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067827502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085766938 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074832915 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068911296 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086628994 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068234011 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079451275 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070755109 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070535764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08627616 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065194895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068065869 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086159194 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072194348 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088215796 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06566998 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086373021 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070622686 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068826321 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080826901 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07477038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083487526 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070818658 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06743054 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085728487 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069556376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089094961 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074544408 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068760824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087575864 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076968965 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087794537 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065371269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064679542 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090620925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065234283 seconds)
  done (took 46.705429321 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10729994 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08161675 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062153013 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080532308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075218484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082729484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064362587 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063902774 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081489957 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065876262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080928864 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063848129 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089439154 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088531098 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092809416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067448106 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080836895 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06403186 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081048935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064578673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090005173 seconds)
  done (took 2.470943209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074894204 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089102528 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073006535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095258745 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067874982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089997331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073223291 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089420817 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093993587 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068736258 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095106543 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072224915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086316955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069197398 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085714767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073063273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09555882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068714744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090176693 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074091609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089531325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07525509 seconds)
  done (took 2.628547951 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066775407 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067205719 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086533535 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063293309 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067478645 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080458988 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071704092 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083064977 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072479285 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066803207 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085161266 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074703726 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086865592 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062993572 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067643043 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082858516 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130684977 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070078212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066932535 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086977783 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062977437 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087380445 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064080991 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062657916 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084055445 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071012292 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085495993 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066204248 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066582556 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084533433 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068169035 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083076687 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069412533 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068381116 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084396663 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066786155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06722666 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084810793 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063188441 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08416781 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068717666 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064271276 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085123238 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069796379 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065042663 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084164288 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069029805 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084503913 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063079908 seconds)
  done (took 4.513634727 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084334215 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129164328 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088358438 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09106156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102869397 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094135848 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071078302 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111181093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064795749 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085228621 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081687052 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103874768 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084443311 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071722199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09230214 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066362981 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068305097 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084309738 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070721283 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085546706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069670721 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091786544 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09940709 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080721604 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08838514 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066166693 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08501518 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072564663 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09837036 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07163916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089928489 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071454075 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099995253 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067961172 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08490575 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069032487 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102355358 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065467862 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087511413 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064027511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08735921 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07164205 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091856619 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083185571 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085489059 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071425036 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085904591 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063205566 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097595003 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068225616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093282695 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098704262 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070138561 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085415326 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071423268 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100221353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067651688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083839241 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071202471 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097771874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065411338 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088057021 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083239011 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087385906 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075197928 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099815662 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072515684 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089675102 seconds)
  done (took 6.632280848 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075637205 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091358406 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080536012 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099979712 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090723537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073684455 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091175812 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072812558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091430813 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077950502 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093099949 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111538444 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069280313 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094611857 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073250344 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092590176 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072057385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091986698 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07187785 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091427536 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090892013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08110692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092250176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099348095 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104546091 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087982028 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074236112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092347156 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082599418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093173276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101722937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073132207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092093912 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098765953 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084823574 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092254413 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066579567 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091541013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074319746 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091261625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069068151 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100824629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073106106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087540887 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074161195 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092182151 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099904438 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084785847 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095076569 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096121242 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073300946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099763388 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072497943 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092309386 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09893448 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106144148 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099850243 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099600455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073314305 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099854493 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098152779 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107555513 seconds)
  done (took 6.315647393 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087754358 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093986211 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095884087 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063041235 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066396681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091010351 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065260841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083619207 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074882848 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09358069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078042128 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089951622 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0733498 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097187452 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088409625 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074442957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089968551 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070154848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094014731 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070700303 seconds)
  done (took 2.494161963 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075831255 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10263141 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069028523 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073991949 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089364626 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072641064 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088687872 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070985963 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087051677 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071202453 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096723588 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078370229 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087382572 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073228555 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096329788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073424015 seconds)
  done (took 2.163489233 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078309222 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096119833 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082440294 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087786078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065345284 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083479245 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068962677 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063537414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083882581 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082321673 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086989608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069221803 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087158083 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065730628 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064038773 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089872464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063457965 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084033179 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067312465 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100666043 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078526535 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084868727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068829837 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069590496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088134317 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072410892 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087183981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0648004 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084981233 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068493537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086913879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075528729 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083418446 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067181823 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066349223 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08403987 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067271855 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086289836 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071424816 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067679434 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084719389 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068232853 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086090566 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069338776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082327084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069221767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064545767 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092662235 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066587106 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08730086 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068965858 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088500129 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070212036 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078086858 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091626068 seconds)
  done (took 5.122079962 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08023245 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070585229 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082696118 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066465658 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08915426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070648553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071007383 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088491332 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069866593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084574146 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069714348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088911167 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070773796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070672086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088120103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072513794 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082085164 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070599449 seconds)
  done (took 2.248541575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073329279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067944395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093528725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068553652 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08635426 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071583115 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06434536 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085979409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066886878 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086273233 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068489185 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069535967 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085381132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070606902 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086239619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068625492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070205533 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085460307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068077629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082749344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071339099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066434122 seconds)
  done (took 2.520846976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073139711 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094765015 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162938296 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107648623 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083115296 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101038977 seconds)
  done (took 1.486971418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090964967 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099114296 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068183115 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108562536 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077000238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088236534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070818289 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087906678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078449863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100722549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069512884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097472212 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097104066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077509088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094303573 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07462099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088677743 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069980354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087114794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106339531 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070590388 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096553688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026058 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087685116 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071123436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096173326 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079292074 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101674616 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087521832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076890103 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093760769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069489528 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097252397 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100470665 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070999433 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096995625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069791274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106201384 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07522926 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097231314 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070296412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095340809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09721236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074359782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097283466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070154259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094023112 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068340755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089107849 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111960222 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074733411 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096821934 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093638638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078602722 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097282307 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113015722 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083096372 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096597443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092034145 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082970098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096693705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073655787 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095720891 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101421584 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073576443 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096818913 seconds)
  done (took 6.627996581 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085563602 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105601489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069511748 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101883117 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095082391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069052468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087545168 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069373057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087642291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069511917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128506076 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068620144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096309841 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095918234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069398838 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088618759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06858625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096163193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068313351 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113096881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088397556 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077992977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096909138 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095645297 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082919805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094319858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069151499 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088872739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069765887 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088868361 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074917187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090194848 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097524047 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069655344 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09702089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07083848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088545832 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074887632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088641196 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07634271 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097136602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10596914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069537257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088222152 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083258013 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088737993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069489821 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089138114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069414534 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088745166 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083013488 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10289771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100818419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09530797 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070657742 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088863531 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069320266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087977271 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069695772 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094546105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078058194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088768228 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112074188 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069760677 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088903265 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078217608 seconds)
  done (took 6.51388562 seconds)
done (took 129.048102947 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209953103 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188335614 seconds)
  done (took 1.264694839 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069071045 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09711442 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099386926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130129599 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086619028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101124485 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118210272 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079614751 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06662112 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086999127 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066871665 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087361139 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131381354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066221244 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085933556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069539759 seconds)
  done (took 2.314881041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102598144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197459857 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109514393 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066610449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100156749 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07960204 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086426569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077493675 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094598945 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066110206 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078361991 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095414771 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065425507 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096083541 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074733949 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097434608 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065247952 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097073364 seconds)
  done (took 2.528658338 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103256929 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140940196 seconds)
  done (took 1.118961638 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198554997 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122828403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202003536 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408315822 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.20337943 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277758931 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173051058 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171024337 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15721992 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169866349 seconds)
  done (took 2.955557254 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099503558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168985369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30924473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13745399 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085851936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11529585 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138390992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089192793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10072183 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099767726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081459447 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097509519 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09638019 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09560307 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073915959 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098417215 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1199341 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074718825 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097509491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076268416 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118186103 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068046524 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076112223 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095221867 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078337714 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099205323 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066302688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087950902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076033974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095590576 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07854477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114230918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097679327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129073863 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081054341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129174958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096676963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071248414 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094629987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07226659 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097229368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0764357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102025996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075628867 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086548625 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077482128 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08543465 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065908658 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099513265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076991219 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099212433 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079056523 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127917154 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096269695 seconds)
  done (took 6.202060186 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.744139949 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112529973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095095641 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804281192 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090568095 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106791766 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710523954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118338898 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208209901 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760554084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092369564 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099939081 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179936387 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234045493 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.876275771 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.27954968 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631979558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105455957 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108535484 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13194532 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138206388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17478812 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147064703 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43119359 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074973881 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093486629 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135697345 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07469828 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16023909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085008617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09266368 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154542382 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223851899 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154595318 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096044472 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069139592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090789671 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148853973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21556779 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189881612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15805464 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067840085 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091238216 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139515574 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130108944 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067672696 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13921555 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151792611 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169267159 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073699922 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095798533 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14116979 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137097379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142094553 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099896315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267593096 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28694917 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090243702 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097475822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103200734 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21148104 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103361359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19853925 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137821755 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166667181 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091782084 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733315039 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145926876 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091439741 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073636834 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119888315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094441075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137424595 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146695394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.346961692 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162572116 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075070569 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0913169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205198837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083017317 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092242334 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140471622 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074961907 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121735994 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163862497 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143283342 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147054168 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203637237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13916146 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158297916 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074406483 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122639383 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074683032 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189193386 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191289126 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140630482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185977509 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158984623 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140507151 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146446353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074420018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171028087 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096722344 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099879801 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13603566 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189842916 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121494519 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082024862 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094028886 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141851895 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123835591 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085229956 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137511151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.1691184 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.451885098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145899903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067678711 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107300134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13786442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139205308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096790407 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210150294 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120348381 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145714452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119314326 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089651618 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118130508 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139410941 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077449962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121955624 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135989726 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097071663 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214777103 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189462674 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077842481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193834991 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161086126 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09644194 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148113736 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118633032 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146263806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076729675 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.159182465 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076150718 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764500138 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143517952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119581583 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074421871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173839649 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068685496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103280767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103011251 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068626759 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783769475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085508453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100136485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083490258 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096216397 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1223111 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136422158 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072904467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138842512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201896845 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094204882 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097238932 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104861385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139319394 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095508275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084851379 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104932349 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082644523 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122475549 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094121686 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082382361 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144660955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160774549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170562412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566660989 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07050636 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101979933 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.178664538 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091252527 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238762191 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.157998682 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.176182686 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139414105 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100993918 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292051611 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143081739 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170824746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086599759 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14997068 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088953074 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137216151 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142685436 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07011919 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096585886 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14079351 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144363797 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162131422 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913332707 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09070336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203662515 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068698421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149352159 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095700733 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076117064 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260806769 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069977723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1665143 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142258005 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073794387 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10448001 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70130478 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103436838 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138393648 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073623979 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193844024 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140388219 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135069941 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135694231 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096085214 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138401606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188199304 seconds)
  done (took 40.239038037 seconds)
done (took 57.498243086 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25794598 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178426016 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241020599 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144284564 seconds)
  done (took 1.792319481 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142574723 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103961096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11559624 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085066292 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102877081 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086457512 seconds)
  done (took 1.535401429 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40040019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263469096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229157334 seconds)
  done (took 1.792859879 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261162951 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213166004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446371223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299180984 seconds)
  done (took 2.245758457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.175143884 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114367806 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066615204 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106423115 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157327784 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251388274 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126909317 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184776338 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078779359 seconds)
  done (took 2.207487313 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197753312 seconds)
done (took 10.673723348 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104937924 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.27519549 seconds)
    (3/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.178658937 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19719923 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172002014 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19120835 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.183225661 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085270524 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202100006 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079305011 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097789071 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.213568766 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186920774 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.189789941 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079031206 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171935144 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.139255022 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.171262933 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101209004 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189261576 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218894638 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.186656767 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073431486 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220114599 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115480131 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117033083 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053034191 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101209506 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095971019 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124896631 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204068303 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095143858 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.166993534 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082632847 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072249186 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129789844 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.177920343 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.141566253 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097254423 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076491741 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171373019 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089706628 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095008198 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109704584 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.176071717 seconds)
    (46/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07207905 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.224755424 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094613539 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093966489 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069826832 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073567447 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115239969 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084661 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100369336 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08196692 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171157214 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080520148 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098099125 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069943533 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09936922 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088175591 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080239096 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158248174 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075797806 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169437395 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085305594 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098256607 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071659497 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053630073 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111624462 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214305742 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203799369 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196801526 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067703644 seconds)
    (75/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.115943342 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118978164 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075318518 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.151077913 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.097151976 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062651805 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.138511034 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088784853 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.159905568 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158235874 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168467452 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076124127 seconds)
    (87/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06377126 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12264853 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.1907619 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076975703 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.089534206 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090386306 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116356985 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.211857014 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203422435 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.140217739 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091081287 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068619399 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194562517 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091219298 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.134066335 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074742062 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06677021 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090308378 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.13976693 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074183584 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146862111 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089555041 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075441867 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119092923 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068298927 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093723668 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094854872 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090765962 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054384116 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108098508 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093164383 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075859894 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131884832 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067664342 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053953118 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.137990232 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168279285 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100675126 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159422568 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0781279 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075517619 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075459823 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095075229 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095950204 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05400196 seconds)
    (132/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.112455237 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133541263 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074662252 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.159931099 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06776378 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09725957 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111337763 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074431541 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075912067 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055672263 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139207083 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.157001759 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089389585 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102715112 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118285029 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095406406 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074198773 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072654389 seconds)
    (150/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084341371 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100689225 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097796436 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068314502 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113646564 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075422554 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.123412736 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069372228 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053457334 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115015502 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06812016 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119227821 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067307229 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075383125 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075347346 seconds)
    (165/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076538821 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185707788 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068278575 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076006057 seconds)
    (169/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.146825145 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091383348 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075626886 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068847873 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200695689 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088295029 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172916391 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113738239 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082287028 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088531414 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065415969 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073738249 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114787393 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068143857 seconds)
    (183/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094329606 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083244349 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051302285 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.074724056 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098346068 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.145320714 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05501205 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.156478909 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074616806 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067285416 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078163489 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100661594 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068884639 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191912216 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090729251 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069591696 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054863081 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097290613 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077985433 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077430725 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.316524807 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053631571 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054257893 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113762037 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053418863 seconds)
    (208/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105794164 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054732276 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066924095 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089127133 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096035284 seconds)
    (213/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113048055 seconds)
    (214/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06903741 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06991412 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107785178 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051894497 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074176359 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054676382 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064038937 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074479719 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074460757 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077807629 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053595437 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077325864 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083659404 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099436817 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068209966 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053175508 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084631987 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06948151 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053161582 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090606475 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07434814 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201421595 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073587653 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055521872 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075270262 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072589151 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20910602 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08759163 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076146518 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054392559 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074130495 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142056633 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099731632 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053648045 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054242281 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088764391 seconds)
    (250/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078553254 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090254084 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075627122 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069450517 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052949827 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126363288 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113383186 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054135551 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069767939 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08977225 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107786287 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053592697 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078464894 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135749035 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076697112 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074108892 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068705816 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090413012 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053431486 seconds)
    (269/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074850599 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115401293 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073954599 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075686266 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114022883 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076356515 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.16656509 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052289727 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053435339 seconds)
    (278/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062028611 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075636818 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145641477 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097714028 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.125863947 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194433719 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052834738 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115683204 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066066943 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138388103 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074028889 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054043549 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087831715 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194312147 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091950224 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092485799 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07547148 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066519642 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074822077 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062482269 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083231598 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095100181 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073145055 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114011431 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072039992 seconds)
    (303/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091477994 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074846245 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053534433 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072448033 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089090408 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067714438 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171406418 seconds)
  done (took 33.442023131 seconds)
done (took 34.355098153 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081433664 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114266032 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076302989 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116500665 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082677212 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102070528 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072899984 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080521573 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104246349 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082012255 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101539749 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055919003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098445166 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07702118 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09832313 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093866798 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102156711 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073414937 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076042701 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088533017 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075942325 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088649423 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068347332 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056956612 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100945251 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074752896 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074604599 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098352983 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06718845 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089049395 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070662261 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075279155 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089242251 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078795801 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095032474 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074181882 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07557861 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098705863 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067541728 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088081865 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074062917 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066212198 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09512636 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073809328 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07122067 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092684821 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074212158 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102135017 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091322889 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09100665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07385991 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100018378 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077468209 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072428005 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093565395 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074514089 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093702287 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092248425 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096678614 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068609147 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073691039 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097971067 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071210005 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096842156 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074033297 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078109215 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099415336 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073131497 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099346042 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071249163 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067292355 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097052132 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069030855 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066921713 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099086129 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076651064 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087686347 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071793076 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074233509 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095003241 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067176612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091700695 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06765872 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074957089 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091432173 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055359111 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071563733 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095304395 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066753201 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075856801 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095125627 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07454255 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090413039 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079546413 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067381365 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094286712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067867105 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067657398 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091132115 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071144369 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066949973 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091226272 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076794023 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09032871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073985334 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082020787 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089176392 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074139566 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088094291 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066841505 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083793398 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098906033 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06779081 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091935322 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065384933 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07500717 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088448254 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067259681 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067606533 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089767123 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07223326 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066710928 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091369319 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073588888 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102175101 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066163821 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070849636 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092987422 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066530072 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072675722 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089405745 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067820612 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090321884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065344343 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07034064 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089389979 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074896765 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07120215 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097592351 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067875929 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097633034 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070333795 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072678803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094319843 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065760361 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060963993 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091737888 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067720322 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067918938 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088790105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068476004 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067587949 seconds)
done (took 13.288948042 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066738455 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167617063 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125336066 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096097936 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11081418 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066540923 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101336582 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103251342 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090607649 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125866998 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087655026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107225551 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114381149 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088753961 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066943747 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071166249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091377462 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089101244 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124942477 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086529941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138932894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08789486 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119325533 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090686754 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11246229 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093671602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089391395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070833543 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070980779 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126196066 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107629474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069635679 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067290901 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123461391 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116470696 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08510899 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088527648 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084835204 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08835553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065708678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114486862 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099912999 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104494887 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081612973 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095004918 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069735258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091184046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08635875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114209333 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080771574 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11105125 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133435922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069037678 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104872976 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065736519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111293436 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081873463 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090823397 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067243557 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090821426 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066092074 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071337512 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113674089 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114163641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070136556 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104415497 seconds)
  done (took 7.244472026 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084231308 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115700982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08432639 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106839531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066608429 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067894296 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090911229 seconds)
  done (took 1.585370636 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067215263 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090829235 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114020153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092021632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109990339 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089054235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100964511 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068565037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107998184 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068122034 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088888258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127758143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067474613 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09735329 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090477798 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089767618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090915712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091040161 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070036525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113227189 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070253516 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10998997 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069493907 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067387438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10551246 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069673534 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139602761 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073853285 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093573761 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072079318 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067481108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140984755 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10457658 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078101691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067916828 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106269416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084520487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08929341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085433358 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096796997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08361116 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069780871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092343884 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06671064 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073766613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102425599 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070511719 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091970112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072395792 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089724317 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091669149 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083382418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091531779 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074189526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070185036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097583332 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077127709 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092699978 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089810052 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070481852 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107992547 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086760637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105621299 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086762901 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094385801 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083577931 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106754913 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071555858 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070725182 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094647504 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086412004 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089941857 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071389519 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079819147 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093196619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093302369 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114811705 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070589175 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102158834 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069355967 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070062283 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092054066 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093070402 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095187763 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069771707 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073621347 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095070391 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066768501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068105216 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095446761 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066912838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093009264 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072365429 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06984733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094141353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087038559 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069756677 seconds)
  done (took 9.405877041 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069134374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069890951 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093821249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069754318 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070140149 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092808462 seconds)
  done (took 1.452294569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09768289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091848814 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081643777 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095138703 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105957559 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104449313 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082855226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107011501 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084970057 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102056043 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082721986 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105460257 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088215872 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09848289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08110124 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096845696 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082472161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101640514 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078816861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097165474 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087845425 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096040892 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073936337 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084675076 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095358819 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073458915 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100811079 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079538002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104308104 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083390755 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096652022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070859637 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095879863 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083324529 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104356364 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07292305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096170904 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072576212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099549831 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070975428 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106193864 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073488574 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079194604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095885869 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105714677 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072340032 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072445158 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100750365 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081418569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095336337 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07211766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097341717 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070579178 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095633403 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073378463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106410667 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072168678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106985699 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073314228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072302714 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094416144 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070660997 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106676333 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070773987 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103930363 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071683639 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095789596 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073777885 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096284601 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073367335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070959694 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094563129 seconds)
  done (took 7.337365863 seconds)
done (took 27.99379037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646724137 seconds)
  done (took 1.625231825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.772485842 seconds)
  done (took 1.753797993 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.532911396 seconds)
  done (took 15.520538595 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.61275444 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.755532006 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.807072186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133325757 seconds)
  done (took 3.289837943 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.876583497 seconds)
  done (took 1.883348852 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234220618 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22250186 seconds)
  done (took 1.443117012 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732672237 seconds)
  done (took 1.728365615 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275210094 seconds)
  done (took 2.264212797 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318496579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179776229 seconds)
  done (took 1.495486452 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522515501 seconds)
  done (took 1.520422316 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.558193249 seconds)
  done (took 7.562177312 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227458752 seconds)
  done (took 1.241273432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268854405 seconds)
  done (took 1.271121868 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.120635584 seconds)
  done (took 4.123107754 seconds)
done (took 47.709746657 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07766121 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081912704 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104348616 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078346354 seconds)
  done (took 1.338312581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077616439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07335717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100759292 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072641956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10224357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073927506 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099084926 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07738418 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072835894 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098263472 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073731871 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096088171 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0758016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098431177 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070510669 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077840936 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101312717 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075248112 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101309592 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07612003 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072963992 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09902123 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078642248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097171125 seconds)
  done (took 3.048959531 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077995489 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075179304 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099841273 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074221793 seconds)
  done (took 1.331443193 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077205528 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116177391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090466283 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102068609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092970063 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11194726 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069350171 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071559791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09642523 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079019662 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093228082 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100740544 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11224696 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078462995 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104016065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067984169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071777534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111774264 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077900186 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102243957 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070218393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081703425 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092692896 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091536163 seconds)
  done (took 3.173718677 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076956276 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127062955 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078546328 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113047122 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091061602 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090252612 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075295257 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.114865587 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125631943 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090515218 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070131724 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067460741 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09741487 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067668295 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079045114 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134025054 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.13754275 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069709121 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123210434 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067735796 seconds)
  done (took 2.910168894 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075371494 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072036645 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090271197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071006027 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078739254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097892077 seconds)
  done (took 1.501031003 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068006197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069051383 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09388148 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068974375 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073699754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091842904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068408897 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069409902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092505402 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069189537 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06928676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091498839 seconds)
  done (took 1.935973039 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.420877777 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06879118 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092743208 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065947693 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072189371 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091896283 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082365278 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07050729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117947537 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06884568 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092243595 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071191845 seconds)
  done (took 2.329521015 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260712102 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076883973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324239133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168201045 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139998204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155486534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105620446 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140137882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198325974 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138142285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200133643 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223758967 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133747544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166872901 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114637922 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132463394 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185053336 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221724079 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10569696 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222646446 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205809995 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155342704 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180008088 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128514226 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13332869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150991679 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07246195 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106353003 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233034516 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159520746 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201141939 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138945075 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095217952 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230997806 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224899416 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194602631 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162924497 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084082828 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159391736 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163748061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254503645 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114929214 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194341351 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133434319 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105804458 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172215019 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145528621 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147289738 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137522803 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114187141 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172990677 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239640964 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165287916 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112602436 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137012956 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141577565 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143064537 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104163579 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268481338 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195121158 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159718454 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095946784 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124418392 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185185158 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159091958 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141034933 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152792859 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118916652 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167439717 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211509683 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146350031 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172537337 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179567955 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089283481 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146314522 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194859563 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156852548 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229033343 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154486909 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073705088 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153984021 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129452573 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106891438 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143521726 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102561679 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206879897 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124563724 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139044616 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140065001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134944641 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137121464 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195479265 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202669892 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130497406 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067996111 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133527513 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151633708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177083735 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114019174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13553551 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14741074 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080690441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194117839 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077618987 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154498526 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106876254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152890759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160548284 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100917797 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155970533 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102344458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131104174 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163483005 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219772438 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116091076 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083497551 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229323305 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15602343 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131657937 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176393546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214748451 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10205765 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129573981 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20504766 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242889304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090031745 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224722219 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135335864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083790647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113101321 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154812337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14055155 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148462982 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108607863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154663856 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226915401 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075208681 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121674629 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166149947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081905809 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107190718 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140357013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128408975 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095409026 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127300006 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133178518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19518394 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154800114 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109145841 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178239371 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098734328 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225408434 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115530265 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130897302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104951231 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095591571 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16644887 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217154079 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08071237 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228091478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155358559 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132218137 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146646492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083650672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195077239 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079676472 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073380833 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200885068 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13825134 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137062607 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18566468 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131047209 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155029213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151415241 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163568166 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185958699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162686167 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13338663 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089576517 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141508573 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152527404 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100082073 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120931591 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08554966 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133708416 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123908726 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08557201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199020306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156806237 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127736509 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113599778 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122617081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204206211 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079588419 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160874576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146717424 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121901897 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211510319 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185397126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16401743 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127023917 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200564863 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072719211 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101843109 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093360515 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157544636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109071326 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083288041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169889137 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179569488 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155909778 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16629323 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137344923 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150189416 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212826701 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073380949 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144749453 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179638214 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153117161 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155323175 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112378023 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103199313 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202165489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135962353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245258036 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14479184 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154075755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182857475 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131262193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10594443 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1100402 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193997113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134017353 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18250824 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126507897 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114974694 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13797168 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084815727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13256088 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156673129 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14838956 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18919138 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145627681 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162007098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078048111 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170620175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15098218 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149885782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067091941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150903659 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221641273 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123372303 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152638882 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185336695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106040699 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155214346 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239003894 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176795026 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111523396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13860068 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149627657 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15813225 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147343275 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170020092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137948562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163721989 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13913489 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085893466 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113980989 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124693004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134341071 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097932336 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165271057 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145678281 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09546053 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161224137 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138341702 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137929593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14583996 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124959107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091160102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125094814 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234807529 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150306516 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233112217 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127388223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179850313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225059843 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075778686 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105996188 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081360186 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19471225 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085163291 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163983329 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12393775 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132676631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155206468 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171549426 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122796467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069456349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138739871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189031087 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113581504 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126758134 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133390693 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22109325 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105459649 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108178811 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155373479 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133265595 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104142338 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234689225 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089534146 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100462078 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103774811 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081918868 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158420106 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213752372 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109694504 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134629454 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143935671 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148360636 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183330883 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102723824 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124958371 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142751241 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203623175 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157066641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092989561 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141614124 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184757265 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189617433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133169936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122258801 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204203247 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212382533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222286117 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089869228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143466274 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14303823 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13663007 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197295061 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083946266 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226833934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109836785 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16720916 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131841833 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119344606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157822259 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125471606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091962839 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207212173 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150696404 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103709535 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107584307 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14912672 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151300373 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135349182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078173148 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195792504 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074128628 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195108987 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203925141 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110519891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13319757 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09949007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110375848 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137794466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132235956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090756087 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.145251048 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231333566 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118366955 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181887145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198623162 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142629593 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168681368 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126174323 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663038938 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08075533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215165958 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148461687 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236563029 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125174118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146804236 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113348239 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177123137 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175117784 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132313049 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204311754 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163835651 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148811925 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106327235 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104533977 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139061871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117546153 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134484507 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142100534 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14460867 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128662689 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149939768 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154480023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107590116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096223085 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215526511 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145245272 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171626252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19526237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085175385 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147327591 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196550745 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082103068 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15400121 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214932226 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138441942 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125913565 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08401351 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135894685 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232658854 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074415491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223435809 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153764298 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139036152 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142450152 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147174189 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188259673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136495577 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154955231 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097286941 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166757113 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121868059 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113798357 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106165491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109839957 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14127986 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12653956 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131883075 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124160638 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207545489 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073114849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123927564 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131935175 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173711076 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23642212 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117599712 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08381362 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149526917 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140882268 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1451962 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180120828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08570123 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113350066 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086955656 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140481415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137890046 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145240403 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109017313 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139948464 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228665471 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112554563 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230458546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125781212 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136208748 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072985332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109473323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099566443 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124974609 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13616484 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129206198 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233412035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100132184 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119723921 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122531217 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076263015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1124412 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161698403 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141582236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151604434 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126608703 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066250299 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140170514 seconds)
  done (took 71.514286535 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132157838 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104176716 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121435865 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17224561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145034426 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236610119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180498315 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221974638 seconds)
  done (took 2.408766708 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069371216 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117186079 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105279144 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11784579 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090666074 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070573293 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.297303197 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112389347 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067722512 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117997005 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120497432 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091245033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.477202839 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067427164 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095657135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08909188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069372957 seconds)
  done (took 3.262740769 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428177556 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.640039816 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448026859 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073445406 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.876552726 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.106437021 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.393390894 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162301936 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090622207 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43512867 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728665941 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153549473 seconds)
  done (took 17.63359553 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074226778 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071585536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112885318 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08564426 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1004523 seconds)
  done (took 1.542809903 seconds)
done (took 114.927693806 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078895427 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346642007 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055156271 seconds)
  done (took 1.532489142 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084238794 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086615128 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113158196 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08585194 seconds)
  done (took 1.474955857 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074730247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077596246 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114482025 seconds)
  done (took 1.370577389 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279887506 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169339998 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090289175 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08285126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079353348 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106115552 seconds)
  done (took 1.372983901 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072290094 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077118685 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100631483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078717935 seconds)
  done (took 1.425894109 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076437354 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054270511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05695834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083328971 seconds)
  done (took 1.375272662 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089581032 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107640825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083362274 seconds)
  done (took 1.382282723 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106535579 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114317047 seconds)
  done (took 1.326559588 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081644172 seconds)
  done (took 1.182798923 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094295399 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139618119 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157203048 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137687163 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166840609 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137955941 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116266821 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089371844 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104860705 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115798771 seconds)
  done (took 2.366540328 seconds)
done (took 16.525228858 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077442464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396884608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362915155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121467185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670084144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35797371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017166942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123122713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126504809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096039828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085643207 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677303478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978893029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352145512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966370404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320264336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678108327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07007607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096884653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069081214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973364965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09561469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06961073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070467442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676736316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372959953 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096962596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319798158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069917029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09672408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356837585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09645996 seconds)
  done (took 16.034556634 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070015513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14466037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075762749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086528213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098813517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070650643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100146358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071168332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155672935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069585351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113671143 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070054861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101677219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070157812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089552502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096387617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070458559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070880508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09631882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071203027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115204918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070551628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070673261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097836994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070332561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108290744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070404772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069951923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096347994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0711872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09953749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07094031 seconds)
  done (took 3.909027446 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114751935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15245817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076453942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131387766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116820149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098772259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17418234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095998094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157075548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071124793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112959213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070389456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130504597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071135433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117302904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071093772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071142194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096097841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070671926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097187175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087146918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093228764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069200669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069003744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095579296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081192444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095812618 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069396701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068823339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097595614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071875176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097776943 seconds)
  done (took 4.20700743 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072421394 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076517418 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111593514 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085582154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097713037 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07392154 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075023046 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098327194 seconds)
  done (took 1.799531951 seconds)
done (took 27.048605541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078119821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071750674 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101778042 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083357437 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101003827 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081267139 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069099246 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10317741 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076967196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075245097 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103586257 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068559622 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099268259 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069301513 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076671685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096229152 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08181834 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100764123 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082517458 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082577992 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099502713 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079903123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102389282 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08251691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108384659 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081706393 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084912501 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102917536 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071080114 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098514478 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079609598 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086528049 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098239493 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081530525 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09614136 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069386904 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069776542 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095430646 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081476611 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102378993 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072657766 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102482948 seconds)
  done (took 4.754444932 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088007719 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094291075 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113587308 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067245376 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099272821 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065597243 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117917396 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065699466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061581898 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.117270762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05811124 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061399153 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091884612 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05610874 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061237114 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058523588 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090151712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058004077 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061707402 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088894157 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059846184 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055656634 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088262214 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065104498 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058171495 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.090534434 seconds)
  done (took 3.110279991 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07553429 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085971516 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115795321 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129148739 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134246421 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079688676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106883622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090194197 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114347878 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07009485 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073016153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126384812 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090160739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102939925 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070228195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116848995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083816058 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071505694 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103093591 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09292157 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113186686 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080404713 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12162692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08395554 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069068289 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099136531 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073623049 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111147095 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074849033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079303932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100710396 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073200486 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098575586 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081423377 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073665752 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09962074 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091619453 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105762213 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079368578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07056187 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09976188 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070726383 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118111137 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113717265 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095512607 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076977296 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077966719 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104499666 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069538913 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114103977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077997715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068934789 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098838578 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06927692 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09679064 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083504892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071647522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099142391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076718634 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099839994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07961077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07373223 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112326064 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069689427 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104705218 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069166225 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07041336 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095513792 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093350773 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071087702 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139750664 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071370473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097452077 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079154188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103921038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075178651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06999609 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110938102 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080349842 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100098828 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076782158 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073833179 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099141519 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088698184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098620526 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069340206 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070879066 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103453553 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071546718 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.104628306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080902966 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070064931 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098516093 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084734148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095977551 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06951077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07636584 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101271226 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067158073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108974914 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073672236 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097001559 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077457864 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069027985 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099552462 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078550587 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100598331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066890453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074422654 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103991303 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06932265 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071217851 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098866969 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07134129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10624228 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075807507 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074763352 seconds)
  done (took 11.506247278 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190869693 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184421781 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071778012 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180216774 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079415317 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109781405 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182040847 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099993806 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098342585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07057252 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071951974 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132657391 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.127167689 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110432681 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110242503 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070533861 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116247558 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106843659 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182351735 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176537178 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115996791 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07615469 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071425393 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099827681 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072269166 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079273226 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113704483 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076213549 seconds)
  done (took 4.31125876 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081526486 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128858197 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074117083 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090672983 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120628807 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069505267 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102955607 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070056056 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109252463 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081708342 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096851994 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076743563 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075581862 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107190724 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07022294 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10819172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080429156 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071220336 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0999379 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074922717 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106643663 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082680655 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07355465 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.097334931 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076037847 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096874359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067714359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113984585 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069139834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119155987 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067223197 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076839582 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110949813 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069468649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097834533 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073321931 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072761371 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100689249 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071730745 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068304854 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095970395 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059897703 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069138802 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109508499 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076914974 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089582489 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076280719 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075057191 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101207579 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067594066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100462939 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072688141 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073607202 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105777575 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07377481 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074946132 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101634399 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067744811 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104891939 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073445238 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066192262 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096227316 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074519063 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068206464 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105019505 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074186543 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096514512 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073061858 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075051469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104380263 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072967419 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072446457 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095056451 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070946847 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101715561 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074627492 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074113809 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096298302 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069552122 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070052414 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084700805 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069874517 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05573123 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100203232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06653209 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068993656 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09919945 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074985696 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110021943 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069906034 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103510717 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070228028 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068715977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100382705 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063165425 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072532137 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112791993 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111980089 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069155053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068151933 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112241174 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07418128 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069750631 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085611486 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075019367 seconds)
  done (took 10.000719842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09539949 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092916167 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097621757 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085441923 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126179458 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094201361 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104109675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076609694 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071776469 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114519854 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069516229 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10591302 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070484702 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078902195 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126889678 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074836445 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099639408 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077932009 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074594696 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137411948 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082546053 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110736195 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080085906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09671742 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072980338 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082055032 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124769374 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079018278 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106371347 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084483059 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.0808328 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124814509 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085277888 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101289545 seconds)
  done (took 4.331063374 seconds)
done (took 39.122740326 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204372606 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.400141388 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.18815489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.074496973 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.240048034 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210280905 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217601078 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202359671 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.287448975 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189307549 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428910674 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.820118036 seconds)
done (took 58.597792547 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.253433207 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331235511 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461442876 seconds)
  done (took 3.926000502 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.534540971 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.075148851 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448428989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189204974 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209848741 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493503813 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.793414694 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.031226203 seconds)
  done (took 27.373750559 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196313754 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.552763655 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.547291613 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.548121668 seconds)
  done (took 17.97884478 seconds)
done (took 59.201355527 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.182883882 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.227313334 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.192966967 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173950597 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297248855 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215661756 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.474332271 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.399662296 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.200983045 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178398742 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201686671 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190483473 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195600402 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.531318811 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.197582989 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.193240616 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.257752668 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.660924685 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570716603 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203228322 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.191462628 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231159129 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195422267 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.189389496 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.21112762 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191124416 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191189091 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195135696 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.397571922 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193875924 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.243473726 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.664547832 seconds)
  done (took 190.975780968 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191362917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.291644979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.356793977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.221013175 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.650153333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388765288 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322188297 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.716940444 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.209873618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220549346 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.524490874 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190147122 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.554085188 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.15920728 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198781633 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296807798 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.373538979 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.540859749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208474211 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.440361184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.195868173 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.44130751 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.354934082 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449923905 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23392076 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.265335733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.211826721 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202224023 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.385567255 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.317162742 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207605576 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233429044 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.76455223 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052712604 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.198354755 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.213155612 seconds)
  done (took 149.919736552 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.448823408 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193213013 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193083099 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192743403 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222092534 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193050971 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.721096344 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725308495 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.697533198 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.43133965 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253785672 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.393914098 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195594403 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286301264 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205937252 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194213521 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209060794 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194504087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194267018 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218850987 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196667753 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.722208325 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208152526 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199843773 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19371294 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222867317 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586319521 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.216086559 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192785075 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223425801 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50900982 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236431743 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19371228 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.481137786 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.303698952 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301638051 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195835554 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2245606 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.196150119 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461404586 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194750166 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195115563 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19677749 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76792749 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198851923 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.725313601 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198356427 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.080558962 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197800471 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194751099 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195722782 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.593266991 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199081063 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.656422349 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.198720364 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196218299 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.197901867 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19620165 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195287593 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195214635 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225682287 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.50261874 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293175508 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196480354 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199255306 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225585857 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196074913 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.263708839 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196364319 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.71924527 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253407381 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305052533 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72581555 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197785437 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287369746 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314803784 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19613118 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196317707 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196223498 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195737672 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301626065 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197231046 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.588186012 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202740163 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197099579 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.255038969 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289895818 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197367075 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494950735 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198582295 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.1971113 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939934589 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290946079 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196150029 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.1972577 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195923202 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.590866041 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730242996 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378902132 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.200933078 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.477137599 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.199212154 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.60064493 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.707098186 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.802087118 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.199668987 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302795044 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200540953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.198755046 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197029575 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226510674 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19919857 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.2558737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196902427 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594432912 seconds)
  done (took 343.985558487 seconds)
done (took 687.4642009 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.855854046 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.843119521 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943435792 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.834973463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.818854498 seconds)
  done (took 10.438524926 seconds)
done (took 11.580012344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.37573996 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.375386173 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254752396 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377673153 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226252138 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391902583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355638079 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218016843 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295125713 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.271326642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295796619 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246434773 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224838327 seconds)
  done (took 18.051338373 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500501344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502153691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261922061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500311682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237638616 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496618414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390379263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.398590298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387360911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213495522 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213812331 seconds)
  done (took 16.247759727 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506334033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495501007 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266471576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508072098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240823813 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50468112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38787525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397940544 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385648997 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215065938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212682513 seconds)
  done (took 16.265954396 seconds)
done (took 51.708020549 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208323308 seconds)
  done (took 2.351509476 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243499377 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403925295 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225356864 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214058613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209424559 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.210111113 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214409195 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20827096 seconds)
  done (took 11.074561361 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205714629 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208338549 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208900331 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.2056711 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208365153 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2091555 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.2065569 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205881195 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206192124 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204778458 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20822056 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20979583 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205723641 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208992959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206543593 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20912015 seconds)
  done (took 20.463299487 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207217691 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205666252 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206489622 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206587139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206725248 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206572675 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207445928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206566487 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206446702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20784979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208161474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207102316 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.206946932 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207519002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207835773 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208482528 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20811069 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.207932184 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211439684 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207336451 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207265405 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208360942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207176824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.206473065 seconds)
  done (took 30.125683777 seconds)
done (took 65.158316479 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.184622887 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.787981456 seconds)
  done (took 9.118414516 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209490876 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209662245 seconds)
  done (took 3.56618878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208852494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210399087 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209612515 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209333217 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209816249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2102183 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210795354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209225457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211272917 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210142653 seconds)
  done (took 13.246984018 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211029357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210539639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208126055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210431136 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21033908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20928662 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210084596 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211217895 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210566608 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.207824803 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211412769 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209490558 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211109485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209310461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21200734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209113185 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209159923 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209462934 seconds)
  done (took 22.928601552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211281011 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212022445 seconds)
  done (took 3.571940254 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209003792 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209627327 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208410847 seconds)
    (4/7) benchmarking "year"...
    done (took 1.20927399 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208852111 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210406182 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209478934 seconds)
  done (took 9.61437915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212595011 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387427491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47023974 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.763873864 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213364925 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.215855551 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064557755 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2158282 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217717937 seconds)
  done (took 13.910814783 seconds)
done (took 77.103994033 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.194161791 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.207052409 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030054343 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222475882 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223653328 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503937308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227333547 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.328907627 seconds)
done (took 37.086450994 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212087132 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.926135143 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.929857599 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218625846 seconds)
  done (took 11.223769931 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.196232821 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.091616258 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.195556467 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21407619 seconds)
  done (took 17.849054675 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.808541747 seconds)
    (2/2) benchmarking "read"...
    done (took 1.5369863 seconds)
  done (took 4.49539702 seconds)
done (took 40.929145958 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213031356 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21095305 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213335541 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211263263 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.211217975 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212914367 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.21120733 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210925962 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213451897 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214570767 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.214681072 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.213795166 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213814079 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212112018 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21118436 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213849389 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211484545 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211447778 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213725739 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212170975 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214080423 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211977492 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212958281 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214222461 seconds)
  done (took 30.25455477 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21445561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211930898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215750323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214821834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211861534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214506649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215108315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212247447 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21535891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214322978 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212663795 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212527152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214432293 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212924195 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215701935 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212627051 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.21584239 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212584257 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215723322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212355974 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216089487 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212084779 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213340707 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214815405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212821337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213688917 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21609858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214324955 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215907692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214346329 seconds)
  done (took 37.573774158 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220359383 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.224070847 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215956895 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215728663 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.216031037 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216624546 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216478867 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.216178566 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216575315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215152019 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216766441 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217455691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216361671 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217249886 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217551522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215738015 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217498691 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217370016 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215781773 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.217045889 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217096223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217414443 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217119233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217919443 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217171624 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216862787 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217203515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217199658 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217211668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217885422 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.217140943 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216504167 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217095799 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217681799 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217354342 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.218308146 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.222545123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224835291 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.2170516 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217143589 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217839686 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217825639 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217379856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217828085 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218808953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.219064003 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2184301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21893572 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21748955 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218257573 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218613962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218397758 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218555582 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219607914 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218512763 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21837689 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217490137 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219225533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217896482 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.218529474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217514566 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218047783 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219057812 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21945403 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219331268 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2190336 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218579935 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219576811 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218580102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218827161 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218830583 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219118653 seconds)
  done (took 88.849733872 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218711068 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217383491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218217193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216456762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216865241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2205867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218108179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219277615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217286323 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219821669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220482493 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218493579 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217704499 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219537154 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219658645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218168135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220922571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218229471 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220098435 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220914688 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220691939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218267998 seconds)
  done (took 27.972390542 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221681129 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220492959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218308503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220105568 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218658368 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221493068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220934092 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22199311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221295876 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218592845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21883048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2208154 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218873447 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21830321 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217521737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217911206 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220628857 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219117444 seconds)
  done (took 23.11319674 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218815237 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220017132 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220825872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217767913 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219175107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222264529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219235456 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221046521 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222785792 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219175163 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220920407 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221299136 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22208039 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218948097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223137367 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219791651 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.223571277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22037611 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222533726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219984005 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219923085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222875408 seconds)
  done (took 28.015259543 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222809952 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223466194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218952467 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219971146 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220970482 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223459184 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223912908 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21958686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222322189 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22314694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220510333 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223337304 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220953289 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220464296 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220024303 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221065087 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22304307 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22091674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223989854 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22161365 seconds)
  done (took 25.59498634 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223967738 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224279831 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225113637 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223797232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224255767 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223410365 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223874331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22459542 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223759261 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224840643 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225437571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225972605 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224512932 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224272841 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224382059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22496954 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224297492 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223886349 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225389964 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225067431 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226680848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225885652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225217184 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226320705 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226447264 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225682086 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225105953 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224881295 seconds)
  done (took 35.457275333 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225744483 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226644007 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223048664 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.22326046 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223501245 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223523059 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22314865 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222805858 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225613113 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223140422 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225134329 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.225674935 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224474636 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225865198 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225520415 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226505224 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226164039 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.223153944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223968346 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22330546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.226256085 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225169713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226194616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224704305 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223450713 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226950647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223934719 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224189568 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226966 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223493939 seconds)
  done (took 37.904241118 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245388842 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24482389 seconds)
  done (took 3.653599607 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.223547874 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226168557 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227543168 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225212988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225418055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227158828 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226662623 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224375056 seconds)
  done (took 10.969468135 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.227920941 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227843404 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227449907 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226956504 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227201482 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228902551 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237105509 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244053442 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23086853 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22911611 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235021698 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.237470815 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232803979 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.229183859 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229633646 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230878001 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228553792 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227284214 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227575873 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228634743 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229109009 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233892155 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231654127 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226630347 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230604154 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24290471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.238020536 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.228976137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230227174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235550332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231279305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226786334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229115531 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229474754 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.230369496 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229737464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241547051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24768292 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239487082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23028939 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230197944 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.227659727 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232426047 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232980679 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23320469 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22944735 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.230244032 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227793486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231252541 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233743602 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235651824 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229907184 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228055855 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238118529 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233061538 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24036016 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247075719 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.23388586 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239921222 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.24418891 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247631578 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238849416 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236158289 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230567094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240538424 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256101158 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24044204 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245322126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.228410599 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230740683 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242283354 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248211267 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.242217464 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230861289 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230986068 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230778411 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233107192 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23182612 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242565715 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255360466 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230857598 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231213437 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241093829 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254759933 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232175916 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23131367 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23255524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.231359392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234076831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244934283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247970545 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231547157 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233685541 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233721791 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237868194 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.232685961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231084238 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234849688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229875507 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233224651 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232054195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236711805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244249632 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232642416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232420628 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242608274 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233853994 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233687657 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244419639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233567514 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233310406 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232646018 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242169566 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231439331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23730186 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2430999 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232728262 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236485215 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232975273 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233993408 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244281231 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262303469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.233300582 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234320281 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240373458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244551236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233608782 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239699062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234531444 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.231337807 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231945481 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.2379223 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234824159 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237278313 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234179531 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237215013 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233014992 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234037105 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234116199 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237550457 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238324493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237248524 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237783185 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24005159 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234155567 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238142863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244644039 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.237682016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.238596836 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237715999 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.233212362 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235603723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238310687 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234759804 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236956544 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23499565 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235125259 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235108815 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235918936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236470193 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23712032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23783756 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241357867 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236828868 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242880041 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237037371 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.23300853 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237389479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236627452 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23868244 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236025902 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235899704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.239658568 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244248976 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236331516 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236073139 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243272544 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237492457 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236051903 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235804092 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240355983 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246100083 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237515533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246955241 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.237372085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237362899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237251666 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.23945543 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23798958 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238390003 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241475433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244866811 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253529229 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248512881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.23951001 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242890118 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239865547 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242132387 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244937671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.238989832 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238099736 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237503173 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239759997 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238260741 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242631774 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238486068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238799129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238448436 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.23815504 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238202939 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23765107 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241094083 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242477691 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236493466 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23821613 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239518501 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239014315 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236344134 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238877591 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239488499 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239050854 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.238860767 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251331794 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237615534 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243303718 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242012969 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240414641 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238989558 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240100699 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244238746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241881945 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249734149 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258752302 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242494749 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249587462 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257529319 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241088158 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244966251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241350788 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23805806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24385257 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247323711 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239958592 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239827017 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239252763 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241710221 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239970297 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250952975 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238791058 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240717529 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240797236 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245692994 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238423418 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.243852079 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24356824 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243477262 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244788285 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241184031 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241210927 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244793915 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240543198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240685073 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241324952 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244704253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249137522 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249166358 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244441073 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.245739491 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243261891 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246109278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244039704 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241560007 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.24279573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256626069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249287866 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25152112 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247543295 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.242735523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250662646 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.244600282 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248254731 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243493367 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244430158 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244348958 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243636553 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.24097713 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245513825 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242509762 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245027691 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245034688 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246466509 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243245343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.24222012 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243002987 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242606363 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.243539138 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243273614 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243567912 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.248854619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247892159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243795198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243504563 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252833269 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262965864 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246831911 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244864354 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245503145 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244870046 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245099425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.244011273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247774068 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250812282 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247618784 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255091315 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245921618 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256827527 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244268647 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248136645 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251516891 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24193641 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244347074 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246388926 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244041147 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25471686 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.259909773 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.246169645 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247616562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243547117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245436707 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245010212 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243864444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245695846 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244644906 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256088435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263229357 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250129094 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249134584 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242973488 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245303705 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245262427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246486102 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252839335 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.245730339 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247190629 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247020643 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.247872308 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.245548684 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.245578431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245438193 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243297529 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245921006 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256358223 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264572661 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249730459 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247204295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260399723 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24744202 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257048246 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263557443 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248631138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246692176 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246733808 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250494848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248374715 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249927193 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247477497 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248755441 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.251190458 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246663653 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252386036 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249190315 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246247523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248564872 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257794609 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27029078 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.250241019 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251086516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244986507 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250201178 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.250046033 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247267111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247063645 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251305308 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257083032 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254852911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249962058 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246783807 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249540217 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247038149 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248466642 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247741083 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.248203703 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248500591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252095318 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.247634428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25603163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248705067 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250603541 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252370998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250318492 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261402859 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.249292217 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250861709 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24868228 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24864543 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250593549 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250458138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249115548 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251769471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248447784 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251667934 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256366851 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256471902 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254467737 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249909852 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248866125 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251421295 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.251438486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249271763 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.248827341 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24981449 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251381612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248982497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252848814 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249132446 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249795098 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252807242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250396119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253951985 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.257825397 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251901421 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247573753 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250790312 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251031213 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250903676 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253148173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264200927 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255111075 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260686217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259908047 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254905437 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253331755 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254242491 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261660127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251679584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253968289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250966951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255292586 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253872302 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25621251 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25007335 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26211525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.254051472 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252627491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262594216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270980103 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252002111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253872576 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256836712 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252961754 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249373238 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251478479 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25279949 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261463075 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272262263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252124663 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255532124 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251520768 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25390089 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256094134 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253049555 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255203253 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249583112 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254202243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252487936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252210476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250364971 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253973414 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253702877 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.255913356 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260328697 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250518551 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256917355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254140295 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255613451 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252635512 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253168861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250564948 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250797397 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.256262051 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252437753 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255694628 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.257705075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255178993 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255501968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255292213 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253533043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25749925 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265418018 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260525213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.251299095 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254240151 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25634134 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259816447 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254596333 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253607055 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25600072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258639491 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.254239406 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253133741 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255060523 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258784575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273757846 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272326295 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255914905 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256869317 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262462728 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25504437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252570526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254119104 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259424668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259042162 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261577574 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.255236654 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265328611 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273124212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256584182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259387214 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.2590162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264951079 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256494581 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256159333 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26186793 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275183328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256128582 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266268518 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288430663 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27445549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258920395 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255350072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256526089 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255516785 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260501182 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255242054 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256142159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256206629 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255790258 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258561848 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264094356 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259838588 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256907149 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25694099 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257949837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260755017 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255288851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257376745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25784232 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255957769 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.257581847 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256571078 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259417094 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274798638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270664735 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.257184559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.257988368 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254351706 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263472134 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262096198 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268066125 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264855046 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257495153 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.258369099 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260465186 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257530124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255113792 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260105388 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259310083 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258482258 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.254500272 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273854603 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266654051 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265582084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260668134 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256910523 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.259247835 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262355834 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258370398 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257993207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262411296 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259286694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262711027 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259299904 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.259008794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263782271 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266335086 seconds)
  done (took 744.079770448 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257134534 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256400016 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256003086 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256774125 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255991516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2573189 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25765354 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255824868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256607356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256921428 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25719766 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257526552 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257751207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2575767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257898275 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258008193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257296055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256961859 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257720808 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256862047 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257989954 seconds)
  done (took 27.594236565 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.259465807 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25713973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257898856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257329347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260577435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257249699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260428622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26118502 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258085467 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26103315 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261409656 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258709517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258220645 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259014325 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261828349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261106646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258461207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.26149829 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258432051 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260207765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258188309 seconds)
  done (took 28.904016516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261472623 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260771795 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261795571 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258317188 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260854307 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.258563378 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26066049 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261792681 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26134491 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264758199 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261593977 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.263270015 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271102862 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.266026173 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265422065 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.262458381 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406108167 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.261146653 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262078262 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261587781 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.259437183 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271511977 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.260558781 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.260040806 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.261942466 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.260484629 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263243356 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263156071 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263245814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265828834 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.265760572 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.262932997 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262615229 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.266438999 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264437605 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.265772763 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.266723746 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263975854 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.261483224 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263905211 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274240105 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.283878062 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263447412 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273719448 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.264233717 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263079148 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.26678136 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270020083 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.261378589 seconds)
  done (took 63.283766319 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263376192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26336711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261417048 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264145553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264771455 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263989067 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263979414 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263924042 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262436735 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.261216075 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264295025 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263286003 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.261582268 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264515656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265064956 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262276695 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263150657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263627817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263187293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262941091 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.263163127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.265365039 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.26751309 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263605058 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266281675 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263297965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263345164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.266065124 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.264411108 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264577801 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266264673 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267003747 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266275029 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264750812 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264276334 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26565319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266434927 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26386466 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267227545 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.263791478 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26601113 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266178257 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.265770614 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267487294 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264482038 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.263956321 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265004539 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265158712 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265601389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268184947 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266711726 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.265490718 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268012845 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.264543831 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.267804046 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268299164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265789575 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265376343 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267019895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.26524743 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.264911382 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267222549 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265140135 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.266645368 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.266977157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266028079 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.265768516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267932579 seconds)
  done (took 87.224583602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267227935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26673701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267776799 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267358707 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267739023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267777942 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26765533 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267524426 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267749144 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268600522 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2669797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26658394 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.267638277 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26767493 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.267345684 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267780291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267322782 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267450007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267499038 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267054221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.268275324 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267227749 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267414106 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267561089 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269657132 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267416904 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26846303 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267976871 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.268304284 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267875769 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268838809 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268175366 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268423574 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26886302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269106979 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268143158 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268443678 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269468628 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268068683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.268475021 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269374813 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268492357 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268760923 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.268231958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269351488 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268551435 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269221177 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270178336 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270250966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269380893 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270091834 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269020232 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269275975 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.268256921 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26956253 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.269321965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271196315 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269910681 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269327541 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269464114 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269073323 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270109117 seconds)
  done (took 79.847175989 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269263542 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269106387 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26806317 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.26760229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271310204 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269182498 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271913954 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.271589826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270787091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.271175099 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270676698 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26866449 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269017366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272099547 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268252136 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269291618 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268908471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268417073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272121442 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269032201 seconds)
  done (took 26.602534256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268446563 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273188671 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.26991777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269954902 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.272398397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269135888 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.272724378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2715157 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269348271 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27190561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272677261 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273024985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270668137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270391434 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271730412 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269645676 seconds)
  done (took 21.543377622 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.269397151 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272392878 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271622335 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.27223261 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.270014973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.269931931 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.271343715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269388055 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271009473 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.27333441 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.273630416 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273112259 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27281875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.272432496 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.269964458 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.272831839 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.269888976 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271199798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.274017621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272977736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271284398 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.271014043 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.273234309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.273251612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.271687535 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271106913 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271306878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.271457631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270577934 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273763959 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270536859 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271679819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.270526264 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.270910625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273622532 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.270714024 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.274299902 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273779948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274303781 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.27367729 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.274027993 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2718058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.275030192 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.275711807 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27232841 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274439944 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.272490835 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.273260887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273328109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.273898868 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274235277 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.275139335 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.275661013 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.275266443 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.275345526 seconds)
  done (took 71.197167152 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274644861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274973873 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272294764 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.275445671 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274542303 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.272269772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276127698 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272307989 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272728532 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27584467 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273924865 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275265793 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274383483 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275671836 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272549728 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275944537 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273262224 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273390642 seconds)
  done (took 24.146482985 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.274040094 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274128039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275728867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273731368 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.274089453 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276597372 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274257464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2766461 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276729062 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.274247755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272665576 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.277462031 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277344719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276016589 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274950726 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274933874 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.277661033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276489061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275045479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275969571 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278135763 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278567684 seconds)
  done (took 29.276771517 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.277115154 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.277008427 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.293795276 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.321803885 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.306098168 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.276137756 seconds)
  done (took 8.964631156 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275279281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276174163 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27463631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277900915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277321319 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275559587 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274460207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275440034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278237475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275223443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274815687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277295708 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27831348 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275468135 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277613197 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277353955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273980998 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275476348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276112609 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278859155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275718876 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278712773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276498414 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27652674 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275660196 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276278302 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278711621 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277077776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276465207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279812694 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279115667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27640816 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279098507 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276077237 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280614884 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279084076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276676197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278629532 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279462751 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277101611 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28048119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279120912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279927819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277313725 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279731635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276539386 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277354047 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277401281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276872518 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280114506 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279649079 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278469127 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280044078 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27941667 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279966194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280318582 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278414815 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278481683 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280267732 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278352225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277411012 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281095169 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277193345 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278254871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280385684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278022962 seconds)
  done (took 85.543824367 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277742758 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277922265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278865356 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279496488 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278816328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279656228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278088672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27821257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278119337 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278760753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281078744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277879298 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278781079 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280298805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277548977 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276944137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278076303 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277909399 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27854191 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281416921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278597765 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278464147 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277233391 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275039192 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278884867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279426851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276045735 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277270192 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276945701 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276663868 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276625317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276776367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276178665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276393213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277155655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276730378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276689556 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277170769 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276750463 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27826863 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277025265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279604538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277134646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277265325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278539063 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276609531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276479319 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275690806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27688932 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276289334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276261091 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276762629 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277104438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275338069 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27538248 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276177258 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275453266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275942897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275639834 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279145588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276589518 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275955122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278998408 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276036913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276364483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276924408 seconds)
  done (took 85.530348046 seconds)
done (took 1734.247519124 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.349119632 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.259537806 seconds)
  done (took 13.821996293 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.439275246 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.391676727 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.276298537 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.30803962 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.2769176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.296481816 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.273427929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.275992088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276622251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275965883 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276612959 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463247131 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.331145469 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.27616932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27543324 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.369110083 seconds)
  done (took 42.29738776 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.304638856 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.283893559 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393192185 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.300342955 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304626097 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.459283393 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.335955378 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.282023884 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445818295 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.321603137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.782932232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305336132 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.285297871 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.351678546 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298544812 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459726122 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5209364 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.789543449 seconds)
  done (took 29.438668172 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.715525874 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.277963754 seconds)
  done (took 9.206189845 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.283431406 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.321342333 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.319640519 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.312361346 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.315259407 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.325205336 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.296449127 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.335066833 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.316722407 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.317213857 seconds)
  done (took 64.355747801 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.299775218 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.2813464 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.281490817 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.279947124 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.2725911 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.272624165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.280238951 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.277168311 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.768951237 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403378529 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297632969 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.286085274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.280188775 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.279967024 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.275380387 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315624964 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.424544175 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.277363007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.274995279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284653838 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279616026 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.390306819 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.317894876 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276072681 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.398889995 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.7426512 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.284543836 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.285334136 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.400915372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.276084743 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279720918 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.278778374 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.281478609 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.847593286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762858906 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.289951309 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.301924912 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28812484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.275639477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.421693974 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280684245 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.28660181 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27934631 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.732291795 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.428639348 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.385941987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.46808493 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283980157 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.281163586 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.341159198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28086161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.281321524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.30887865 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.019107136 seconds)
  done (took 107.968180801 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.27697064 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.76845093 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441398176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.296050214 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891522993 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940423291 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.27272299 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54150417 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.295615798 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274735844 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.54272168 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.756489053 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.27839734 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.28029309 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933014158 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355480075 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272430786 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.034090056 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.273555409 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.277773515 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.681273113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290686272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.271704802 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.536467174 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.307601729 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.706839313 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.629624656 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.703689844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.271307522 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.270526409 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.706411005 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.277269249 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.328364154 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.269210793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.530687657 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607934607 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.582598027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.272563169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289741316 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269377074 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.291554547 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714358585 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.601529346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.272722066 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.269743475 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718996793 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273082029 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.280031065 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.268847493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.466043723 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.189967185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.270030958 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.60669617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.273291006 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.536330855 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.279850308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.328546052 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736279458 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271782637 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.324464796 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313828433 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.269497466 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.269157116 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273533562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269771723 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.580429775 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.613982278 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.268693607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.578950793 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.687828857 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.266804734 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.749466152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.206943239 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.292623033 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.316720678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266323427 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.826427003 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724902827 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315342913 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267102991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560253851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.270829038 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525852632 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.276919123 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265870374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673403144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290594209 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.30000479 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.264331416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.265279312 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887327152 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268387553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.511268794 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.307313122 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.264907565 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.265127773 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.275625699 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265324376 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.264206664 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.264039195 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740630842 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.270190657 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.381051149 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282695047 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267896496 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.264545732 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.266182678 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.266130774 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477027463 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.749599169 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.270568938 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266409039 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.26639064 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.272213552 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.495287311 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.264740583 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.530911206 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269754398 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26493736 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281461239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.959082716 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30683984 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264710136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.269733174 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.097297768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.470833406 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.280426574 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.278249857 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266066946 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280912107 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.480914522 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267450911 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.306139338 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.266275699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.924003719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309772152 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.291931923 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.838132328 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.271613503 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.118340796 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.288605279 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.266554943 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565725658 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.521526827 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.557502758 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267909474 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.26696312 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92612898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290487207 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413696893 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282668919 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.254272842 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462777715 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.511447961 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.268050284 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.843982888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.26811686 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473941716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.275624814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574138792 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711888805 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.271708611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268718484 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925520076 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910353365 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.076273412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.269222896 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.525332265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.237867244 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.719131346 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.267211973 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.26799508 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.694659828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.267879823 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.273628081 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.268433779 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.269523898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.413619085 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440694816 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.444119715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.273725987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685447564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.276736783 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26922938 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.275399432 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.269208723 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.621402098 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368430543 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.269251069 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.295646174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.269116918 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.272049282 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698751102 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.245162675 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.271752157 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422316075 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852147092 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.272538191 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.270009731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.883879855 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.570549471 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773596454 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.294546221 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.536263711 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.274960853 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308241138 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.807123632 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334038187 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698334504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272177586 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.269979785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813707482 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.273591059 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.3968627 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.270693002 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.269622313 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.752129105 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270678883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.271642391 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.467109969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.271646324 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527153222 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.271478456 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304719735 seconds)
  done (took 1094.794044927 seconds)
done (took 1363.094294702 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.270202471 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.272922356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.26076227 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27885724 seconds)
  done (took 26.295587782 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.285182647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.282186388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.281288202 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.281445807 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28259409 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.282054606 seconds)
  done (took 8.910960176 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.294370168 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.277592516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.2782431 seconds)
  done (took 19.06764281 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.471610456 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.421686085 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.603650015 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.189424438 seconds)
  done (took 9.903140107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.282725937 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.281814532 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.28207686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.28423477 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.286655271 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.288044307 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.284270307 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.285233622 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.288090712 seconds)
  done (took 12.77975856 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.736657403 seconds)
done (took 82.906114125 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.28154944 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.768754292 seconds)
    (3/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.631345907 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.280060344 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.906816655 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.280843523 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.726289897 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.519623947 seconds)
    (9/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.256096623 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.320426901 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.302700148 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.389844919 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.392117828 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.688745421 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.279957284 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.4210919 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.634230613 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.024760822 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.302938503 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.482758118 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.568109541 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.383719745 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.502564613 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.560226424 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.594267593 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.129568067 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.748722953 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.34173455 seconds)
    (29/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.304060362 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.253530763 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.265014962 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.696235636 seconds)
    (33/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.430191427 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.965774511 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421658912 seconds)
    (36/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.940941594 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.752501466 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.616620901 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.380787678 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.56289735 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.39481167 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.337274493 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.341685432 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.397016235 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.71047625 seconds)
    (46/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.512407431 seconds)
    (47/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.281938889 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.619241679 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.401501546 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.342997297 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.948902055 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562781042 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.036320624 seconds)
    (54/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.29130615 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.280195662 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830172399 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.268398651 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.670349921 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.349666913 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.328838685 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.011395959 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.366557486 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.24565705 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.294831844 seconds)
    (65/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.683676826 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.04015569 seconds)
    (67/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.390445658 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.369308125 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.257539299 seconds)
    (70/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.29669434 seconds)
    (71/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.267676558 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.285553214 seconds)
    (73/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.680427197 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.675083334 seconds)
    (75/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.985715213 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.266406956 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.379267896 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 5.239669553 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.281082047 seconds)
    (80/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.012432812 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.775443659 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.060324406 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.725618332 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.968464788 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.283381397 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.290977363 seconds)
    (87/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.457792046 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.282900087 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.324364533 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319803012 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.383921829 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.975959336 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.522791153 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.269144976 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.288029666 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.391916216 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.317578681 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.287341504 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.106677839 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.529638258 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.293465339 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.57108089 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.690265982 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.486258135 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.964466389 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.41896298 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.391020375 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.2826647 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.314567014 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883900847 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.772832567 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300983297 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.102527152 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.306350613 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.269900714 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.608162498 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.347230863 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.497383637 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.271425522 seconds)
    (120/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.513081285 seconds)
    (121/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.428814276 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.41385551 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.295669839 seconds)
    (124/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843663969 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.28660341 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.283602215 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.309004973 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.040496887 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.109500438 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323297244 seconds)
    (131/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.73407881 seconds)
    (132/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.023465787 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.272939961 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331074667 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.781123436 seconds)
    (136/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.797030327 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.305814958 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.402893641 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.555811539 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.565642315 seconds)
    (141/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.269175243 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.449171466 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.567126173 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.492073174 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.371084041 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.269907127 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.976177682 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.545698806 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.408140751 seconds)
    (150/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.582904553 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.304067084 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.325400313 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.733173519 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.254689685 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.403366382 seconds)
    (156/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.487320548 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.285233829 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.628481847 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.960871551 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.123230113 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.119248702 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.9735762 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311295119 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.490760541 seconds)
    (165/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.392542169 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.863861506 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.822301527 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.269769182 seconds)
    (169/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.497505827 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.385697836 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308310292 seconds)
    (172/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.293448461 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.285959754 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.056790153 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.286441036 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.517301698 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.436364259 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.682592279 seconds)
    (179/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.381068717 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.395338988 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.31353495 seconds)
    (182/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.383248974 seconds)
    (183/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.312316155 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.283661387 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.49417062 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.4794951 seconds)
    (187/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.465555957 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.288528791 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.284318983 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.311325006 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.313479692 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.77876449 seconds)
    (193/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.074521301 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.097684129 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.861009829 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.044759904 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.287455697 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41930944 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.867177685 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.329386132 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.30252284 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.373180428 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.314675452 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.499401917 seconds)
    (205/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.707535086 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.404930034 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.417752198 seconds)
    (208/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.788380542 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.275497859 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.34558247 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.875515337 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.912920813 seconds)
    (213/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.30741093 seconds)
    (214/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.370127047 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.351279978 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.429187691 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.670800498 seconds)
    (218/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.597225136 seconds)
    (219/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.845500714 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.457113405 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.500235848 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.877520074 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.826940884 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.270750786 seconds)
    (225/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.844120728 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.429075354 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.295689785 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.115294972 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.504487506 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.573786808 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298916453 seconds)
    (232/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.835498264 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.284202337 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.310788954 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.284201095 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.305887212 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.270140032 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.589407652 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.303779452 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 6.28607988 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.324701556 seconds)
    (242/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.343215561 seconds)
    (243/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.824365744 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.416328705 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.285527332 seconds)
    (246/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.403744759 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.523590995 seconds)
    (248/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.850543051 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.957224887 seconds)
    (250/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29363704 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.629623433 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.818597233 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.315763802 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.485165807 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.359192276 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.285636403 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.832086705 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.289624267 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.479387978 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.371627979 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.273815888 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.324520708 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.29044387 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.639818348 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.310962564 seconds)
    (266/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.410282355 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.393526516 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.689822244 seconds)
    (269/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.295459621 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.40294472 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.673879144 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.271400068 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.274773702 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.104874958 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.295893583 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.676165216 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.676093983 seconds)
    (278/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.613114711 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.271609559 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.322844932 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.368137218 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.519666211 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.289404701 seconds)
    (284/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.990187471 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.332360357 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.365966276 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.408669208 seconds)
    (288/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313339129 seconds)
    (289/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.71939009 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.400847211 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.286773308 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.32886976 seconds)
    (293/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.413004151 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.464822384 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.369770508 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.793408001 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.647425026 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.537792181 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.375019238 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.328758707 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.408019781 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.37258753 seconds)
    (303/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.369592443 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.48532827 seconds)
    (305/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.291807056 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.324651838 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.622406901 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.973079545 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.292990701 seconds)
  done (took 893.290788532 seconds)
done (took 894.509411682 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.319333433 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314896344 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.296980329 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.319724164 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.409897876 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.3270317 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.30900632 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.300207298 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.345691564 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.347653892 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.297183976 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.325435685 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.299757457 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.298698921 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.298094821 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313158969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193682476 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.298958511 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.315725679 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.309004794 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.316750312 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.298523627 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.34910822 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.327030636 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.303318537 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.302795583 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.301802022 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319082303 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.411092231 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.302515852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.303064494 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.311115259 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.192889097 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.298392166 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.294649437 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.319550931 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.311645924 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.309067714 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.303508546 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.33265918 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.544734693 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.299368619 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.301738458 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.301501603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30078866 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.305097088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302496233 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308338508 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313560943 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314194741 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.537898229 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.315605162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.303801667 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.301485732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.311703786 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.301227022 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.304131618 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316973733 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.321321259 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317086109 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.185954284 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.305821626 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.302436791 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.318516414 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.30886818 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.57801756 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29743567 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.305840367 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.550639695 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.307276725 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.579901682 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.310515561 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.303435962 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.317262622 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.33413041 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.196909341 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.295846519 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.30161086 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.309925715 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.301529716 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.311638461 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315112729 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.307110077 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.302834632 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316090156 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.331049615 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.313073707 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.304059422 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.312719031 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.321921226 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.310557664 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.314026059 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.306188882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.298496524 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.31256675 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.306888521 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.306704111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.306597167 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309348477 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.315572627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.552362329 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320545878 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.30015582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.30018041 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.304755989 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.317471257 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.553592856 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.303724618 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.325522206 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.351531927 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.306221229 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190478244 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.307232532 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319377158 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.313403554 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.306488981 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.299563637 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191174274 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.547005685 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.319302649 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.306288372 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.304002105 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.32077429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.307107008 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.301429018 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.21122612 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.309797388 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319508186 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.425900132 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.315345338 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.336852285 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.303376923 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.308394642 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.333784095 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320944214 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.336852602 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.308574999 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320590843 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.321164132 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301408796 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.316785396 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.316271234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.306033666 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.312516515 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.300902719 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.336667816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318419543 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317647753 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.326955678 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.426676629 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.303537261 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.197759494 seconds)
done (took 218.065737472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.36610997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.300305566 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.389757463 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304246235 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401809551 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.401533089 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.300759897 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.301241463 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.300412927 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.683499242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.301064817 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.302350351 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.298056375 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.302215471 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387523413 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.304067233 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.300820245 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.64612152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.303862926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.380370647 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.299787334 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.302169669 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.303968627 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.685270827 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.305632904 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.300479911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.374803587 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.303646568 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.649937369 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.297593656 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.299682852 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.650777062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.396006533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.32225034 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.315933071 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.311360879 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.402145145 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.320395713 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.387851211 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.386579761 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.392921264 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.343271445 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.306537157 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.30363984 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.30651747 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.306214297 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.303609177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.332107389 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.298507369 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30320771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.648664062 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.315217355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.304831379 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.305008002 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.303871914 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.335228531 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.303422609 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.306201278 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.404407011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304763174 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.370893394 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.69164604 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686823695 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.306025239 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.306656249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.304849587 seconds)
  done (took 146.525943365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374293537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.384020328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.414830481 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.30816196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.359461796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4174592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.307909542 seconds)
  done (took 10.805774666 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.313320011 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.307025706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357803066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357778663 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.306433138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456119942 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306976157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.319552677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.304265398 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.361210014 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.308058735 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307911387 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.313823151 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.306960764 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357293971 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.318656367 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423540125 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309969319 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.308606009 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.458462116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305683053 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.314697205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.361163998 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.320495613 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.309101431 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315123692 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.961172429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306740962 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305472994 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.308543452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306427292 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.347718163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308039185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.30233089 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306426002 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426657717 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.308684356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305612949 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.309480288 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.304803517 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.309359104 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.309189735 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.309678992 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.306874939 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.30955584 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334635782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.309412196 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.308953462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.310103266 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.309994918 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.360398257 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311005194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.30727654 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.307119703 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.365195375 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316172909 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.309516043 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.306506749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309798513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308414447 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461807557 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358464771 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.309490565 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357038548 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310200153 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310984755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.309968695 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310975992 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366445827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.310488658 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360145872 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.308276939 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.465151525 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335564878 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311427023 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.313377603 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313814826 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310427768 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.306284921 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317731424 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.308382249 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.313224902 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318355543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307838893 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308716306 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415510922 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443828419 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.308873565 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.325834213 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.319378724 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308850406 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.364751921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.312591427 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.3092165 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365730898 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.427317472 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.366401985 seconds)
  done (took 150.974122436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.31801949 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320749088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.313147418 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.328967567 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313043894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.31272852 seconds)
  done (took 9.152296159 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.315088742 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.313148196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.313324681 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.312335425 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.312204203 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.313824546 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.313185219 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315953289 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.315349231 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.313350533 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314189826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.316743107 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.315103778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.312346053 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.313119946 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.313795423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.313457484 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312001947 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313989045 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313481936 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.417991767 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.313153757 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313764018 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.316186981 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.317093722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313645508 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.322750775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.31348713 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313505683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.321219823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.316714658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314259176 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.315754432 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.319623514 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316789557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.316623912 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31689604 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.317477108 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312060841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.315786222 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.318479852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314689002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.314449913 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.31858044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.317662576 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.318213093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321102107 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.325146108 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.314872231 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.317253715 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318180863 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.315956159 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.316074944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.318121653 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32178109 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320789147 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.320737083 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.314663057 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.315282374 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.317295055 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.316553775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.316037844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318194448 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.31888809 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.314195697 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.31850608 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.319050746 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.318060505 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316193206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316153411 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.318274807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.315320452 seconds)
  done (took 97.113817256 seconds)
done (took 415.808304636 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.460157986 seconds)
  done (took 7.709775152 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.383624339 seconds)
  done (took 7.635942865 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.15887694 seconds)
  done (took 19.416251183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.313514962 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.328689738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.311172039 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.318104821 seconds)
  done (took 26.521826684 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.399093845 seconds)
  done (took 7.649562033 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.309581043 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.310477562 seconds)
  done (took 13.87184368 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.733359935 seconds)
  done (took 7.984710967 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.705132221 seconds)
  done (took 7.956528635 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324239956 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.344735629 seconds)
  done (took 14.187783802 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.296098474 seconds)
  done (took 7.546898109 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.923131571 seconds)
  done (took 8.17649003 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.31886543 seconds)
  done (took 7.573290932 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.323323603 seconds)
  done (took 7.577376905 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.384857897 seconds)
  done (took 8.637271494 seconds)
done (took 153.696180209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.311476584 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.312125844 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.312711458 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.312529812 seconds)
  done (took 26.501585454 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352548596 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.352511715 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.353722581 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.362777034 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.356334647 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351854155 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.344475423 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.344549983 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364092545 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.35616252 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.354575098 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.355539117 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353770208 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.34508623 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.355614911 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.355516433 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364297386 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.355023138 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.345423011 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.356765276 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321305634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.363856259 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.356810401 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.320715379 seconds)
  done (took 33.697120743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.520419439 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392514101 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.47451105 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.373829617 seconds)
  done (took 7.0149799 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.371507688 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374477654 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.384745648 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.424491473 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.470082119 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.384041114 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348285258 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342157473 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.32860811 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.373821281 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.454158983 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.390324321 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.456356187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.320729973 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.519766318 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.320341239 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321454633 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373982488 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.423941453 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.437585097 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.321404791 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372921907 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.377115066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.390756664 seconds)
  done (took 34.538310707 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.319599486 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328113231 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.32745573 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.320195262 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.320991552 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.321780196 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.328229627 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322326577 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.342195322 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.322452264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.320956333 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.320983138 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.319812591 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.320592303 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.321981598 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.334238858 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.334750619 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.321506387 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.324775175 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.328445678 seconds)
  done (took 27.757211892 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.31576646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.169498858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.667533053 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571894533 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.316446147 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.318382019 seconds)
  done (took 27.615791058 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.38444854 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.499608679 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.323465239 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.636236546 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.71825537 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.327173737 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.323904333 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.529855042 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.795276187 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.801109397 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375144026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.382719951 seconds)
  done (took 19.353917091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.325457582 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.320185586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.3321844 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.335292674 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.370843267 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327422615 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.329758975 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317639642 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.374964974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.375988637 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.326527851 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.373297528 seconds)
  done (took 37.368364642 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404834722 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362993683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.221167616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047783667 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.694324179 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530125494 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.065623612 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.730535194 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.323488967 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592130418 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967966595 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421276438 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573564416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321806465 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321480102 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.257923191 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545500252 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7685109 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3201774 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991410079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344746989 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322787849 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.052617248 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348753631 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530989695 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448022565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600895732 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320144876 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575722035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331469031 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330781884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319144659 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594144505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960001151 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413162003 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330422874 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.009988746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033931824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.324154484 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.998535982 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74709087 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323271184 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331156182 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320186339 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255251927 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320695681 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744140679 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.328036121 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.031507069 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321248859 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331435337 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415127166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.324059361 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135245698 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315961003 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321010266 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.31908052 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328188135 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894545108 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.426009899 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327251158 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.258148159 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.425705636 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998765377 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892864198 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.42502105 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.32574777 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325424553 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255914375 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.043919172 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34245358 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468904526 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343120645 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972188907 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96263888 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.989402787 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264692051 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834336752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330275369 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.260135226 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550839297 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322527327 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257409641 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.26341911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2560849 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980012487 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331802935 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.660360187 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.33127195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.740397409 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.33673322 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340054708 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346620966 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.546533966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.207868144 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324750052 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.740069903 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483231664 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345154552 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.742320461 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259269568 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.327158275 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576906085 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.534499054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.271870973 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509647258 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328639577 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.343029455 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324142527 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.337710482 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.849439685 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336690237 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.442687646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345271087 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324330646 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019512424 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332654952 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.428559592 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.98765022 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564453488 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.063542149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326937127 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407142337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334299371 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325350021 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.12294577 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841150918 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325308354 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.327494765 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338076272 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337785126 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.325808977 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274643739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.326720954 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028351777 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.328582196 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548355385 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335417032 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603605458 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260966954 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473089672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417703742 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.550271894 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.445017158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.326373948 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583143909 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337783476 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328978404 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340925682 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344828316 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424707911 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348666702 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.330249231 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.585459447 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330326622 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.329685675 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.501383652 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332135187 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334851833 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.33300061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14315257 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851591106 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309685639 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332806686 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216507851 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.3424249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391411162 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333089384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337947049 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.965784535 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.134434393 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.332815818 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.334904459 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553882506 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337908904 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.073987646 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411625524 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.508646533 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85687599 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341612873 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.26173252 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039270615 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.020991662 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32811299 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.262180631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328851293 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338346474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338862813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.550969927 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857755829 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33166265 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.003201014 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.338308265 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339994659 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334349195 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328887608 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.94281821 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455652492 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3428225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343197583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473673784 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.344037995 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262221495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.333570155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334297158 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330294104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329237519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362603245 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.029010684 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793242147 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587099343 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.05311243 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341904471 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.167435187 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.361159648 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.329369126 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.779649526 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348043843 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.332947002 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337953409 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.341862563 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.044817255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.985587481 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88450957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976406537 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79677644 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186639642 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.321407874 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318522223 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735875478 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25005202 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.872461798 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4859479 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.735931374 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260716157 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499127998 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.43648115 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009566057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328099276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54405075 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181804536 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.773015106 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340354889 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526241525 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350178094 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.323498389 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.247421248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.840892379 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532415981 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.783977803 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394737181 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741291042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.773208935 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330511709 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.31639842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.605673824 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474753863 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.026420893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.488188882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323662919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.017720707 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793981055 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323979894 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542562828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89137914 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319771431 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.502141585 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253585639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328861602 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327551087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.320477149 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.439545135 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.321206927 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569836912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328334232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250797416 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316492416 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802163621 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178488166 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324094552 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318593427 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01365284 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319966481 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579509682 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.323023784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.915550763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327506198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.252662529 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252670412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.011859245 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324329572 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292129725 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771414384 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.405061848 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297169106 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343563197 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164892773 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573565778 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333707175 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.856499396 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544876589 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.1058169 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342386451 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.419974784 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.81041328 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.318624794 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318493791 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.555653979 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.136715491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542875873 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.256728385 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.224899415 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317644326 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531656857 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319184439 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.034252627 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555004503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.030780155 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.337242211 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980968951 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345757418 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.038134068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246654368 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4239377 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326364289 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399137428 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329714737 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.330963505 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.330566491 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478201666 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043197508 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334732973 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.334312014 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414556452 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.497470464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.936946088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.323825107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864770583 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993996109 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857955326 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33362773 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320489599 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321043891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253882405 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469284899 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.546083031 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595003826 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449325721 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.463719397 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34281312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.818945741 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339404894 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535534199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596658201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.215613572 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329073999 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.335116552 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.322840931 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331583977 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53230152 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778216047 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842527242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440756843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327604931 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.741009392 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596306608 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321588244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322842633 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912430081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.325430452 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.637153541 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.32684787 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058549059 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47008142 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331594058 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960015236 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.332074789 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.481764723 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.096203887 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.03979972 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576830174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736176586 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335181789 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857738385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968887908 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586695881 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390307396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33363336 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.432783884 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470212468 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.333876288 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324388946 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325291314 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169956803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.033301226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.334766491 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864651827 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587223793 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.322150725 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.333358478 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346430528 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.334790134 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546468499 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991675564 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548179238 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335526464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328620859 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139654608 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862975844 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338112731 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259151684 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.327850274 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547164368 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.561578886 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346515638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.815474215 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.036033582 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845569287 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.571231385 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34704899 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338381468 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.975832969 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862382316 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.949803611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781245853 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.892062005 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334884103 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602110685 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.330962096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333465139 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603990018 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.330143116 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339510675 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337434296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.860222699 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033707603 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344055023 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066152276 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.263291422 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668574269 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95429694 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263011085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335233339 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.497816698 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327550205 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456244383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338001015 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.323743338 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338056065 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.085845187 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601337505 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.332368757 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.313014156 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.89329029 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329031704 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336489232 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54634105 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329643793 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.002050733 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.67742 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581758155 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338174352 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.316014969 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.330638834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327923794 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314498317 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52385971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551307194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849081274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.338244108 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338845207 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332567166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.543804372 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539862634 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.07258626 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352504983 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328234044 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344953861 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.241701528 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.829187306 seconds)
  done (took 1570.829612739 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357285727 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.356778733 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.353004577 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.32915038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.328988657 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38472492 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.412825817 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362877362 seconds)
  done (took 52.15453414 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.327521429 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.532963607 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.356594337 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.327239886 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.337359331 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.332967668 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.731043939 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.335460886 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.336879143 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.338126092 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.331257118 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.335878305 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.91585234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.337619164 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.327362401 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.330150312 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.336429299 seconds)
  done (took 65.13624634 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.327354804 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.528150026 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.391243725 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.336871784 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.961853024 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.336517378 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.449076671 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.354661426 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.320315272 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.327595732 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.974345818 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.35022923 seconds)
  done (took 82.927038508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.326405824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.326359392 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.326279103 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.325340585 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.326776395 seconds)
  done (took 7.891745168 seconds)
done (took 1994.039336389 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.574704641 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.960116172 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941014293 seconds)
  done (took 5.160966251 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.468805367 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.518413085 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.637813441 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.643826704 seconds)
  done (took 7.530314824 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.595682281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.692030783 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.50891113 seconds)
  done (took 6.058886126 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.61033282 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.327218038 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.39639077 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.321766286 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.3228457 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.324160754 seconds)
  done (took 20.231950983 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.326220687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.327913198 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.324622934 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.327811873 seconds)
  done (took 6.567822549 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.30609296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.058848207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.312534241 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.323180403 seconds)
  done (took 18.262012069 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.071105002 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.085146768 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.069178249 seconds)
  done (took 7.487830626 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.321513748 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.238928318 seconds)
  done (took 9.823714227 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.631286949 seconds)
  done (took 2.89461992 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.456295873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.58957866 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.274647549 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.217228987 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.29255862 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.77601643 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.788446743 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.415255956 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.202686665 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.263182071 seconds)
  done (took 26.539268634 seconds)
done (took 123.725782934 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.82734927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.569336419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.525013923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.794472157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.548353528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.525587974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.535510117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.76360709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.308177586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.29923071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.801473348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.54926476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.479426895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.323612077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.479526042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.5691663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.54592956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.86950487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.482927013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.679916828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.533134886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.438987197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.629075507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.455540268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.547859946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.479259516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.031987711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.325738837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.654349428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.039098814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479105268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.847365583 seconds)
  done (took 186.204289583 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.323526334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.327877528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.325683819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337251723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.324790627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.324655296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.337380272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.335458734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.324356875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.324787822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.32381258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.328500914 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.325023996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.327126594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.327350725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.32531567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.330385822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.325536091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.338105308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.324991997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.328536362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.342040253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.325482136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.342366796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.3261382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.327378714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.326678561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.326181723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.325644083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.349351084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.326107788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.338644165 seconds)
  done (took 203.813346022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.32909826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.326334404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.337893725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338477571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.326479961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.341321476 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.325645167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327717093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32775445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.325969961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.340942154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.327233936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.340010366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.326043159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.327630949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332491544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.326661143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.326358194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327129998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327818498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.327752663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.326081977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.326295772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.336599113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.340076828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.328327907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.328017091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330394783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326895205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.340323809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.329147223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.32697484 seconds)
  done (took 203.843676233 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.528312737 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.334775308 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.33496271 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.290483961 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334460196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.335527019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.327319362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.523679282 seconds)
  done (took 14.27848821 seconds)
done (took 609.403508577 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.476445897 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.202725528 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.521685223 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.355544048 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.008017294 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.355887858 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.357398956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.508693421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.2284744 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.512206941 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.495563496 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.352656923 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.630996273 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.354140831 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.589978411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.444348136 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.157748178 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.266882884 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.652132489 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.780288444 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.593595583 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.745192512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.507994398 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.231485387 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.632207259 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.743117616 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.958943169 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.155249778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.355891989 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.649589759 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.850775432 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.185639766 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.405113 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.390124039 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.443445438 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.425124371 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.174926934 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.387556339 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.525786964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.515791733 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.783717097 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.046816642 seconds)
  done (took 89.230604554 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.3261351 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.325986553 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.325107721 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.326016749 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.327226283 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.326050147 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.326125659 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.323942183 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.326593461 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.325780261 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.32513964 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.327222159 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.325849262 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.327026246 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.325245098 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.326354021 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.326956454 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.328787929 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.326249507 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.326156115 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.327974702 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.326698833 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.326922672 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.32643679 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.327027508 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.327659288 seconds)
  done (took 35.759616022 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.339023525 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.560036111 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.7298467 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.345995888 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.338833565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.343390149 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.408444806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.339861282 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.342717297 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.343056809 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.483037576 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.342367484 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.374613313 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.733531409 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.342112761 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.339533193 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.339119522 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340349409 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.567686395 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349387501 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.411678175 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.340904545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.408953266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.350807691 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.343456297 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.341725385 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.344650178 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.829660272 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.343740235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.484560049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.037652511 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.410279519 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.775197822 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.729889349 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038451319 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.345512064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.34122195 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.489991437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.342777389 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.341122858 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.408605768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.341359679 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.730428868 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.946762827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356471002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.342330551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.851431527 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.490685183 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.560484136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.350688175 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.753795346 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.346209353 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.34461616 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.344942261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.561296306 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.349466923 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.342854882 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.853087604 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.348464586 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.412595993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.343327312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.342966952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.576237169 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.344609391 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.574668995 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.345868032 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.353919367 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.345216425 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.732996442 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.346068365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.966418812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.358691914 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.344600295 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.487094828 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.573357192 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880531858 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.348034153 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.583719422 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.794909178 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.411621804 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.347073227 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.819275385 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.41575859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.349314961 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.347417365 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.346569552 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.345248309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.38796063 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.411426498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.90724405 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.961391582 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.869362639 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.41604271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.358152276 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.345698528 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.856756418 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.359660453 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.344672412 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.736806398 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.97167583 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359545281 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.353622194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.95364448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.361628502 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.416462961 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.35309203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.744557913 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.347865206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.392152789 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.346944571 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.353841615 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.350085581 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.415957018 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.350318061 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.346351332 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.947061655 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.509715156 seconds)
  done (took 175.523434201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.339712536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.340090169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.340204634 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.340311478 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.339287661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.346376459 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.339878347 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.341052517 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.347005381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.341061907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.341750217 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.342058254 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.342467757 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.346696142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.350156885 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.347415688 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.952965822 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.342103191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.341947462 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.340166372 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.119415059 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.341377154 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.342168876 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.340635713 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.340926677 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.341131455 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.357142474 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.344177566 seconds)
  done (took 152.271407001 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.348875526 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.852313544 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.34990976 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.465858303 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366500739 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.347062282 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.463633758 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.399392684 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.349783132 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.345853645 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.346266941 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.617523015 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.348896014 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.805994786 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.518005097 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.465493743 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.80545097 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.349117498 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.345988733 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.346207222 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.467401223 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.355791059 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.61765144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.852594673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.349419235 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.853935855 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.338812236 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.348633317 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.349318931 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.855783413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.347319496 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.618957114 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.417784356 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.401853 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.856702016 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.810956659 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.811864528 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.478474922 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.349290468 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.347816614 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.348251066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.33840771 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.856692552 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.350776147 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.349920909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.851941896 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.363784905 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.350852915 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.357800265 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.34873385 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.402168236 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.402213126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.623931548 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.863345287 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.418317172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.370417938 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.467504231 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.689741928 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.352436006 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.811911825 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.338927735 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.863617605 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.356794995 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.339850776 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.351147827 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.355488131 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.482935213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.467267213 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.812306593 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.352685892 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.817921516 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.488662494 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.350181787 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.350858537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.353705272 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.864744436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.819349766 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.486372606 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.472101815 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.524478539 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.341839485 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.351445473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.34075945 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.420256057 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.349994929 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.864258046 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.815941225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.352895212 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.351676787 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.352521679 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.35273038 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.510687042 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.86695561 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.422036303 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.810622824 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.640198603 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.628473382 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.355373439 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.404297927 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.353554637 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.62842924 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.355178171 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.402351644 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.746651664 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.628959812 seconds)
  done (took 159.171640493 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.570741321 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.449274569 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.433931435 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.458648986 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.846687215 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.900773615 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.427903711 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.471502205 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.451147392 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.576259315 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.417507615 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.44346861 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.520133866 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.420106187 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.992900254 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.412996726 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.43499864 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.46709975 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.453511725 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.312771537 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.951790594 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.618581542 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.50798661 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.269219809 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.437943344 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.068103274 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.87030091 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.837730322 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.505275741 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.518164023 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.82960097 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.410039793 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.22260214 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.967309791 seconds)
  done (took 63.766629429 seconds)
done (took 676.991590156 seconds)
SAVING RESULT...
DONE!
