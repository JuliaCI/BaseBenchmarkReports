cset: moving following pidspec: 1388
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.194985252 seconds)
loading group "string"... done (took 0.577880415 seconds)
loading group "linalg"... done (took 7.537135437 seconds)
loading group "parallel"... done (took 0.154496074 seconds)
loading group "find"... done (took 1.192557767 seconds)
loading group "tuple"... done (took 1.768497935 seconds)
loading group "dates"... done (took 1.259319742 seconds)
loading group "micro"... done (took 0.222287442 seconds)
loading group "io"... done (took 0.908416688 seconds)
loading group "scalar"... done (took 37.174561499 seconds)
loading group "sparse"... done (took 11.707982475 seconds)
loading group "broadcast"... done (took 0.939278695 seconds)
loading group "union"... done (took 12.122613367 seconds)
loading group "simd"... done (took 4.467097645 seconds)
loading group "random"... done (took 8.943522811 seconds)
loading group "problem"... done (took 1.83235499 seconds)
loading group "array"... done (took 20.364422074 seconds)
loading group "misc"... done (took 1.654742572 seconds)
loading group "sort"... done (took 3.196177594 seconds)
loading group "collection"... done (took 17.247703361 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518711551 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123777943 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132827874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118615584 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147574842 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117988424 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125824809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087036828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.865105981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146730743 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116159539 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.398232493 seconds)
done (took 5.393249561 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174519972 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084210319 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084784026 seconds)
  done (took 1.345382686 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068350439 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12656689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070017592 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069827773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069741065 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069705701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069650427 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069360707 seconds)
  done (took 1.722460806 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076236225 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072363756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068966649 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071084522 seconds)
  done (took 1.466932329 seconds)
done (took 5.970753504 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746770957 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214358017 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186932179 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.382121148 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127735194 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169436763 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634006947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318238252 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186715584 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077832026 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108583665 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33815919 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120946425 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647506914 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079048072 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091644474 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14040466 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430215255 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070224171 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085343791 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091780979 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1307976 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087026853 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076222662 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14688428 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070603572 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133469892 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083035137 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068783819 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21472488 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17523639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664920907 seconds)
  done (took 10.310622554 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09988468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100172765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070998818 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12793177 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100344861 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071638344 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077558551 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070509594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091283673 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131234247 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093203048 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107261466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068489106 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071505605 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085772779 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209889987 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082379271 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083879574 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073125396 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080720831 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110278514 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080419002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082542611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082236979 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131299257 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183314475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101482516 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100802065 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068888274 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084633534 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11754611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129301141 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068961294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070720569 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128138395 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097552294 seconds)
  done (took 4.752261859 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.957888873 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140400407 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089977078 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131882813 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06789209 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108797897 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068780497 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082605883 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.205004262 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.35431457 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57673578 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130273257 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1123017 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104692179 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070465472 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0708912 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069458946 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.441597327 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100260401 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108800334 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083725959 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073762103 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07166126 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068720754 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070826498 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06786457 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071369706 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116565395 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076815057 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309428281 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121371471 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071029843 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.90618714 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.162870825 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068240921 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.2345586 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1721029 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091436754 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137595854 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071782769 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068565112 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155473525 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067388365 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072305066 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092877705 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068647142 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088902568 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068645503 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105679275 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119749004 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068302476 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069013709 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1644366 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067624147 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080848267 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.099622811 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157274684 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068489553 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262232366 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091658542 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072814605 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068214058 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18200252 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125745193 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070805066 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069888637 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070750269 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071752265 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361600827 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069086893 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.112152417 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076174469 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081634129 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072507225 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072326562 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075435063 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075031283 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090521799 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068782081 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07607372 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069077505 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068979435 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069535962 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084774155 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.364847149 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.173676068 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070738985 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067804358 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092525953 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098314691 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069286223 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068267285 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101592439 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070712071 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06883808 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069406411 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084912073 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072056968 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115090336 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068917776 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.107994308 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101688697 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071420578 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066850636 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100709692 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082777779 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070454753 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.40541986 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068546903 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074796422 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068485472 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070522184 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068915112 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067102815 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080067355 seconds)
  done (took 21.886083859 seconds)
done (took 39.085610947 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244951061 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075459824 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076078538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076153567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076089589 seconds)
  done (took 1.815950076 seconds)
done (took 3.073144434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119873935 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098144491 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067172498 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09700663 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070396429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100775911 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099684598 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.07887544 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099269013 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067854353 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09759115 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067531302 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067541153 seconds)
  done (took 2.401994961 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085015305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08650474 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072802116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085094634 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066619472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085095721 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084113488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093308564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084491195 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075261077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067098495 seconds)
  done (took 2.135853245 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084382963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08639284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071977655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084428679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066247075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084206404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083784427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087773256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084364521 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076374265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067086081 seconds)
  done (took 2.123169308 seconds)
done (took 7.90911986 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079392944 seconds)
  done (took 1.315558746 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.527968193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.681459343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082471881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1071045 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184627139 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11363099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.247588953 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087530718 seconds)
  done (took 8.439208514 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090271132 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072110985 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083286069 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071834712 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073715827 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071548208 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074448427 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071855142 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070999163 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074660576 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073531838 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07165256 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072917605 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07431043 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074239773 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070927482 seconds)
  done (took 2.508364916 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093006373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09248529 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075607169 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076869629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074209369 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073889814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075474028 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07599574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073120056 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074249495 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077098732 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075305729 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073963623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066943284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075935446 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077876471 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072869511 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075767659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07682589 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077256058 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077126936 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06684056 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073544874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076093939 seconds)
  done (took 3.168075794 seconds)
done (took 16.679082996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105462872 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069970163 seconds)
  done (took 1.418209832 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082266088 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083106273 seconds)
  done (took 1.417949674 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082583779 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067795021 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09058723 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079013295 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0682688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067636252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088310532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068254342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068159515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068131563 seconds)
  done (took 2.002351395 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069787622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077538395 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072202667 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082268307 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075231502 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066703109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073280545 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070124054 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077690153 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065173204 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073397505 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084288965 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072942174 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086150565 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073593549 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070515507 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072954353 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069903712 seconds)
  done (took 2.588937878 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067774042 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068435887 seconds)
  done (took 1.393149385 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068528792 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065985305 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068872082 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069310097 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065584166 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064956195 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066358522 seconds)
  done (took 1.722826178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357149035 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11787964 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300762937 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0741705 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083267832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251924239 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068650646 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074051694 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073710186 seconds)
  done (took 2.699064979 seconds)
done (took 14.505735778 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081621105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087822853 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096542004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368223897 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093426603 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069026691 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115721301 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177786206 seconds)
done (took 2.359396786 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206652317 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.653064964 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407146159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202480058 seconds)
  done (took 2.524286752 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329697061 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089530739 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063618801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071657277 seconds)
  done (took 1.828108898 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068696746 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071561477 seconds)
  done (took 1.407451058 seconds)
done (took 7.2334348 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068619386 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06925745 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066079871 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085227411 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068466953 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065892945 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066133588 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066565166 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069051513 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068778933 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06883243 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068250408 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068795846 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068549301 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065804037 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066081298 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069177622 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.179875996 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066508042 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068240749 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066245894 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06828592 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066176595 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066147189 seconds)
  done (took 3.04621541 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085010438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068487986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073794239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072795457 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071350811 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073012398 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073588521 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068260873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073266937 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071033269 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071167545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071060683 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070467182 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071567441 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070434433 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070868757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073456765 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068303846 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070840765 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071204305 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073449719 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068238384 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07212885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073494178 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071153642 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072035059 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070765479 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068762518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073919614 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071181146 seconds)
  done (took 3.431773555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072486942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065912735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066651625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07226634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066286656 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066377015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065515964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066008 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066907838 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066095422 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066952819 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065820258 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065700645 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066365559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066505557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069417328 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081382479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066033061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065778675 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067043328 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069563641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068319627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066053479 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065763686 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06595123 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065777854 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066592435 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066043641 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066755789 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066339892 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069222014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06966861 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065938566 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07350579 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07013041 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065816915 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070569027 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065725688 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066977153 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065517061 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065720855 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066047684 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065846085 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072849048 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066027787 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067121085 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066033868 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066745336 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066636764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068422196 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066043136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066431408 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067734472 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067626918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070659515 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065551274 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066798289 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06661239 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066821176 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06648627 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065883716 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065732264 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068588947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067082481 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081249932 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072860346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066019372 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067464432 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067122509 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068771461 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067549455 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080302796 seconds)
  done (took 6.163744545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089635407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088075389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068266773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067737072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063822404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067146149 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071919572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066816061 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068031029 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084177433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067084616 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067820803 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067999721 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070610208 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066970026 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068001217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074576264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064922751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067312156 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069997375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066963246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071821663 seconds)
  done (took 2.850791449 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147267041 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072185464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105806227 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077368049 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072405194 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076887722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07207082 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072871207 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072046088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070697409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070163922 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072604526 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072734124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070069418 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070013955 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069919683 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072309089 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069908457 seconds)
  done (took 2.691690426 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077850131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068185167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08858371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068685323 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068185933 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070549527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072708173 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07606886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071027375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068159811 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076162307 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070768921 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070821775 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068517937 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070502935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068376152 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071097787 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069197839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075958189 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072454682 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072826161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076876164 seconds)
  done (took 2.88031586 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081262427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070014782 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082153447 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069750318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064117311 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066585428 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072196818 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068208989 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072078582 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070100399 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068050938 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066722562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07073706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068509094 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070601894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067927643 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070743963 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068231077 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070029378 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064471361 seconds)
  done (took 2.690352116 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087016813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069529066 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070132185 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076646266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070159927 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069621749 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076689859 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069759363 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070153023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089637278 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069786002 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070122676 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076488436 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077276689 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070049152 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07655289 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076584599 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076363884 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069911696 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070033402 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090464415 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070977088 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076837117 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070091859 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070127025 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070106255 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069996441 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074254945 seconds)
  done (took 3.364728785 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069377241 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068299327 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06638679 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066504283 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065987452 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065738599 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066057988 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066068811 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068247674 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066192055 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06837063 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068187172 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068679401 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068735787 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068577121 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06850928 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068578008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066734527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067135229 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066238491 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06843915 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06850056 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068559142 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066477355 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066291533 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068859167 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066737179 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066504198 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0689049 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066280762 seconds)
  done (took 3.319375811 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076550267 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074956107 seconds)
  done (took 1.446010245 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065090778 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082034753 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065633259 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0725114 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071161887 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06939234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075600599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071943571 seconds)
  done (took 1.863572766 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083272982 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078360332 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069160263 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078378985 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077782029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08429499 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134583006 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069249663 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074714654 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067224449 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081080997 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068372958 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075071741 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069193956 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07426332 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075557751 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066406981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073084403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06990145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067123196 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069374223 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076938157 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071732448 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064591403 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070325917 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090224659 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079645696 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06792829 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072189548 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075920797 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07421235 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063190257 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068129191 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068587439 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066869038 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078152343 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082367157 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071368978 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07721272 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069258776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076787574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064469987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073131382 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075789897 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079167339 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068986278 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069843022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064205461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067185193 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071690731 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064051366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069114422 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064078171 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07549603 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072894166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078870156 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068328846 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070234862 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071667965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071321418 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075124777 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070978538 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072115309 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068665804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079030879 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073712827 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076746228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064260277 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063091134 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066990906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078487022 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091294418 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074358694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068721967 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069266638 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067460475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071951784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069347232 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073717224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075150479 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067948307 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073501963 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075714189 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069413507 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072071997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075359449 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067006299 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071000922 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067332487 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083816067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067199135 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068920177 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06672091 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078493585 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072002645 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068011834 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066505361 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07537177 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063064863 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068275742 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068681559 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069264649 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077916158 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071565936 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071619525 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076245815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074741854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068593148 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070414154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.192516667 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069735674 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068960282 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076588052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063787505 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07189732 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069890428 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068628644 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077455647 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067089479 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068443489 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076634464 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074320108 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067976379 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065573551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072238768 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06790236 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070825738 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076551188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067473257 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063834674 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063831534 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071965357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06780638 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072530841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072404096 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071860579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063548926 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067795878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073328315 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076902523 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068837551 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06968141 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074453996 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069926092 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067509938 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075101536 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071289855 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068233519 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074089544 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069608579 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063938998 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070233749 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071457369 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067275141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072343036 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071208472 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071113647 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06863021 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067302255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074280698 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069376334 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068393873 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069369679 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067670477 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079071684 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070823877 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064290957 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06605153 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075635385 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067239415 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068033553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068192631 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07121722 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069279458 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067047053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06858881 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071054803 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076708451 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07251856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069191295 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074461504 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080927355 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068134822 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071339231 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068209216 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069745451 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069338644 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077593017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074710939 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072962729 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071743205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06606376 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074295941 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076270922 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068736861 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067196817 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068590897 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07224186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074570183 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072803171 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069314864 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067464837 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071112575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071696742 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071116692 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067775857 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068322433 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073340594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067094545 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073570798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069442717 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078330844 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071387444 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063614813 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070704904 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066706661 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074110197 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063116632 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066329132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067934031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068218155 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067019429 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.200488205 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064563039 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076626127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076928688 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070640628 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069065932 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068424792 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077276762 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070616572 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072223278 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073244225 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074461781 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079059494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068520484 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072172069 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082243446 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068359706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063502805 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074351011 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067708857 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067537117 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067635963 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067476083 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071960566 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075494212 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075294195 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063469313 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07143024 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066899681 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06894965 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064333185 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07315708 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072058645 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069716902 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075673687 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069512136 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068999318 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072201892 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067826889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069019595 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069103772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0718361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068829755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07030234 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068374142 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071797088 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068133855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066586808 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070859412 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069464922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069596076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07361717 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068264701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069160682 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071518037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068994936 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069950207 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069811665 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06904625 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072370313 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0699788 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07003121 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07198772 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064316198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07598942 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068189377 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076431995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069363035 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066134342 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074824895 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072177426 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073550254 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069555513 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069605865 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070974175 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068448724 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071901862 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076714505 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067474706 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079625897 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07590391 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070115159 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072296211 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069640523 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070741155 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068373051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07068981 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069154234 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069825246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068431274 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073652433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071219338 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069815544 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070604868 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06927192 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069548968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069788906 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063396912 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068448035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069243352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068363554 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077438493 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068650919 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068641387 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067454958 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06893482 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06764201 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065515076 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07442019 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075827802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068791575 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073935197 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067841214 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069375383 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077960119 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.195624559 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067938376 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06821983 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067916182 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076432498 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069439039 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07884484 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069795576 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068999895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066349067 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068968944 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067357962 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063923298 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067012941 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072716228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068358471 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06762074 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06935589 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071524761 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069405718 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077804551 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068367036 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07028427 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068562191 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06642194 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068593525 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068696748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071523763 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069226633 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067172508 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0666789 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068222334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070345436 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070921904 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068189159 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070279505 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075906391 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068393071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071163074 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070773517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063890472 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072143562 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068303315 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067900398 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068548465 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072805343 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07528704 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069137296 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077486623 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06803406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069808157 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068957168 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06730981 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068317028 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068498642 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068150454 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068974402 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069838755 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076508163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066943005 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072441671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069207738 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069927648 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075195789 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069113395 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071980321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073739722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070302001 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070802893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077327474 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072441972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072360295 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069612283 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070492148 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074834494 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068688904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076163777 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069585969 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069175935 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070759824 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067546877 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068413626 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068397241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067600387 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075151713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069105208 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068309236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068264257 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067033182 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070188119 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071033962 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076908881 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071161027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072086039 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06458703 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066528599 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069931944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067698945 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071045051 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071306325 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074586262 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071064187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070077816 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067817774 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077883727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074238508 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072929996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067145824 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073256828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068867815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070733127 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070052387 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068913049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069061363 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071544291 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069728325 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067980759 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206861968 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073216812 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069746436 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070820741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070577394 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069881641 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064686115 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069617907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071210329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073606148 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071943189 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068695749 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079239308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067330279 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069490315 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071995977 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068018677 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073961795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064336288 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070882191 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069073356 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068968236 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064158463 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06857806 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06812219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071494463 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068998947 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063914586 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078987721 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077924103 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072006113 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067778253 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067836614 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064302988 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063978106 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068898201 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069465608 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070665187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078599294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06816341 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068208718 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063737491 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068328208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071982543 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071983524 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065958261 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064116936 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068948521 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07198894 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074056779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06795662 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068547751 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0723659 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071328094 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06715284 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071275657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066789161 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072617433 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08069013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069128119 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069819349 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075403625 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076337806 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069047002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064192771 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069437824 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072471227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069879868 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069521201 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069861601 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083412348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071736784 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068726927 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067407884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072370853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071193644 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076976885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06973766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069341978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073492797 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070864755 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075955943 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072380193 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076600587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072327803 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072318345 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068320808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069686081 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067711986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06840112 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069553948 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069676048 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073170156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075190558 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069143966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079564062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077671033 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070994777 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065574181 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067945252 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068793142 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064191553 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068660874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067128365 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067242036 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066730907 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067829558 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070294733 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07326426 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070134993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068444138 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068389575 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062805749 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070959325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069942722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.201610889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066685384 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068738678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069446513 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073259132 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071305355 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067653597 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071420617 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071445872 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071232679 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06418283 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075764887 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067846064 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070710179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068810183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068666464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069194675 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072328978 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072466172 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069662058 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070924895 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072552988 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070496358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066161496 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066571207 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073551755 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066471279 seconds)
  done (took 44.158294433 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101106482 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065629048 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064813574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064312771 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07455336 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065111197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06441325 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065832562 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065620634 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067548362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064639698 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064484612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072810474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078913758 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07471693 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0684795 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064774592 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065730548 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064551289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065598575 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072065881 seconds)
  done (took 2.826399312 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074396443 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079095844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076497509 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083610654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072718083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072045357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07693869 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071794238 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079882207 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073874874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079880345 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072010773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07441359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074047661 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07378903 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072251091 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080008366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073263465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072405073 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076790446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072356271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076502726 seconds)
  done (took 3.019980749 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068890673 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067839736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069747333 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063743517 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067681568 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063505119 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070725677 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06645498 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070853674 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067897518 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068079305 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067720038 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070033697 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063747493 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068922699 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067011585 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106459462 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070764382 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068858937 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068650678 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064159326 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070209228 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064554484 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064621429 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067944461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071177988 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068909088 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067033969 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068646097 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067720225 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06814293 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066845175 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06991857 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069137083 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067739831 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068121578 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068026585 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071078996 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064280932 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06650188 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069167335 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064619793 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068727536 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069932393 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066905054 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06681588 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071060401 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068192197 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063842187 seconds)
  done (took 4.725387162 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07919734 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110347359 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070260784 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089739505 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081069644 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074109905 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07229096 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091017675 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066065583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066469747 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082311905 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080273855 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069025267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072170435 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072173456 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068485478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069193655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067176672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071783847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067519195 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071058852 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074793673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081826685 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079442995 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07179016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067226488 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06756738 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072553832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0791405 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072177125 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07222216 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073013955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082107035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072777246 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067708497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069943967 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082810205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06931792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070205293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066079723 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069898472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071986051 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075026338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083193008 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068013009 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073694005 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067826174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065873901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080017624 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070310427 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074740755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080544099 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071615456 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068032805 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071980578 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081541163 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067893752 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06673817 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070945974 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079046917 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06599107 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072042307 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079975365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069534033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07403234 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081026918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073100165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071105109 seconds)
  done (took 6.526045659 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077340925 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096743364 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083231483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083808702 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07786907 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077728388 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077430654 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077347946 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077203708 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081354532 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078344108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116242552 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073365574 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079670198 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086355369 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07755412 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077793819 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077878155 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077756903 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077831053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077569072 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083731888 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07795508 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083934213 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080815354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073367756 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07745947 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077551935 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084810628 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077485175 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081040164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078148981 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078678165 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084004997 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08062792 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077191951 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068111568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076846228 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078349861 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077411124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073659805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084207836 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076916078 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073259937 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077560949 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077259477 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084424525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080863276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079863507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081786947 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077483929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084080607 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077542041 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077651554 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084552358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086566899 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083855834 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084141535 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078014246 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084182388 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084071847 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086594336 seconds)
  done (took 6.381218306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083118737 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075809914 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082969331 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064641388 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069546875 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074287094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067391183 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067797885 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075585555 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075814017 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07834567 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074941279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076846775 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077475701 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073932705 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077153631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074071409 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07447347 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076234747 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074391307 seconds)
  done (took 2.889817681 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076624545 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084514815 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0691848 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073440825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072034028 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07375329 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071854492 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072082657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085846542 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071627224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077799541 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077413027 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068970829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073630182 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077635254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073624463 seconds)
  done (took 2.581604994 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084569499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074623013 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08040382 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068050018 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068842507 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065128084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067864379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064379953 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064962719 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079618167 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068782765 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078201585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067970721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06694889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065361635 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073361832 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06512016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065808784 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067836961 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079531588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071649343 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066614624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071681545 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06804874 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070502415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072015336 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066971997 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068342947 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065994267 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068893948 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07155273 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071550267 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065545451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066374636 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067645774 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065659992 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06855881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068386761 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073396952 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068236629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067241324 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070025932 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068318631 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069383779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064843553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06849289 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064948363 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070414565 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065996086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070557711 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068225668 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070845168 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069258142 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075219212 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071075362 seconds)
  done (took 5.228754541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081146044 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071467878 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0642037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066170325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071404915 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069337758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071544223 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069371731 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069684895 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066930204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069925336 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071629455 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069791987 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071722766 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069633931 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071662827 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064137107 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069003237 seconds)
  done (took 2.669457149 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073163366 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068331406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07492992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068556438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068669869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070847379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064407268 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066894532 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067679948 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06849096 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070941117 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067121374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070663694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068818032 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068755629 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07121409 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067281662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06853503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065090063 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071076751 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067184776 seconds)
  done (took 2.917424443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093882998 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084290886 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138978474 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080315029 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.0876002 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074338534 seconds)
  done (took 1.96179599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093293401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101310364 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068552398 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071775949 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077530081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07294359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072009012 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072610767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079916779 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077489531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072498588 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082789254 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079165064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07999956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077435017 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077552688 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072536618 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072425692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068669033 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084304576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072517869 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080155686 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072543815 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072284065 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072529311 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078982749 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079556288 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077340883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072152047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080338619 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077606219 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072523454 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079996739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077935966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07196117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079918219 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072960621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084184322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077165634 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079313959 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071046756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077656577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079782752 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07613683 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079416069 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072370911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075993974 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072842527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07258449 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085947145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077796925 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079164943 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077996383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080560956 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079775319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08641477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077936406 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079121727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07759144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077749319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078864813 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077966575 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079303896 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077364661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077579746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078972275 seconds)
  done (took 6.520592362 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104264583 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069258376 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07248917 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077414953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07878573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073068633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072531923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072519626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072803512 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069355455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108969478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07248786 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079306772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079155513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072328329 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072735311 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072372153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079360525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069718797 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086654876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072307917 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079362901 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079072398 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079037195 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077375215 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077743905 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072629643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072452895 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072244207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072309041 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076392662 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073110921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079480444 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069443863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078912791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072535065 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072431226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076072756 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072913295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077315444 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078801245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084293505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072273373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072326909 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077304806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072251285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072431008 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069231635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072234124 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06932065 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07724492 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077436703 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077746309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079059506 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072663721 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072478161 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072674068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072560661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072812885 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077423952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079206885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072377346 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086284835 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072642468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072789483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079302572 seconds)
  done (took 6.441666818 seconds)
done (took 133.865161545 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195272414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172747793 seconds)
  done (took 1.757520848 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071092771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098297884 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077900148 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130053611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068594161 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102395357 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102656084 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078984478 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068639721 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068479031 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068447878 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071151173 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133765736 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068680237 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0685018 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070976391 seconds)
  done (took 2.757758351 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098753444 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15685576 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102432 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067973758 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09836223 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074137958 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067827765 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0792391 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07289409 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068314333 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074365103 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072344784 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067624082 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072559347 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072994924 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074291525 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067749734 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074647177 seconds)
  done (took 2.877781913 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099197022 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091705253 seconds)
  done (took 1.609359704 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151371601 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135013063 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200985493 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331713368 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156324638 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146769748 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142242438 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140488925 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114005968 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137181756 seconds)
  done (took 3.06968102 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099650779 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148920228 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26593229 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115593465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075025211 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09352652 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117850921 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081160073 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08226083 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081707224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081148895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078211023 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099971494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07582536 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07612766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077951887 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103390218 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075308248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076898477 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07757936 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101378647 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069149036 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075162417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075306353 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07877257 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078604655 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068821653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068581948 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077426063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076903023 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078000043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092451739 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07892838 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104345999 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073568353 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105397608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078983683 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075149979 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077091051 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074968433 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079618833 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080061676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075334414 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078084143 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069269432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078922311 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068795575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06887528 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079024649 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069625303 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079301814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078690237 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104530922 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069799543 seconds)
  done (took 6.116988128 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108368905 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107817885 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072278719 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113308716 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104765729 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072162839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106178319 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099195836 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108773377 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072497255 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070691981 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072239669 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081591168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082721974 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11689155 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108958486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074335531 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071635592 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108577465 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108627025 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071836265 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102288901 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097957124 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108737493 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069725511 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072218535 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071286562 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072058919 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078014252 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079672939 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071224237 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08048102 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085270232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079196695 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069737216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071083743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071580319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080175308 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080669137 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080106416 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078862212 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069942379 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070985568 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072141139 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071470153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070132971 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079900892 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080748944 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07954707 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071223252 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072232443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071095521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071846448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080484237 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078296413 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080959263 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080732375 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071205798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071060366 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073256176 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081093132 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080512797 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080131563 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07177037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081102665 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073795333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081502184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084425365 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07118382 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072010612 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071101641 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070586722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071728733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078422977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078620929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072173126 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070614475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070725715 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080762855 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079347085 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070472012 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078313365 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069749427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07062905 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071847517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071706364 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077678921 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079622988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071909212 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070398239 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070019479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070144498 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069295042 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077324648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0794045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078393488 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077646584 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070538095 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07769884 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211761202 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073107827 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080661313 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072084256 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072786199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07153482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079416759 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078628729 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080440619 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071038817 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070564799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078890553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08225901 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070837223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078339259 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080617255 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079414323 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069911631 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082354874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070908936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080810905 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070694569 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080792252 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070715326 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079375336 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070657249 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069591657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070481742 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079766459 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071675705 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070303157 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071369939 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070398556 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079435471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082013803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071947229 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07923511 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078666966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072388339 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078874543 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070852073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080227501 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070716669 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071816929 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070266808 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081802798 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071277991 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071137573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070643843 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081187796 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071278821 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081335118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078141336 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069977771 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08194756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081075409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078527398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080898851 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071900964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070721853 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070672743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070634379 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078444339 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080032968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071668374 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070587313 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078255951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080872405 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070210764 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07902971 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079231004 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079072975 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071129892 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070675458 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081705353 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080856447 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079300445 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079168982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079025863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070917319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078877931 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078916421 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070501554 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084090973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070976776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083155705 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078946181 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077031895 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079053769 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080080282 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08036005 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080466168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082969636 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069663358 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069980658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078085358 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069732441 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069677727 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076919461 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07099947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070610442 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.217635454 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071415793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081459768 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070137248 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079601472 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070336183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072300922 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083996292 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070787836 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071935842 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07937529 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073069428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078804768 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080967147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078664953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071048499 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071556034 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080016155 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080570909 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071110768 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070516782 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072323604 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078757024 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078319398 seconds)
  done (took 19.058872272 seconds)
done (took 38.675458215 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191985911 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14399602 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156991294 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111327242 seconds)
  done (took 2.108619431 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111301774 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097229077 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090427676 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067377005 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096896088 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067999104 seconds)
  done (took 1.981836987 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2688171 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185598263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169262222 seconds)
  done (took 2.072030814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190825005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.17790546 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420709286 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256519319 seconds)
  done (took 2.596651951 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136816011 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086100126 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069769071 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085138913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12761571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153662868 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097218908 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121236562 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080798865 seconds)
  done (took 2.456021957 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141576391 seconds)
done (took 12.807515121 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.25736178 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104860826 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.172892039 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093325508 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101200005 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.197566375 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.207225154 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072250463 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070708059 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142646223 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.200418029 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.233064435 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093484133 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171727815 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103509598 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078435403 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074789938 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.160157954 seconds)
    (19/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095409283 seconds)
    (20/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.15770113 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080530525 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076954827 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088942109 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076138861 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170867239 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144843052 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123601454 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13745709 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125271618 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191309065 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102209804 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.157834828 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084373533 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079549341 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.301271631 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091934155 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17508582 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071107159 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108252715 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190027499 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093327181 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.088267753 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089242683 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196506943 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076272134 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076441713 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069123765 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088879365 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066702105 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055445659 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189773657 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.142733823 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.14506512 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076280317 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181501402 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094070738 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055498641 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170829755 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077588761 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.140894375 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.068978161 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068131675 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074079013 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074591202 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091347226 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077513036 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091873879 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067852478 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075751167 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087556435 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066454132 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110448445 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055326448 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154677392 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087157103 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080332599 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135652089 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088065566 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079632133 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087569613 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112283651 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07744089 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.303836001 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056602394 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186615135 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093319363 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080134977 seconds)
    (88/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.159471577 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.198929552 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121102461 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075679128 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074709254 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17069026 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176195731 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088382932 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076051457 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055180831 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177689583 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104979948 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139362619 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099154405 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057332873 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068155812 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074976153 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 0.128998521 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079961142 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094581836 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073470158 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108273468 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.152485055 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075675738 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079408163 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067862379 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054279052 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074073053 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068350703 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.112066815 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069190916 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147919443 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054772036 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089481703 seconds)
    (122/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08163963 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071697314 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05795542 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075005019 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189833594 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184603346 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074405078 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076582513 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116612935 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093505722 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074265661 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159254027 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077565501 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087702787 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067821893 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.175790339 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075380354 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05443427 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069218495 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067337416 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191743172 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077122645 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077381339 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077859117 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06710703 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054253595 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065938308 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074932306 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075412947 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069189249 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.11129324 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072915809 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074658112 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10791045 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090759104 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054328994 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089201401 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054510628 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075996254 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080986312 seconds)
    (162/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11035256 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134538721 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176264015 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070959478 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.189217658 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083210385 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056486072 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076095987 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06448137 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067063967 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078381102 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188828287 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089255657 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076065827 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054265695 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067700318 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093953173 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054888451 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152923905 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054307025 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068022778 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077579275 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119031055 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093014984 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.25742414 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091313169 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145157064 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0730189 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070308517 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18961715 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077796492 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057388184 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131303747 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157099873 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075749205 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055126386 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07501621 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068654906 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055897289 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054655568 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078065407 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08034852 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070921497 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074038755 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065753987 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091861873 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168412341 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055824495 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054563296 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054114434 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054320547 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156856537 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054615856 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054250657 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068534164 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069755062 seconds)
    (218/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154800397 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068743563 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076383725 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074370082 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069109723 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067684315 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054550507 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07471397 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091054385 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055251166 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07044913 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068440633 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067746414 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077588502 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118303254 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067899675 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06953486 seconds)
    (235/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077046157 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079935837 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07575652 seconds)
    (238/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055211702 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093563574 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068417734 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137566337 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055949526 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070500243 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153253323 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075751399 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08989368 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054474472 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09787117 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070340368 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056779932 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067916276 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068629962 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055980563 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074259732 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055539019 seconds)
    (256/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074785019 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067005725 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090770633 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070032818 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097367882 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068149992 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075644853 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05447672 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055031983 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094320735 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076248287 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054142303 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099807576 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067287593 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0544254 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076313006 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068614263 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088637321 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067956284 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055911868 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073565078 seconds)
    (277/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111212977 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074108678 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 0.144349255 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067850004 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068975783 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054223382 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07608093 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056055283 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066573019 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068408795 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069323494 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091789018 seconds)
    (289/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054552314 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05408935 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086307239 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073652296 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054030639 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067319251 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066061098 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074520825 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06374117 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115779897 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053546125 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054200891 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054759461 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073457366 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072361608 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053687043 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093385618 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 0.128054976 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217582827 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070867933 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.122355671 seconds)
  done (took 31.412422847 seconds)
done (took 32.874952516 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083852634 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093369172 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077359205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093997763 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08268441 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077681159 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075229202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08032107 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082629658 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083713892 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0809008 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058308727 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076941193 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076872864 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077240897 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092144226 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081540131 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076207972 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075877463 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067594537 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076371087 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068641982 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070223348 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05787076 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080686652 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074606943 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076786711 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076733143 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068347214 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068503624 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072294489 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076406428 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068102105 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082204364 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075831236 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075952883 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077466975 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079218321 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069868746 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068604124 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077329871 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068345456 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075708799 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076738016 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074902793 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073651268 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076040737 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079534325 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092013782 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07023179 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07747376 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078194718 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079490343 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075515241 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072685443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075903227 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073352238 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092410315 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076590948 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070314508 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076956347 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076309069 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073688806 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076491504 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075666788 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077966408 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079089705 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074066419 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077401146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074464633 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068107067 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075974491 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071910448 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068449121 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07888181 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082694199 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067364811 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074370374 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075713928 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07621329 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067690423 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069992374 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070000232 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07498535 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07059479 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057463815 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07292536 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075076826 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067592602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076171966 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074797687 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075370526 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069637037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079476299 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068071647 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073600963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06861536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068514473 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070058055 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07296438 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068698182 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070514426 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078171273 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069102011 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074956587 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080372547 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067589944 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074998253 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067054923 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066935998 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080997103 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077051382 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067722672 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070273763 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067426348 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075291963 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066683844 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067130202 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067623214 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067245114 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073908453 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067565044 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069001643 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.21344703 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082750422 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068969313 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072540426 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070738751 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068554984 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074335867 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068409133 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068395259 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069980748 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064766525 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070623267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068790544 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075699575 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07055508 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075710818 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069733317 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07632402 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073216645 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.0744565 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073774741 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067454369 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06233773 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070098108 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07040788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070008428 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068687586 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069579771 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068047478 seconds)
done (took 12.894236902 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069145899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131398854 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094795783 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09410631 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08480764 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06936478 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076721584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096191235 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06988359 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098342647 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088069498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086416802 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110266485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06756778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06899069 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072708725 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069970791 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081805962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09729693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087421252 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111701869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068024237 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092130679 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089203861 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087984014 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092883953 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069561716 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07237814 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071993691 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100843647 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088703346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072055127 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070564906 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096083892 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092230151 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083457786 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069301194 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083724242 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069304847 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069225568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070461674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096826314 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080917666 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081427154 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072009404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.0783707 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070213802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083540232 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088925134 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07983007 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085782757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098885395 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070905664 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084210022 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067438875 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08591042 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078097417 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071424637 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069065096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076202989 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068868248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071974325 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081701806 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081177554 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072594403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084559508 seconds)
  done (took 6.932161366 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085025097 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092833982 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084108012 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087256971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068670906 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069313928 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068652548 seconds)
  done (took 2.115108043 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069279879 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088367018 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089176885 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089116031 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082808188 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088147086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077478673 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068973595 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089335063 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070003386 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088711299 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098796819 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072387586 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075950483 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090190424 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069688475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090577387 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069096532 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072064657 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090576321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071571626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097978853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072681381 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069615568 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082613666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06995367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112866387 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072972425 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070862152 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072389295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067412977 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106491919 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081593041 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076748098 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069544603 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083482728 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082700255 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068133031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084925935 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077512038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082545155 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070141575 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070545732 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067334417 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073359934 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079600898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070726834 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070537643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071700863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087931827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070481751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081443273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071483348 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074131805 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071045387 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075370126 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078786467 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070105758 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0870091 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071048488 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083942816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083426031 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081926661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083947171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071501692 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081988061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082217129 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07204015 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071043915 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072976886 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083499365 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068276655 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071024412 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079132842 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071224166 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091089211 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090182411 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071787998 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082218465 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070246646 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070412797 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069454506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090369724 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074485983 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069453244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073005243 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073081342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067786995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068452515 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073794854 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067616025 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070815102 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072118928 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071981765 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071971501 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083723082 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071895876 seconds)
  done (took 9.06467657 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071556532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070218533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071552299 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070129298 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069778909 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070707985 seconds)
  done (took 2.009733428 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091095837 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070561289 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080575332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073350221 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101966604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087479174 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088052833 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079139135 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08450152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079855089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087449166 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08858045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092216526 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074208278 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087680334 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073356257 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088393005 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076188553 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07965284 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074272683 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086784032 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074229244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07432153 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082904575 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077471959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073772162 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079822785 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080015001 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079255969 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079147538 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073858491 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077117122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072849442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079858752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088168558 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072975465 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073648203 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078869692 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074052194 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080333598 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08852677 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074512882 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075622252 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078846151 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079393503 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072815251 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078755117 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080304516 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087726029 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078544734 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078331578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073159607 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077258129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078647148 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072688947 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079686958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07901546 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088429466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074484424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073309695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070795586 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077605568 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078798519 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078493356 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079546273 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079016686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07279095 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074198415 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074720081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073683833 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079073846 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071068643 seconds)
  done (took 7.252969041 seconds)
done (took 28.919356274 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533248585 seconds)
  done (took 2.069800681 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.591322243 seconds)
  done (took 2.15955545 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.493763606 seconds)
  done (took 8.058389099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.363829882 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465439747 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696705203 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135700588 seconds)
  done (took 3.257924314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71126882 seconds)
  done (took 2.283201004 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229701606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220100368 seconds)
  done (took 2.030938396 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375302687 seconds)
  done (took 1.934778965 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.083851008 seconds)
  done (took 2.647182523 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231284113 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175103929 seconds)
  done (took 1.975476683 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450259226 seconds)
  done (took 2.017697636 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.818850914 seconds)
  done (took 6.386813719 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214256462 seconds)
  done (took 1.822058507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233972988 seconds)
  done (took 1.804418846 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706728796 seconds)
  done (took 3.278950206 seconds)
done (took 43.307742461 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086344979 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087806473 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087331427 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084002549 seconds)
  done (took 1.894092674 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078831837 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075490125 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078730874 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075526714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078620199 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075244616 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076793201 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077883991 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07547812 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075659558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075712103 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075561218 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077959257 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076992685 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074073753 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078166202 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078790775 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075548645 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078208045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075316621 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073894117 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077784278 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077803009 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074519927 seconds)
  done (took 3.409812465 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080726073 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075819625 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077884714 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074470527 seconds)
  done (took 1.888823988 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080807151 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091916846 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089943629 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081067448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092736137 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087513828 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072108363 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071912204 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073047521 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080836576 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071051803 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096660316 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089552163 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080796858 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082679162 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068715002 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071180739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089133801 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081543076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081981632 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073282162 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081180595 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071162085 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090379987 seconds)
  done (took 3.526982266 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088342963 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101868083 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082711381 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091324389 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09439897 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068204093 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088532587 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094278886 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126062266 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068727925 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074070936 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068794883 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076773925 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068739411 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083214205 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.1117178 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.1123652 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071729137 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100340406 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069159184 seconds)
  done (took 3.327726883 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075239305 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072302772 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073149825 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068898136 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079749384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074898514 seconds)
  done (took 2.030913672 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07105299 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07059415 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070398277 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069642124 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074879701 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070270963 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069095896 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07060376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070759785 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070105056 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069887793 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069384975 seconds)
  done (took 2.428458187 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184624991 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071392454 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073466923 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068555028 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073557885 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06956787 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083381478 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071116667 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093573766 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070540336 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069964714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071889785 seconds)
  done (took 2.585529347 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194962455 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078443856 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22411046 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149488953 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108763718 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11294729 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111840032 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110976627 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136340536 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099408242 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160522939 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161322011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106544961 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134847543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090266077 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100488646 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149561558 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160608676 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106650798 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160652675 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141112154 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124557585 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143068627 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101614705 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105553075 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118855388 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074379954 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081687123 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16337225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129788802 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140038322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115585554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092372478 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170064813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162569733 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136664085 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145228259 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085678873 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103198419 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13106196 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190803845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089678732 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154869057 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107999589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080971019 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128246127 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113356623 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114312456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099705897 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088115519 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136961358 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167722486 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126647091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084999809 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11818486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107858556 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.106548405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108883605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16543988 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150253269 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122697689 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07274026 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107722859 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142511127 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12574709 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103205739 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114195449 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091664852 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121483171 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139990384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112106455 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129044882 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.107581427 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085466461 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112908439 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126906769 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115478882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143448224 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115047741 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072816306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112669185 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093368091 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079039799 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14060648 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074343015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157841181 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095895899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10095453 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115335735 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101861814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102236049 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141317221 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.398275267 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107126228 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071819901 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108569404 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121832736 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144048689 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091167135 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109929539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117721927 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08170843 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133924269 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079956435 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123916183 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081000469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123883418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129314274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081247849 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122810987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105503861 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103540314 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131195062 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15599543 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090521296 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084190001 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16304988 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121848276 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103399004 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140023927 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1530337 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101817992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100591499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145368308 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166744407 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091582846 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159051203 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105863718 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085567922 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088516629 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122850296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111279315 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123117576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084153153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118291026 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161276213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078057348 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096385335 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131483942 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081711207 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082636691 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105275563 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103746518 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096732617 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098482746 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102189315 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133607135 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276377011 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109449846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123699961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100155533 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161960616 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08983253 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103640616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104576862 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073047819 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130081764 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151449695 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081770272 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156751134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120569243 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115345646 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118555565 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086396234 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135105881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082006463 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073345705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139784634 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110626373 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108653115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14602806 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115173233 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122547427 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117021776 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129117849 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127501241 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126886926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106234498 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08912177 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111027579 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125510872 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076181783 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091160013 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081987589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105306449 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096258015 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084839858 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138751311 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121816589 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112503619 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110987854 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097791789 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142533311 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078108078 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124083579 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11813045 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096690789 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146106459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145835595 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129800437 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253735181 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134069581 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073794519 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077291651 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088375009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120136158 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084852764 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084377417 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11301367 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142213149 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125307209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133075342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121863007 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118139237 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150083748 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0732862 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119193437 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142430796 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120279776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104911555 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092604015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099414431 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138521071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106106428 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171922441 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113199708 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123035645 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150192827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102900946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08183427 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102330168 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130604774 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103619797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138681703 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099296973 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089933013 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108139281 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080400738 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098798462 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124591834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116920346 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131872744 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113251317 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13179821 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080153246 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112819131 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119318137 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119231136 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06695068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115976504 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155573025 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095815403 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115300715 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299074397 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081678004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134250125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166147973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139874768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0864708 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106893021 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119475868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124596579 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11775007 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135209254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105744459 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133427777 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109681491 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087296201 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089241775 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097065471 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104057908 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094860769 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1040755 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112188919 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09734055 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12951215 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103965772 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110071475 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117262213 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10091113 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093166249 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097862442 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168654863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117466996 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163836112 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10095369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138793313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156685977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077978568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081446433 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080567638 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135061728 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086792342 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128762886 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109971853 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115828809 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122053214 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136214008 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096013205 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070909353 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107108919 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13023634 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122471071 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099886897 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103431344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156401624 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.249107648 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081753832 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110439509 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114080808 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103240572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162730844 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065366817 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104890416 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078920433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081176882 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124134785 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146221083 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082539163 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100840497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118333761 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112100705 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124033772 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099655151 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111444418 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123561325 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144463889 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126363932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091227441 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109847493 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125059275 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150786231 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103018829 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098763932 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169347073 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14707983 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153207028 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087672775 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113045062 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113225323 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107884699 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135786315 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08546909 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156255639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084039467 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133143629 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102899739 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090009656 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126493723 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111413403 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08990554 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140883756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115353616 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084447806 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079337084 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114995356 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117131831 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103594097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076851518 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287468515 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078537432 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130396439 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155612279 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082843351 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104458367 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096332807 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082383648 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105385094 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102930318 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089022035 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100763193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165398999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088030466 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14448588 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131607898 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111843468 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131742035 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102807728 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64096758 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079738414 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146829027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113891068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164851087 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099829309 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116361689 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10973491 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119817619 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140588307 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102594895 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177889751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12946431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115244473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081711891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102827398 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104123476 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088565489 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106882727 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11278359 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114574061 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094168905 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114886565 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122833381 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084265261 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097844577 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149428427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113463865 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140700609 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134289951 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086236931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115585835 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286696312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083015517 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117480217 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146921713 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105481545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100146531 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082945575 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099402016 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154763867 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076168183 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153617246 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121839212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109546337 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11282224 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110285037 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129102544 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105586971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120544791 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092800136 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107920133 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112947301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083464187 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07919219 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105091274 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110020373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099262392 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097197807 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101062382 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146633777 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07513995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099790426 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114378748 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139925246 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166378212 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088583534 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084946395 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118643009 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114768121 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111691088 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120140811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081321886 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083764004 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081900695 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083044675 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10685363 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112576186 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113208831 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109497236 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156492619 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084522323 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224137491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096022252 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105147579 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071703077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079694579 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097017336 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250800966 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105641134 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112215611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154159534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096169421 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09124421 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092767716 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077847115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085360928 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124847471 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10846456 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117731409 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101687776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065727193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106534884 seconds)
  done (took 58.261508097 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109984893 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084755241 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098518849 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145520318 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122432508 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20080273 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157418432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190249582 seconds)
  done (took 2.844252694 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071692201 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096132928 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104499699 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084604242 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069600489 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0731106 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22033071 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085146316 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069615043 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095949341 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083265857 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074707783 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41953181 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069406382 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071864159 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066031608 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070502497 seconds)
  done (took 3.549549407 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.379660708 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620483209 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.335923717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080420395 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.971228503 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09700697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.180683896 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140928865 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081685525 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546708448 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414191272 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136062796 seconds)
  done (took 18.717818026 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08492344 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07844267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091723547 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09145543 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081603624 seconds)
  done (took 2.15841883 seconds)
done (took 108.244209429 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085327307 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.58768331 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057278876 seconds)
  done (took 2.404918515 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08919604 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087657799 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087740894 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085940172 seconds)
  done (took 2.089689583 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076913338 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078879773 seconds)
  done (took 1.889824885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224574949 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16879894 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097729366 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08496868 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082218423 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083070881 seconds)
  done (took 1.987584567 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074873876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077345708 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074965103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078785063 seconds)
  done (took 2.038145888 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079478036 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055627599 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058219867 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060788481 seconds)
  done (took 1.986429584 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088556472 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08451811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082094172 seconds)
  done (took 1.988899062 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101087545 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089184181 seconds)
  done (took 1.924053689 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083987218 seconds)
  done (took 1.818553569 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094297345 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100152692 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128595228 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110650962 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136247047 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107935762 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087330799 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087597927 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078981593 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08821208 seconds)
  done (took 2.753093716 seconds)
done (took 23.186105501 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080043018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362178441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091963782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671443597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359002246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970810675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095138363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141129015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070782696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087771539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652228263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961985985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333076808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.950063898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33286634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669581086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071541263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070701487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071723621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957598962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071023474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070964285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07164281 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668897141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375076505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072452602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328311157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071440481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072985705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358443858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072192218 seconds)
  done (took 16.322625384 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090506458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120843849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075461929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086782228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073338438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07387817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074421082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07277829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122640086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071277394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088461163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071423851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07495124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072165235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090556648 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071778029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072103591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072328257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074555651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071732362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089832922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07143263 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071657243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072481065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071617479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083290922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072525116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072039135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072162759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074223154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074729178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072391944 seconds)
  done (took 4.272477353 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117464918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125512172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076258138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107053051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114450188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073326813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143956993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096555571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129544783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071563272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089103846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071397576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10398947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072569287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091857837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072072495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072690562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072510695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071825752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071902516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091084479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072152458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071752497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072388146 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072001199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084939951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072115435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072507427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072278661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073625452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075288735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072650617 seconds)
  done (took 4.500717335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075128411 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078246397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085949574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086697752 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071996646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074963294 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075817607 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072403387 seconds)
  done (took 2.375972046 seconds)
done (took 29.216394127 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081250191 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071707307 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07559039 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091643755 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076005347 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080280147 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069887663 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078251375 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076261356 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075687479 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077862888 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071158328 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074320863 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07028199 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07770704 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071788854 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082363235 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075578999 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081960849 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082073209 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074109912 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076442276 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078519912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08188625 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082051875 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081889675 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080337848 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076524074 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072310536 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074720176 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080833031 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086626241 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07174385 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082128837 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071409147 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071433317 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075874957 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071582502 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08224927 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080051714 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073268947 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079834316 seconds)
  done (took 4.97126268 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090082206 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093403743 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087012896 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064687941 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068805591 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067723081 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090426704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063149904 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063697568 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090381461 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059844892 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062895221 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066326766 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058036224 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064051013 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060740337 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064854343 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059803828 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06302888 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062901162 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091124827 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058091156 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080245814 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066235663 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060053216 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065737799 seconds)
  done (took 3.586763348 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076701956 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085391619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092121198 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144244829 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113973852 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081095939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08179519 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095025722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096951162 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070714219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075057746 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096049947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090671261 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077261317 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071718046 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087823009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089045991 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072654929 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076177532 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093810173 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088537372 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088418401 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093997032 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086586033 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070289629 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073291601 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074127786 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084004497 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073123425 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079561 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07388354 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07419125 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073062437 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082050814 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073807255 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072633379 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096677451 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080437415 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081923922 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071289868 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078415 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071810152 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094134601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1260667 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069836084 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076029735 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074431484 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080133882 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070540178 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095822004 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081807314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070807841 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073680097 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070333061 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070504928 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073298328 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072496303 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072735572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079409057 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07633449 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094437589 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075772979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086473482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07030261 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078162213 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069845481 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071506013 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069783993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094993047 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071848764 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110211859 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071887309 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071314405 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079361565 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078513799 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076895061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070741221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086539609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080881314 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073732433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078739295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075343223 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073443356 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099976472 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072857368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072549711 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072276492 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07599532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073160023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071725981 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08370036 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070211256 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073006763 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087297768 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070651502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072051088 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076009519 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074919533 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070338911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081134847 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074579415 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071474733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080114352 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0711177 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073213055 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081933726 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076467776 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069852766 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074130083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075363207 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071293479 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07219045 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072874395 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072740156 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078858714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077228733 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075090843 seconds)
  done (took 11.081164095 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160300004 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15142536 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073483049 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145160085 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079686439 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081606419 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145341672 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095465449 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071297007 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072114747 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071925276 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110790507 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106546807 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116580963 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08174138 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071635309 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093662307 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114778954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147178523 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14336437 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093745612 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079530907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074391701 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072691288 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073160852 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080537794 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087728218 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079959016 seconds)
  done (took 4.578486463 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082522449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103829366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077370967 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092619601 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092080479 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071214288 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073697646 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072747445 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087084979 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081480947 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071610167 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075993008 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077711884 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073962695 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072249926 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078137867 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077734183 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072469452 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07454801 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075930214 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08134376 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094840463 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074352813 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07286577 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076344985 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070962111 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067235692 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086655226 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072347763 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095462485 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069628667 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076321315 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084456002 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072324925 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071341564 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071069019 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071298694 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071331212 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073008784 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069750973 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069427051 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061797716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070440661 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081592065 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083776235 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060133447 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075628851 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075859504 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076007703 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068623381 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074298409 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073767387 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073864091 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077881586 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074927582 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076294467 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072456257 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076396803 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078734669 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071227258 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069206147 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069802995 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07516501 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068845651 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086656796 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075760906 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069915434 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071224783 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073125866 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084792483 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071394021 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075690696 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068703286 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073286386 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075914154 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073083184 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072573969 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069999299 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071404372 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071531479 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059287221 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071192701 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057572777 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073536036 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069339063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069678027 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071035078 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076271451 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082288686 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072541973 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077127102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072085067 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070552773 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073711919 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063901621 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073741173 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080903109 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084918296 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071040664 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068920029 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082606979 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075540195 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070671953 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059996327 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075094683 seconds)
  done (took 9.645306827 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093048332 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072505477 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084275074 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091101361 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088306797 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07763832 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080598982 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072457282 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085778741 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077166526 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080026037 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071445738 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081333704 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080244162 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072996114 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081432542 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074821683 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085620778 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085004781 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071371564 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079290088 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08316068 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092193792 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083570285 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081876538 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083572158 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091847177 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080083427 seconds)
  done (took 4.091413163 seconds)
done (took 39.704548722 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.867762623 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.004962142 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.835130988 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.159080651 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.157071746 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.861450621 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.034069401 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.833882269 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.041240818 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.867369343 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.16671261 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.930216534 seconds)
done (took 66.655964139 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856612954 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.969103937 seconds)
    (2/2) benchmarking "String"...
    done (took 2.06318773 seconds)
  done (took 5.794524272 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.116497472 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.433067969 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.074359722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.828413584 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.83498473 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.137625216 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.632447172 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.347568018 seconds)
  done (took 31.050384761 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.021653163 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.055475793 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.537003233 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.57050588 seconds)
  done (took 15.996789802 seconds)
done (took 64.667823561 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.832350845 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.853065659 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.876696158 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.815406817 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.891068579 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.849895223 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.245506296 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.889451181 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.830471111 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.823878354 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.831734618 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.262614801 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.831336658 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.350162002 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.832606539 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.829716034 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.899520614 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.364855328 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.987625769 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.854314143 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.845522474 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.882320734 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.830415958 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.993778445 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.868248171 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.835638039 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.251523059 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.840747266 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.460389216 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.83134166 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.864288487 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.41935454 seconds)
  done (took 206.637692752 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.830536446 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.91857989 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.014806658 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.857919446 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.335761656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.014961061 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.932803025 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.366903379 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.836928508 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.859698531 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.98033586 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.834277543 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.996484943 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.779482237 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.861120925 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.928289825 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.108605839 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.019907067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.869271286 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.984230763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.844205001 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.798295272 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.761807642 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.976731933 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.879034061 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.847412975 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.843674114 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.847291974 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.026736451 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.07520499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.842433147 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.877188657 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.038799478 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.705861639 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.848259895 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.85781712 seconds)
  done (took 172.167738227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.025131305 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.834832102 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.832917942 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.832657605 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.838705118 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.83397724 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.955909294 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961977452 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.444432477 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.07502453 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.887010575 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.832595733 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.622730123 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.833776016 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.900987872 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.84843156 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.835598883 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.850064463 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.861840645 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.838042231 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.835585005 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.961652239 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.846999062 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.835829813 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.841952008 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.835697808 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839964736 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.205748603 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.834489996 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.84143537 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.835555744 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840371735 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.076363697 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.835654574 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.834835578 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.682514409 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.946548258 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.923753551 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.837554834 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840986195 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.835030889 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.052693877 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.836571124 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.835676491 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.83447345 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.834819402 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.838593791 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.835638311 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.980068596 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.835280606 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.960485935 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.835882209 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.313841172 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.836293973 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.83544792 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.586477577 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.415500131 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.836598053 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.838810675 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.83662788 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.837240321 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.8430371 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.57003804 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.909969062 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.838786587 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.840610399 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842558114 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.837292159 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.960740638 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.840018501 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.291892238 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.898208051 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.953353255 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.960317239 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.840956801 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.905406957 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.930341694 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.837802189 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.838089933 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.837071112 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.837302369 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.918343205 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.838687305 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.965226874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.845332009 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.839216019 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.888901066 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.907638589 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.838871753 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.69635192 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.841574988 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.839124691 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10272203 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.904831598 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.838887742 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.838400751 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.96583479 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961452454 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.5499668 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.841723405 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.556295992 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.978613692 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839759878 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.839128433 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980989222 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.839706575 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.920479787 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.844889348 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.839789017 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.871194251 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.840370358 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.897965627 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.840158226 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.839141547 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.211133948 seconds)
  done (took 409.26751023 seconds)
done (took 791.917166518 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.433861179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.41060303 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.503557434 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.424266455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.404720184 seconds)
  done (took 13.946833847 seconds)
done (took 15.719021758 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927475604 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93459101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.863861662 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.930499519 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.861253235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929917471 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913846844 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.865258068 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897740914 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.865037817 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901779709 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.864787393 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.851991772 seconds)
  done (took 26.378824989 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.214509511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.090350996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.909166193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.074286409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.886062664 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.077278162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.003472642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.990060425 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.994159497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.857328057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.853457735 seconds)
  done (took 23.72270532 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.083177155 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.083741079 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.91704569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.087398895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.888847358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.082158998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.0026336 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.998210622 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.995340993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.856305541 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.853753102 seconds)
  done (took 23.621179532 seconds)
done (took 75.493859749 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.850179426 seconds)
  done (took 3.622580714 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.877137366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.045063498 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.8573141 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.853963461 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.850847216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.84991942 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.855733102 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.849968824 seconds)
  done (took 16.813666312 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.846796702 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.845772081 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.848500868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.847100684 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.849836595 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.847086648 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.848854893 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.846906238 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.84598941 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.850018334 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.848886279 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.846162241 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.849403493 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.849710605 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.850000012 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.846999899 seconds)
  done (took 31.342162029 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.849370538 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.84796808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.849217438 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.848424004 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.847387616 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.848037723 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.84872566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.847211791 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.847658523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.847185551 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.849674897 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.847737256 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.847028218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.847778565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.848112988 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.848960252 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.84933057 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.848363351 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.852731084 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.847922929 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.847987636 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.847780322 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.847964236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.84839829 seconds)
  done (took 46.136856629 seconds)
done (took 99.689178993 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.59308112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.698081368 seconds)
  done (took 10.065870911 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.85366684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.850890138 seconds)
  done (took 5.550568215 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.851115199 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.851715188 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.851375671 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.851524653 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.850974246 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.852044714 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.851815584 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.852443915 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.852582031 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.851155211 seconds)
  done (took 20.292601052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.851587179 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.851977311 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.850055698 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.853336538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.852747306 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.849886027 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.852693187 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.852179624 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.852879358 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.849917143 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.851969372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.85014501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.852696565 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.851258639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.852859192 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.850384529 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.84960126 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.850995084 seconds)
  done (took 35.104210919 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.85320551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.853237953 seconds)
  done (took 5.483547487 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.850949495 seconds)
    (2/7) benchmarking "second"...
    done (took 1.849724158 seconds)
    (3/7) benchmarking "month"...
    done (took 1.850807704 seconds)
    (4/7) benchmarking "year"...
    done (took 1.850698373 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.850133325 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.850932263 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.851089707 seconds)
  done (took 14.732094497 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.855117204 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.998596485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.073484756 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.539492463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.854734483 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.857357793 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.819413948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.856841865 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.858721671 seconds)
  done (took 20.492001838 seconds)
done (took 113.49924465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.72061623 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.852688486 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.111748524 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.910184513 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.892888165 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.196055678 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.876847097 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.142500408 seconds)
done (took 43.482880843 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.934620377 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.532352857 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.551348971 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.883145711 seconds)
  done (took 15.745625835 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.83546519 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.162755288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.858646387 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.719940564 seconds)
  done (took 22.360126312 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.216575794 seconds)
    (2/2) benchmarking "read"...
    done (took 2.201004281 seconds)
  done (took 6.200512956 seconds)
done (took 53.022263902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855606224 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.854872409 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.853576335 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.853186895 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.854929228 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.853346851 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.852284318 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.851792593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.855308278 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.85512613 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.854018594 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.85563293 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.856453806 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85649969 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853422284 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853710878 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857019107 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.853827674 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853889546 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.855039739 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853576052 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856239521 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.853416959 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.854223882 seconds)
  done (took 46.287230306 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.857337638 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.855061895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.858032532 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.85696899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.855763103 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.857627129 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.857837209 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.85562172 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.857791752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.85686716 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854434611 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.853281508 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.856930518 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.853967863 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85636551 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.854316601 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.857069228 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854311405 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857358776 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.854401825 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.857532795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854483927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.854332063 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857124839 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.854365578 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855184994 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.857332077 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.855292365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857168683 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.854313128 seconds)
  done (took 57.460937033 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.862588932 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.865467436 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.857971858 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.858908473 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.858196897 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.857309815 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.858452607 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.86118701 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.858014289 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.857834481 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.857598438 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.85873228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.858583071 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.857373981 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.858179503 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.85833114 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.859240989 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.859186811 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.859165537 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.858360078 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.859134262 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.858610861 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.860204368 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.859104589 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.859593949 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.858601786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.85874624 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.859378734 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.858414265 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.859245092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.859190604 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.858993552 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.85901373 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.860495081 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.859887973 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.86024504 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.864616814 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.868854411 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.860617513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.85972575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.859907119 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.859671633 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.85976861 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.860103797 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.860462148 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.859971745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.860337814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.86001316 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.860035286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.86030586 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.860072591 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.860571598 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.860211445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.859840771 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.86063452 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.860465398 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.859991435 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.861083914 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.861400021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.860993732 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.859632956 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.861408583 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.861806315 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.860862854 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.861642928 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.860855975 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.860484376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.860718419 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.860504115 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.860871796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.861722926 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.861807653 seconds)
  done (took 135.705881754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.860979082 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859831004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860171495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.859803021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859647351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.862717231 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.85968466 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861811941 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860271948 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.862563054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863281655 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860685048 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860686672 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862992377 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863727193 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860832822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.863328821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.860053122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.863087866 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862925024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861842116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.860280236 seconds)
  done (took 42.73747158 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863040569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.862765582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.86114227 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.863057997 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.861075614 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.863832605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863047892 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.863368624 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863423167 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860830605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861277598 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863927131 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861176161 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860963437 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861730254 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861799863 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863113499 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.862003787 seconds)
  done (took 35.309086074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.861706251 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.861985011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.865186115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.861533523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.862015667 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.864724436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861574681 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.865013253 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.86605657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.862421197 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.865002645 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86411152 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.865313032 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86248051 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864755917 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.86223281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.865412003 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863075558 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86506407 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862356605 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.863377387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866360497 seconds)
  done (took 42.790346734 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.865065444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865245031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.863013625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.863407081 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863232764 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.865845088 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.865474243 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.863207018 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.865795677 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.866630059 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863490041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.865767344 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.86351429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865254925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.864300854 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863483306 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.865885691 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864843554 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86681842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863264701 seconds)
  done (took 39.083002143 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.867822762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867869174 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.868196233 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867970587 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868219074 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.868379641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.868441868 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.86758311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.868894086 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868603098 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.868337338 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.868848056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.868387234 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.86951843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.868749377 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868544098 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869571109 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.869072492 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.869715355 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869771832 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.869811972 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.868993386 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.869083119 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.868247259 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.868396459 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.86763158 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.869413539 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.869020891 seconds)
  done (took 54.114265559 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.868806426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.867728653 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.86598787 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.865740306 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.866770093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.866561503 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.865787271 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.866163605 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.867570494 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865197122 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.867922382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.869553461 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.869066958 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.869781676 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869111834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.870057292 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86881099 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.867754418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86565027 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866707428 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.868465465 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868912877 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.868450584 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.865415461 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866608952 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.868890977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.866066429 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866808086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.869598024 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865743927 seconds)
  done (took 57.818539042 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.887369148 seconds)
    (2/2) benchmarking "in"...
    done (took 1.887000501 seconds)
  done (took 5.568012047 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.866304303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8693454 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.869874984 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.868571247 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.868102597 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.869808648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.870101434 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.867380769 seconds)
  done (took 16.741725468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.869588366 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.870399216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.869569219 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.870452913 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.870423912 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.869551471 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.877456896 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.871356879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.871138701 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.872372034 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.87996794 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.879006283 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.873602237 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871385738 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.870721432 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872525402 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.870360501 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.871691052 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.872467587 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.871098638 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872589002 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.87296536 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.87287353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.869559769 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.872779886 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.882065661 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.875450458 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.869777247 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870861797 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.875132516 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.871717209 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.86924343 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.873947774 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.873422705 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.872521262 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.873189665 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.880346901 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871896406 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.878432054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872963061 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.87203215 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.868849017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.872471105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.874775156 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.874629636 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.874943026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.874745583 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.872186671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.874781962 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.877551852 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.879041836 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.873504661 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.870826064 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.878160181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.875603638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.88011909 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.875778722 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.877923215 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.883747996 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.88447045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.887699391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.883277073 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.877877446 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.876552992 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885329534 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.898903683 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880973813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.871901159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.872393729 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.875249536 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.884470318 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.889749648 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.885762714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.876123941 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877284122 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.876176555 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.876922185 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.875688378 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.883858163 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.878868343 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.877181779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.87622564 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.885400736 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.899795961 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.875896735 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.877100294 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.878113053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.878224889 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.876920553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.886965367 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.878106695 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.875579313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.875844613 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.875745037 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.878172878 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.879236274 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.875803917 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.877349995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.874387693 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.877405313 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.877774481 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87994223 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.885507033 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.877588678 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877605998 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.882554064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.876851425 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.876236759 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.884328992 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.87762531 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.878603107 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.879288071 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.884827128 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.876150044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.880888111 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.88613702 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.878138205 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.877967414 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.879094511 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.878558912 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.888571084 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.904911663 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.879271528 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.878765724 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.885055119 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.892674064 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.879616728 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.880557621 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.878845988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.875272144 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.875953241 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.879808491 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.879087934 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.878660909 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.880551038 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.880814706 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.878723585 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.879536944 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.879666357 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.879951924 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.880129355 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.878981686 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.879798578 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.880443378 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.879518448 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.881380954 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.884904012 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.879420947 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.880854817 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.88064479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.876800396 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.879665398 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.880597595 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.880345974 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.87927214 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.880490993 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.87886753 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.881299194 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.881071782 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.879792223 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.880398197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.882519371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884122014 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.882310219 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.88468017 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.880331242 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.877970356 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.880557686 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.880108243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.880135935 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.881564478 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.879841443 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.884079627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.890418053 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.881072498 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.88171642 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.883762982 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.882238783 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883214477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882227805 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.884608765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.889749888 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.882438645 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.889464362 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.883557882 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.882654931 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.882678715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.882145857 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.881520329 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.882827425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.884987418 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.888931706 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.895342976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.890558515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.88213348 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.885696865 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.88450751 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.887165594 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.886195465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.884265314 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.883168474 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.883024486 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881782484 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883287146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.883056198 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.882914662 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.882214915 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.882159923 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.882652919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.884185092 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.883175792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.883774442 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.884393104 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.881184126 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.883164053 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.884946942 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.882943264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.880743622 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.882191035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.883286193 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.884055032 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.885093718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.890260752 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.8811276 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885489144 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.885589534 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.884388156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.883635089 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.884726671 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.88681682 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.885509491 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.890750492 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.884851534 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.885762453 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.891262128 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.885055964 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.884773739 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.886823221 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.884911963 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.881734891 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.888635737 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.89291562 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.884984883 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.886356789 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.887275848 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884859823 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.8851163 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.891190624 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.88257345 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.885576618 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.884981197 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.88716171 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.883078278 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.888736745 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.886469912 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.886790377 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.888303174 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.886180803 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.885740004 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887883862 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.887187101 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.886595573 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.887480386 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.889567924 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.89514668 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.890485876 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.886428612 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.888703496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.887528806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.890700458 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.887055724 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.887483346 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.887220896 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.89950131 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.897067994 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893226517 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.887712891 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.887878749 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.892897298 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.889239686 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.892632595 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887748389 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.887206465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.887941494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.887717274 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.884469639 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.887567965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.887678069 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888587063 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.889468303 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.891827152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8885255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.887888344 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.889189942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.889194902 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.887032506 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.886841891 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.887829442 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.889154072 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.890281264 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.887751923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.887647841 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.894823915 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889843713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.889978798 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.887377696 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.888142314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.88681598 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.889052878 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.888713547 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.891988123 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.897602618 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.891805647 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.898483058 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.890316928 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.899306983 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.889646174 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.892415419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.897536434 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.885696313 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.887354629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.889409754 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.890187853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.896274173 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.890512092 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.890081597 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.894954766 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.891487922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.890835907 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.88986773 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.891051687 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.889106716 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.890598662 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.898373112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.891850897 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.894223278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.892181655 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.888299988 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.891307028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.89132687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.889722114 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.893723101 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.891495488 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.891019427 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.889243791 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.89062072 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.890499598 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.891164389 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.89147781 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.88852653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.891135072 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.89779807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.891557983 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.89610098 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.891438007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.899166638 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.892386177 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.898030294 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.89328417 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.891799644 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.892906347 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.892663593 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.89276992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.891999024 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.892793194 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.893496704 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.893356512 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.896384855 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.89291226 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.893491686 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.892576497 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.893199454 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.891471295 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901952441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.918230207 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.893749017 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.897086698 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.889325532 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.894859392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.898229208 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.893144049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.891374411 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.895460891 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.902833335 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.900284466 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.892915664 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.893958387 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.894451454 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894547155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.89371473 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.893555335 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.895220543 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.894278229 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.89490016 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.894620836 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.898001883 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.893524083 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.894441052 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.893922154 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.894855662 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.903830507 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.895015631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.894480297 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894973993 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.894605999 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.895407393 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.894106555 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.895330021 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.894411939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.895240382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.894949761 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.901551046 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.900451189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.89608586 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.894734017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.895399831 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.89471676 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.895031765 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.896644437 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.895924742 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894826514 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.896091961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.896231704 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.895990259 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.893599276 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.895644842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.896201016 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.895036952 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.899456999 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.903999764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.89601559 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.892837627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.895285355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.895407608 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.894471487 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.895524722 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.903924482 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.899302602 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.907438123 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.904399045 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.90045349 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.89545482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.90031813 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.904476702 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.895000914 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.897170826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.897482458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.898246081 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.897979521 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.900490385 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89762416 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.904065371 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.896643901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.8962053 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.905388142 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.897930694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.898511997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.898150455 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.901055465 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.896239223 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.894791506 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.898144692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.896899845 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.904541 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.89832281 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89945002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.899447514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.896118595 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.89811171 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.901660934 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.897048705 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.898175555 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.895059281 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.898157603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.899385339 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.898373995 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.895577398 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.897447667 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.89803839 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.901307448 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.904795378 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.894568097 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8986864 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.897548927 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.898349943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.899029012 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.898156558 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.898644978 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.896269666 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.89842377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.900417825 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.899692471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.901979221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.899218771 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.901233579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.90084341 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.900842442 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90325469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.910343526 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.907632566 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.897086387 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.89909525 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.900573571 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.90367102 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.901202955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.901496691 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900406742 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.901245912 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.900228441 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.900928391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.899508951 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.903218221 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.916317766 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.900537758 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.899962913 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.900135595 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.904714824 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.899952328 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.898400341 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.900625183 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.902712258 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.902174958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.909575669 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.902472542 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906919769 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90145019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.901854774 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.905164531 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.904285096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.909060845 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.904761551 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.902312616 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.902824926 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.905546819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.918458118 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.901208391 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.910774203 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.931139493 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.902153104 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.904001793 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.903488879 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90257805 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.904539246 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.903958214 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.903543473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.903195373 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.902898853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.903011596 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.903256174 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.90849024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.903856045 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.901257315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.902071383 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.903739288 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.902719101 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.900370458 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.903400304 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.902504566 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.903931325 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.904912574 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.904452045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.903262297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.916660073 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.912916509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.902743779 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.903546318 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.899996651 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.906276511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.905644482 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.91437609 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.910147281 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.903889887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.904344854 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.904659531 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.904392711 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.900393663 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.905558368 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.903125481 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.903985812 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.901601504 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.916557591 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.913594335 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.908492557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.904323952 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.906198189 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.905245282 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.904914176 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.905576194 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.906141003 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.905259398 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.905066307 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.909077022 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.904709987 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.904737879 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.909299206 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.91102658 seconds)
  done (took 1128.303002268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.900069065 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.901365969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.901665031 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.900381358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899944651 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901072598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90040659 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.901252578 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.900859859 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.900489944 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.901116431 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901809749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.900626373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.902644657 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.900770374 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.901062351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.900279856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.899936014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901559078 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.900859122 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.899843889 seconds)
  done (took 41.743599728 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.903256547 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.900763006 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.900949255 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.903400616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.901430127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.903421911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.902239628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900157663 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.900855721 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.897687977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.90101681 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.901536324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.899550455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.8991779 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.898135553 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.900971245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.902065129 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.89787279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.896453473 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.894562581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.896866476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894015213 seconds)
  done (took 43.622732134 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.896890922 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.896982268 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.895247165 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.893267987 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.89678407 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.892465599 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.896196968 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.894842645 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.89542119 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.894617372 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.893674177 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.896343064 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.902395288 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.900718752 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.897515495 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.895256283 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.039370446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.895375353 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.895959152 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.895777942 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.8938236 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.901502829 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.892176032 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.891945718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.894172309 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.89647912 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.895161874 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.895533526 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.895506898 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.896825678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.901549192 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.896203045 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.89609832 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.899065056 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.895387486 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.897590927 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.899902131 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.896965883 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.893765681 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.896043738 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.905760836 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.918327591 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.897735233 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.902479555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.896446532 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.896993216 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.900687472 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.906632374 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.89356751 seconds)
  done (took 94.930756288 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.897288787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.895981871 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.895306449 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.896935447 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.896341866 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.896134451 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.895731255 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.897957616 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.894024844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.89295666 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.897414441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.895038489 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895537138 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.896625286 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.897776628 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894830597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.894937067 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895389992 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.89540248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.894940368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.895905437 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.897930303 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.898126447 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.896493417 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898246351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.895089223 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895346637 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.895878358 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.895862394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.894928041 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.896744142 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.897086894 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.897679478 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.894854737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894935653 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.896861165 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.897578263 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.894397359 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.897787716 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.892025535 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.891768926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.892454891 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.89273757 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.892900425 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.89017509 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.888201901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.887878131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.88724056 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.887093842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.891175648 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.889899153 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.887327547 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890403865 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.886892148 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890103047 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.890488504 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.887554984 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.885955561 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.889580941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.886583387 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.887616677 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.889668212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885411102 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.889015274 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.888468408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.887437931 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.886357914 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887942916 seconds)
  done (took 130.548465625 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889953177 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.890064389 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890560392 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889070055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889847671 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.889067367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889919175 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.890516815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888948597 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889235008 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.889329613 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888387879 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.888958975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8873244 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888958222 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889407247 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.88850713 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.890105359 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889036647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889316358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.888203014 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.889331923 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.888916558 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889478593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888883276 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888144197 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8895318 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.888490988 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.889083527 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889334581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.89021299 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.888982557 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.890244918 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.890714179 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88963691 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.888763091 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.888838959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889203562 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.888564917 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.888568277 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887664454 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.88770581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.888192846 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888252619 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.887848553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887721628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.887824578 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.888945559 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887211399 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.887782195 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.886651719 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885180722 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886120703 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.884671777 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.887017872 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.885969338 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88554654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.885860421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885376177 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.885990629 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887929045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.884893681 seconds)
  done (took 118.891880649 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883692061 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.883162934 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.881173086 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.879192819 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.882613567 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.879867539 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.88310289 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.883635013 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.884156584 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.88258874 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882122768 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879983856 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88143503 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883026831 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878985329 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880736613 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879130097 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.879161988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.882375022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.879018868 seconds)
  done (took 39.434475977 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.880133394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.881500176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.878851331 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.878949157 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.882113409 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.878240047 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.881308112 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880802626 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880108316 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881268162 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.881800381 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.881146347 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879516916 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.879766382 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.882001434 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.879234532 seconds)
  done (took 31.890190153 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.880040487 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.88259882 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.882712775 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.883248078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.879410462 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.879430845 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.882416122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.880778987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.879093669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.881276495 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.881697744 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.881626873 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.880585747 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.882532205 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.879090726 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.881622836 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.878575726 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.880262136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.881487748 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.882354611 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.880281945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.878630412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.881463136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.883625938 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.877840835 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.878774808 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.878094413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.879142956 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.879569503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.880099708 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.877494144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.878686351 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.878428427 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.878824936 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.882001083 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.878251117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.880861047 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.881014784 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.88086351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.880879412 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.880826344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.879361717 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.882174436 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.8808953 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.878897324 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.879725798 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.878676752 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.87921266 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.878393447 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.878720012 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.879783083 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.882235214 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.880123132 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.880758056 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.8819485 seconds)
  done (took 105.221469934 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.881014504 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.880639451 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.878134839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.880685896 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.881274721 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.877169627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.880046694 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.876230367 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.877317694 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.879875762 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.877671918 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.879379839 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.877123234 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.879760152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.878646246 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.881482035 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.87658037 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.87658127 seconds)
  done (took 35.622755444 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.87759795 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.878767445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.880312381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.877045074 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.876999598 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87986717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.878426767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.878376855 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879781967 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.876782335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877899134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.880786284 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881499619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.880135749 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.876665843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877081011 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.878731055 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881554967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.876294149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.876597315 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879863569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879342063 seconds)
  done (took 43.132803771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.878037181 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.878535807 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.893754052 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.898040736 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.900135283 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.912888431 seconds)
  done (took 13.164068602 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876471712 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878571 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.876921344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882296946 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87973633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877708199 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876975815 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87704218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881828594 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876952553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876566753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879723741 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88028437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877602939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880944896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879631366 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877875965 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877419121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87826795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880420515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877930686 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881300217 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877561624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877632977 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879131334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877020634 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880021332 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877425749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877497677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879473696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881608707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877740877 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880169225 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87784816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880387956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880948903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878400441 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88056138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880367672 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878557803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88133897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880978002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880366853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877330148 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880061721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878065972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879434719 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877795929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876798135 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880899277 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879988363 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878289586 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879790475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879984169 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879675125 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87984812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878462967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87863466 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881902065 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878063028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879329117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881255294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878894023 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878745181 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880595485 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878269014 seconds)
  done (took 125.822671517 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879804749 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877712478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879494387 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878783238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878918952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879784495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87795443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878065674 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878952476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878538045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88201651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880996466 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879396757 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879019676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878496131 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878721849 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880432202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879310841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878537112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882602666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879873956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880236735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878899943 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879815977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879018486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881481 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880068136 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881559944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88021853 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879993073 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880087472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879828494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881747938 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.88023885 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879732164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88002205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880311268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881402435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879390783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882861711 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880860539 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883215029 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88133193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881308691 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880849672 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88055323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880659808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881026637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882491005 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880627352 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879766102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881955473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880849616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882269829 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882701909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881115957 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881197721 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88164262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882251918 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88378868 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881464453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880843243 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884004614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880930231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882124024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881002587 seconds)
  done (took 125.921001922 seconds)
done (took 2613.650578529 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.903139736 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.893620034 seconds)
  done (took 15.601919667 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.045862173 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.998322089 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.882591485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.890597393 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.882889108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.90179708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.878604839 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.882753787 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.881270883 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.882026972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.882236235 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.070535613 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.939940215 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.883486224 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.885179359 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.974889867 seconds)
  done (took 52.572088778 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.886026234 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.887323565 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.899226099 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.890155017 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.88694556 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.898913602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.920128538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.892349396 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.921816072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.900031976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.95425009 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.897296504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.88571829 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.937274439 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.899504477 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.901413448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.977841164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.962286447 seconds)
  done (took 36.205761982 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.963209899 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.888713386 seconds)
  done (took 10.66774995 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.909399213 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.92999711 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.933499685 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.904163051 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.910308692 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.891748065 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.897681503 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.893649444 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.898585626 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.92057022 seconds)
  done (took 70.899933214 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.89380183 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.889471401 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889599193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.887021058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.880882306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.883960285 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.886267174 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.883084817 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548802273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.921456832 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.89363051 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.89215211 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.886957188 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.889364087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.884926025 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.910683644 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.997765647 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.886336183 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.885247846 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.894031997 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.8881283 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.954314756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.902570385 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.889580412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.916875507 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549749893 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.895653693 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.894512531 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.991698275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.885875672 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888239938 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.889491033 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.890140494 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.284242645 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.16382255 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.888685948 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.902118135 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.896698478 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.885828167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.025824708 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.890236521 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.894062408 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.665913394 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.142795576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.990887225 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.931362239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.189988168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.905288505 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.890512196 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.917694681 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.891080893 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.891250362 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.902320434 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.381987964 seconds)
  done (took 133.369429689 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.886833584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.235734736 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.054059138 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.885433464 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172238678 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093738679 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.887638356 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934140185 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887826155 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120208747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.145430873 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.995002056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887197751 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.887636226 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88759243 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.884102906 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044243406 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.958826853 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88727106 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.887073213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.916501916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131878396 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.008796124 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.887640657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.918094286 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099024593 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009122307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.99152113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.664609014 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.88503804 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.952796826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.887341944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.885502525 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.884776643 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.043211562 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.982665879 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974730226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.888449056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.886801106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884669681 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.558318555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087889833 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.983827255 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028652642 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085959374 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.094846784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.671451858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.886332404 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.631548477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050983804 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.118434555 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.122603122 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.011165146 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.889810599 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.422306381 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.885150803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.885071472 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.139552883 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029252138 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.986397117 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888757853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.888392291 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.888154308 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134237998 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.889505849 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985819263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890072198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.885402576 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.986988255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987546336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0274542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101803512 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920952964 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.847174138 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.42644068 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137692045 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95507764 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13919206 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.889329418 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887147203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969048501 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.724155363 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.144107225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.139795899 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1448009 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925046366 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.615774038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.888603896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.117646411 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.11074642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.151171442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097741221 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.130136945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.215849633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.890252653 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.887345566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.106382113 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025898773 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.89201269 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23692218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123378509 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.435962795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.909437136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19567977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023419017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.891665127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.532878456 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.890480872 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.121197845 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.932682438 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.890350825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.890146066 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.111494317 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.880167392 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.890641225 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.539211408 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.954051579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.893420992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.124444936 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.893136494 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161942922 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.892362804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131223167 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.906403404 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.923220187 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.123528122 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.096014101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.892657863 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137060321 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137304164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007898328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113075303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.589916905 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891428854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182012257 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.892542575 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.890394456 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063353795 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.892740004 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038298422 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.89559911 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185793394 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914868957 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126845174 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892222408 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.153932015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.92732507 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944093383 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896221779 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024878621 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.890454517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.813886143 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051153571 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894288384 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.89167674 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.695325449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.893050661 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043340322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.125427743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915534398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967101818 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.566950726 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891299469 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97562344 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917592199 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.284794285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.891914321 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.146316865 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.894484186 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.892539935 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.892559631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133763368 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079055939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.896444642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893089717 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.800624193 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.891723703 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.892999162 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.077965559 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.350634294 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.891941453 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097336666 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.896142059 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022850107 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.896177484 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.966919043 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.239394058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.894345763 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.894108955 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.894169471 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.895149995 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893782252 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156023189 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921373899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.412338774 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.033835432 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.170521081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.207556331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.145220553 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.939374172 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.893663288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.150616053 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.89509345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.959963482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.895882252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917788256 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12695689 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897255645 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108275839 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175003664 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.755386827 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944768991 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.897428036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894914656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.894164091 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.040018723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984257996 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.896715253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.894292172 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012787334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017047228 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.107111064 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.896370712 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.966589053 seconds)
  done (took 908.259723176 seconds)
done (took 1229.384803869 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.894943899 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.896478335 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.886131517 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.898415295 seconds)
  done (took 29.399450818 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.903570441 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.901102154 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.904548624 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.900881893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.903020285 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.314284191 seconds)
  done (took 13.651091893 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.908137765 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.898754255 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.899411781 seconds)
  done (took 21.529728127 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.96901415 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284923054 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.004829806 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.323372101 seconds)
  done (took 10.406952939 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.903929566 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.902740869 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.903976402 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.904288421 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.904875104 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.905654128 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.903873667 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.902921771 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.905103429 seconds)
  done (took 18.963302377 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.055214685 seconds)
done (took 99.829499762 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.891752745 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.178658898 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168773239 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.968556128 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.470643283 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.172903992 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.050652414 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.965215652 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.036082357 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.96982075 seconds)
    (11/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.310265686 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.889540918 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.873913778 seconds)
    (14/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.003658935 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.160183908 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.037995606 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.278825748 seconds)
    (18/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.992575569 seconds)
    (19/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.326002914 seconds)
    (20/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.007729261 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.916694122 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.062008357 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.213076629 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.926430172 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.897475192 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.902371704 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.887424787 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.096286041 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.886651568 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.862904648 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.03519045 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.9942626 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.021030339 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.90955295 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.434870358 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.936061659 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.909387099 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.970433273 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.925246628 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.333204045 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.909519244 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.218498253 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.31505865 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.267021155 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.087035349 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.972267496 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.791168146 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.70001936 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.018118251 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.322160193 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.48198603 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.203014727 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.133256961 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.936555257 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.272765672 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.927987773 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.177597745 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.911156873 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.048000186 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.195611999 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.632623148 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.54344913 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.368694145 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.168350302 seconds)
    (65/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.923132484 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.928701434 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.712048042 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.077875103 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.933009445 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.820855106 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.006201641 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102666537 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.426102281 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.097948191 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.159368149 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.425352672 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.917777938 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.267227337 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.915859215 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.9449546 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.987805663 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.927605009 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.145210584 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.362960914 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.055395993 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.62547262 seconds)
    (87/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.937875339 seconds)
    (88/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384770831 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.901368616 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.099737303 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.934869233 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322407975 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.067317314 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.913682367 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.048333912 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.944989021 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.980786023 seconds)
    (98/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.918742226 seconds)
    (99/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089760049 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.91325685 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.989295862 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.274988025 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.321084954 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.018391984 seconds)
    (105/309) benchmarking ("sort", Float32, false)...
    done (took 5.664662306 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.918452406 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.810101329 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.936061257 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.035635563 seconds)
    (110/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.90252248 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.205815075 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.599065302 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.255806181 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.093117621 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.166482478 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.23831075 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.070085935 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.917637506 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.026817522 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.983721409 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.855334522 seconds)
    (122/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.095719142 seconds)
    (123/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.974921552 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.286324517 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.21537526 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.329097117 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.077543802 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.156652974 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.941146215 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.899156411 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.954636819 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.245288733 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.048410374 seconds)
    (134/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.010222406 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.918342553 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.222298514 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.216953949 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.121651856 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.114552296 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.899983917 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.977106716 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.984447863 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.129254988 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.96349242 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.099843992 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.13717347 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.233511757 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.471621296 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.172967432 seconds)
    (150/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.938929892 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.915910886 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.218150095 seconds)
    (153/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.021805905 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.167331129 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.846315872 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.920667219 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.636536246 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.84808273 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.839794603 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.941315206 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.627501743 seconds)
    (162/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.066050046 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.045986626 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.915956139 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.982045522 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.901078246 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.919327311 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.905890294 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.595525119 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.357036102 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.940025896 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.924047428 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.154067247 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.931389854 seconds)
    (175/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.931785534 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.23882612 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.145828927 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.961736391 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.985337524 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.152502774 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.835265397 seconds)
    (182/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.302010432 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.918646636 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.019216118 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.567315535 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.000876067 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.058525139 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.922922917 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.942644717 seconds)
    (190/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.001101456 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 6.916362381 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.026387916 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.902830219 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.138307633 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.156981513 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.948969629 seconds)
    (197/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.903365011 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.231071852 seconds)
    (199/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.923496276 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.425421099 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.633671228 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.925502075 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.159113361 seconds)
    (204/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.03870861 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.385164852 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.054631407 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.19217257 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.011515686 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.90710126 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.157781384 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.106919509 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.285413846 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.129769763 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.10015317 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.05709608 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.927311748 seconds)
    (217/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.038953078 seconds)
    (218/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.024677464 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.923001552 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.34161507 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.016563769 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.919484615 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.334754957 seconds)
    (224/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.998014165 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.16795805 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.038420903 seconds)
    (227/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.916889611 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.061307206 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.319992191 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.197841842 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.01817133 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.045670328 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.011487385 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.008286003 seconds)
    (235/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.767522702 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.433891035 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.138657857 seconds)
    (238/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.010968 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.755945636 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.611561716 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.763435284 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.414061002 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.063457669 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.011015485 seconds)
    (245/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.956287928 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.246292501 seconds)
    (247/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106602751 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.127985934 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.27039667 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.997536349 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.233205744 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.929511975 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.388705261 seconds)
    (254/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.014362473 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.90755389 seconds)
    (256/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.153971191 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.025639836 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.096276626 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.965575309 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.939359815 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.426736863 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.005926951 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.159123802 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.987962574 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.948446604 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.937688927 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.028708948 seconds)
    (268/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222460315 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.008107431 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.229306374 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.262008061 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.183322686 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.877795231 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.286687672 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.912184572 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.01608538 seconds)
    (277/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.169965016 seconds)
    (278/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.087878209 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 4.798038948 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271530926 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.92639883 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.413327333 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.955270518 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.884828283 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.058532474 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.92310786 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.368869385 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.605631289 seconds)
    (289/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.035851987 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.307711475 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.88082667 seconds)
    (292/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.959333055 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.355942005 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.22331349 seconds)
    (295/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102260842 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.759484837 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.378490685 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.959806384 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.022847344 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.213228627 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.029095071 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.961126344 seconds)
    (303/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.007670283 seconds)
    (304/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.023644309 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.048582946 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 5.702590759 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.253220064 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.14683101 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.943101055 seconds)
  done (took 1022.904509402 seconds)
done (took 1024.795248864 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.957495118 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951110265 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.935204595 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.956374737 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.048124795 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.963172972 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.946904616 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.937794302 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.983073884 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.986039797 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.935112611 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.960249037 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.939301268 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.937185417 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.93663354 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95235062 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251011363 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.968328073 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.954892881 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.946747844 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.953387551 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.934552789 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.986825187 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.960580222 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.940059509 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.939789274 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.938870135 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.957556988 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.048699113 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.940135686 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.941252161 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.948455235 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.250303501 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.968222911 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.93226847 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.957428285 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.947032865 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.946452853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.941636014 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.96988308 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.334551723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.975723273 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.940235301 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.938612107 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.939283021 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.942587378 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.939541131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.944235942 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951044859 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.951673691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329995935 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.995150327 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.942439128 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.939006407 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.949485567 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.939953057 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.944354823 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.954392544 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.958783497 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.955633251 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.232554968 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.97758731 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.941399833 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.955497602 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.947596756 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.366285013 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.976758196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.944485159 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335248728 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.98545529 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36536466 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.988137932 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.941025979 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.953975185 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.972822696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.253442202 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.968003017 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.939292366 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.947580874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.937167651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.950846607 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.95241535 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.945611789 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.940258948 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.95377215 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.965978758 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.950845352 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.943110374 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.949949055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.962227245 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.950946951 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.952109607 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.944018861 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.936310587 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.950619252 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.944403425 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.944827101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.944168302 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.946254251 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.952034081 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335835004 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.998833258 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.938933966 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.939166546 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.940853259 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.957036317 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335939502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.982932052 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.963799754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.988164842 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.944277816 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.237276153 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.976444178 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.959272405 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.951060902 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.945934023 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.938458745 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.235739605 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.365866044 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.99798896 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.945141729 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.940873825 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960389794 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.944489192 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.940172646 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.256337393 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.976460933 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.958074211 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.06391578 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.953279418 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.976590838 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.940499755 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.946255139 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.972995505 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.960949301 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.976570535 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.947622606 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.960159361 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.960768568 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.940169085 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.95475718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.953492211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.946875904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.949533333 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.937982124 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.973679616 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958997942 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.957247084 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.965361042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.06671604 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.943100663 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.239466578 seconds)
done (took 304.686546339 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.010898121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.93319991 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.039036274 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.939408222 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.020950202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.025229076 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.937498506 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.937270867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.937556313 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.310428138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.937924506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.937454959 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.938810306 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.937673913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.021635251 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.940032599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.938487284 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.275368253 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.941297803 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.012472986 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.936229984 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.937361556 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.941042421 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.312550749 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.940635364 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.940355549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.012123414 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.940643349 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.277144945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.941416804 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.94025537 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.277919243 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.030534439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.959240738 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.95084292 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.947315331 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.021710897 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.946250427 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.021900884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.023881593 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.04072384 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.982683165 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.942897303 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.944219037 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.946645747 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.943844748 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.939377406 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.968444028 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.934870572 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.938831009 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.276161684 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.952026694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.940800588 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.938475905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.939295558 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.973733134 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.939723025 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.943885975 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.032318527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.943740609 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.003094564 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.314396725 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.314101036 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.942757402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.940792644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.9399477 seconds)
  done (took 189.048783058 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.007809613 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.019195386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.008340225 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.945379726 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.990502292 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.009110327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.946860107 seconds)
  done (took 15.787657712 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.949172987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942040192 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.994190217 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.994700607 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.944561667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.090101457 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94353558 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.95534958 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.94124056 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.996814746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.944706275 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943459341 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.950562312 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.939887014 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.993139698 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.954676484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.060143095 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.945625921 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.946005851 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.095876988 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.942767396 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.95104936 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.997690217 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.95525113 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.944440988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.950451402 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.529950425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946277591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.942431671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.943594511 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.941478725 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.985155323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.9461184 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.938604965 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.942073896 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.059913437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.944345031 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.941900355 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.94502776 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.942894394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.944479706 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.94459991 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.945004509 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.942795361 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.94608757 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.967790884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.944956686 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.946763057 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.945138631 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.945481278 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.995160028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.946368937 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.946092465 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.943542504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.000857869 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.95298947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.948327927 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.943462569 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.948738671 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.942571145 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.096872067 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.995493904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.945429296 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.997591303 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946102356 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.9461217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.946056363 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.946260335 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.045534617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.946483213 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.99660025 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.943473105 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.104475394 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.969653191 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947309805 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.94998423 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.950444307 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.948222088 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.949303926 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.953617165 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.946793361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.948144219 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.952662112 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.944649456 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.944036199 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.06176614 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.056430733 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.946468043 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.961187807 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.954922499 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.946103143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.002912546 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.946659455 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.94490618 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.003301631 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.063166524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.005784776 seconds)
  done (took 213.278443644 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.95211487 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.956461252 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.949499622 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.967359888 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.949301118 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.948502275 seconds)
  done (took 13.589957227 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.950161102 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.948590393 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.947528707 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.94876874 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.94985626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.949177185 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.951272887 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.950704198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.954070773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.94872797 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.94964556 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.949574758 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.949373458 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.950784827 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.949664968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.949091527 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.951494789 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.94606808 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.949499028 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.949697776 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.105365172 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.951201955 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.950607888 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.950171175 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.952959019 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.948178703 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.956275063 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.95048704 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.949103875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.959488781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.954449536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.954612305 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.950294126 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.955167773 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.955916416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.951324453 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956755537 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.95051638 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.947030946 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.950211279 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.951389545 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954072001 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.949117558 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.950208921 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.951302249 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.954263942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.957016462 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.95777509 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.951055372 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.951094229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.951140591 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.949692498 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.955459291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.953182491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.952835276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956321534 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.95553367 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.956425784 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.953404177 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.951062424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.952013107 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.951960835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.954286105 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.955997722 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.948974715 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.951949011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.952480765 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.962599969 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.954074647 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.950386704 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.952487432 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.948083378 seconds)
  done (took 143.560384518 seconds)
done (took 577.142496644 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.150717715 seconds)
  done (took 9.020815018 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.03470348 seconds)
  done (took 8.95000305 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.391289655 seconds)
  done (took 10.266651408 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.958088732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.001836532 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.96000021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.954749947 seconds)
  done (took 29.770060443 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.089932784 seconds)
  done (took 8.963227929 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.971086616 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.946753162 seconds)
  done (took 15.824089162 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.022261593 seconds)
  done (took 8.894271154 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081420873 seconds)
  done (took 8.979593078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.960083815 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.980800197 seconds)
  done (took 15.827847243 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.935070942 seconds)
  done (took 8.806862665 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.756740939 seconds)
  done (took 11.730569577 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.967422731 seconds)
  done (took 8.948808488 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.983332357 seconds)
  done (took 8.85634805 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.029645076 seconds)
  done (took 8.901912536 seconds)
done (took 165.61882245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.952044607 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.947230075 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.948376528 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.948592507 seconds)
  done (took 29.667542266 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.987021005 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.986590721 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.988075917 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.997602234 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.989483539 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.986744743 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.980796365 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.979943728 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.998504328 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.991112981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.989645272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.990335119 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.987569543 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.979693812 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.991299128 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.990148139 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.001092008 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.989750511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.981110103 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.990785821 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.955957754 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.000181574 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.990809477 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.955920676 seconds)
  done (took 49.553869993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.150278935 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.028823821 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.108840211 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.00735312 seconds)
  done (took 10.169384151 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.007017588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.009975988 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.020435348 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.059451657 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.083258081 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.018500949 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.980404662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.977835652 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.96474896 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.009271979 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.085103992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.004133633 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.094410975 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.955644511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.141649487 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.956987276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.956844625 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.007757232 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.059415375 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.073331942 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.957419352 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.008361476 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.01132591 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.00514305 seconds)
  done (took 50.323939449 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.955139941 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.963594135 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.961922408 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.956187618 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.955577481 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.956618503 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.963347018 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.958210264 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.977909889 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.957647203 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.955505232 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.956460312 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.955107975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.956479859 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.956742961 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.968681819 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.971138246 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.956069721 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.963538911 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.963218544 seconds)
  done (took 41.085353437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.951991483 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.804348546 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.302781478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.207503281 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.952399201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.954163089 seconds)
  done (took 32.050132191 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.971461266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.964433905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.957171302 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.015007408 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.099240591 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.965289066 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.958143759 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.970717471 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.005959178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.022507706 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.981150428 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.987690101 seconds)
  done (took 25.776760166 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.955680957 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.954837918 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.95423333 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.9698922 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.968966597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.96639395 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.965739446 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.953884252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.970975338 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.976861265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.96645533 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.969103704 seconds)
  done (took 45.453321396 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041937922 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.840297387 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.600984196 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675203413 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489860064 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163593126 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471906997 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126712569 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.957131705 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227529999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.637886254 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2089271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207155193 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954240428 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.026391781 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4371564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257843798 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188141871 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985203356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74188867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08220883 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480391577 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.717289843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088739834 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165386 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.086648385 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.215260771 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.915253209 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096116782 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996299562 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967269809 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957147497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229417969 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171527434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086527089 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966002746 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609552175 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.673375653 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.961539433 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.682885082 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.721241481 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.099307636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964772234 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957242451 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.887962409 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475164993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133169497 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.961487117 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.658927847 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.956112361 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967230498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04916059 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.960568847 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.77221836 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911420737 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235002666 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.956062004 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962731198 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526138556 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096682877 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.580585813 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.893266213 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.050589775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691647366 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443332662 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.119131309 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.960169138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967968586 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894914686 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73889118 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094126598 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106399913 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.982605063 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612054067 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273972455 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.704535731 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.053085869 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259407256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.748456012 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.898906822 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19032965 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920791044 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896759583 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.819979533 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.896885806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240755173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001810709 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.643218237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005683835 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133209068 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975822011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985233462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97607028 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191071111 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.851014985 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97071499 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.592632765 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261312099 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991851282 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14203972 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904050057 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.973354592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223423843 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.179052651 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.201768803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.464727874 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135931831 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971216671 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.05972749 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.887225818 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980816029 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.255103173 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040978907 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.106581407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107744539 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927920829 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279748379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998669292 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.148180566 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.663714264 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242738672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.300820732 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224234607 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055380495 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978104011 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.972442605 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.764355523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.602226168 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.194312909 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.972154661 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338413895 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100649177 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.972973515 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907172054 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.627272178 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.663863689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.090173205 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193697178 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.818302153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349416254 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904729101 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116222049 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082556182 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.193317376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.634589549 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.063256012 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230029898 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335417333 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.188686123 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085426296 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990411193 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090433617 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993220719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.273564787 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329396977 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.975411163 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.975602248 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.765687501 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050739226 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974797723 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.976717139 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768145603 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270501332 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009365126 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974184451 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.907191627 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.987255289 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055559684 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978430086 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981400279 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.497092253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725782189 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.984835547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.620556897 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196233778 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983330939 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.755360662 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179387414 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.055835106 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259936482 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046633176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.907726613 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.675678076 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.677462953 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975532464 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909454753 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975500008 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984260631 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984797235 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.196483814 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265835626 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037009294 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.713311434 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.099477252 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985293312 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.978901735 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976078348 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.473330016 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.126104871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490365196 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089089786 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11152209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.990517256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.907970691 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.978919051 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980278948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.976785657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.933768202 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027699835 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.751535977 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315645726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235335568 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.620087188 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993525176 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.780862129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.114477196 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.998618642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.624188629 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951735323 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.072125725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034733435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.985761321 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.761777693 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.751814726 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.547001835 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294663175 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318336702 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440312612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.352910406 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301062351 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155571502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211954849 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50558898 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038715407 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152937703 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921833288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061651008 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.642187764 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344089612 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993267154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202985896 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378685878 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.682160665 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146914838 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188870047 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012901313 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.786569131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.007692556 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.504469077 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132219758 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.644268252 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214862889 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147267634 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618057523 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.095999953 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.978807195 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.457623639 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063046776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.688070098 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339000696 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.514299556 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.676056004 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35769651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.987439014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.423126621 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344279739 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304043003 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.067505746 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915099834 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990096034 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.988900347 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.978989322 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.956572013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.82968769 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.230610079 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98990545 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214458514 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.239777727 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259135431 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.894851562 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.985087684 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980724083 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282335319 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.638640606 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220723813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.309704111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.557518821 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986552389 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.913487174 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913325522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.683313313 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.989870228 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954409224 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221219179 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.087824352 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.935018112 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354404154 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292444 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234334485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.996051172 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270147869 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267520292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.716963399 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010508433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.080834634 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617543918 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.737641246 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.203377514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215417834 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779568111 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.213596008 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.638704205 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.959022698 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.981886259 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195626648 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202821051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.678480424 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242238346 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.707985229 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.996760082 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359476715 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048285002 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.677379092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206629964 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.075981809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992152144 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064590474 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992493085 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.993049627 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994052645 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030377035 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684761983 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.127923381 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.996681097 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074057216 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.136263231 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.579412711 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.99353003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275953948 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364330577 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337538791 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053564016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.985350161 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99274205 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91524061 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121527292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427953129 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257300572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.113031077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.124181563 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009256051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626542232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257459688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293973492 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259164525 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.879428572 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985237664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.07635932 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.208078759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995034396 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.194895253 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227760958 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309035956 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455848372 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.111241349 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258725065 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259858363 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355109775 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986827882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573364427 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.999118699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509095713 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.026925175 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684197089 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283333135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996426817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204820443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010152299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.187903645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.439421943 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773706771 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358686292 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.98761553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052424166 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277186851 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408145793 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310388723 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067269131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997459963 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.684288582 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125348098 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.87521465 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225248948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989601413 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197376077 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.699997554 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996928317 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279012575 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307898306 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.986660601 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.911649313 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026067653 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.996042643 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210493551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260854111 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240298594 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996626485 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997133325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.802839247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277521973 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057692779 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922071122 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.992451421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086992109 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234577794 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008481395 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.50610889 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.690959984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293589991 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.907120395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010781126 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391381552 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446877353 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340898068 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.525473499 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225355473 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.548386683 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840681991 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363490208 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.994098498 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381589687 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.366714606 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.994382255 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484595224 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100253999 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.276698733 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.323411194 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.004351119 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773219917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.04029367 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211759888 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583046422 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933963362 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995180887 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.05133767 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.991736536 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.11881229 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002034088 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.937193042 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850047487 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.82790208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482501466 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.995956412 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.10288549 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.638865428 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.553598845 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096319906 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146180645 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002410986 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.713497944 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.280976626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244618655 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.480619255 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.061624168 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.99474527 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992295404 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918827163 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.189439058 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.18887611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298652587 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.317945794 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.100067989 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996163482 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.205545513 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201624482 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.70295982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159598083 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372898182 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103817777 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.920686598 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.705301004 seconds)
  done (took 1731.842626123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017036961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.011419307 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.004585518 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.039682978 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021078714 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011297776 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.062484087 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.087533759 seconds)
  done (took 58.170942478 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.99316932 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.188284502 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.002191732 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.994226105 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.021441767 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.996814011 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.187440724 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.005864627 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.009369291 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.005025191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.001186781 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.002131314 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.298971842 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.021862034 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.997858678 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.000797509 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.006512138 seconds)
  done (took 76.658243408 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.999397439 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.167799753 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.019807607 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.026369033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.870293774 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.000683766 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.93279049 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.004192131 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.000579684 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.167343894 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.339279666 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.048584664 seconds)
  done (took 91.49900537 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.013141714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.003960995 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.005435169 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.005629037 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.00522165 seconds)
  done (took 11.960977319 seconds)
done (took 2256.102327676 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.23923276 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.189974566 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.227293099 seconds)
  done (took 6.338964435 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.146353305 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.195425573 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.312663588 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.319986506 seconds)
  done (took 10.898705567 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.296914671 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.369754075 seconds)
  done (took 6.588432918 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.322980612 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.018058211 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.382653287 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.997468857 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.001917628 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.001505564 seconds)
  done (took 22.926967545 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.000773842 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.00306657 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.001279668 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.002702334 seconds)
  done (took 9.926165647 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.982353648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.723995497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.986539383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.997265244 seconds)
  done (took 21.608458323 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.756228907 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.122610483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.740221792 seconds)
  done (took 9.53692151 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.619301888 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.236057681 seconds)
  done (took 9.77202668 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.159322549 seconds)
  done (took 4.081442723 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.030595553 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.271826732 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.523434045 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.541175861 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.642628086 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.817974617 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.29357291 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.222965821 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.441939526 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.454347152 seconds)
  done (took 26.163211354 seconds)
done (took 143.726517272 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.337967957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.022411997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.196235727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.346711962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.222707653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.192170837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.214333237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.334350115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.021195708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.013127022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.345531171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.218708887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.155985717 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.011953894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.164652164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.010015475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.262462179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.34510352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.033423888 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.26767138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.216872219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995788637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.187682413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.009865637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.326016472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.141781644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.539576142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.018158337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.177724786 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.54822449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.146579511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.415418242 seconds)
  done (took 172.364032691 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.99528871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.994615266 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995282257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.994348085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.432657993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.993954596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.993497481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.994755008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.405968527 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.397577869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994025789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.421503309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.994499606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.992315437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992641294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.993241859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.558275427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.990152145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.991293551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988654248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.987251041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.25324873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.986696854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.263755745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.545406114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983633714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.98161247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984006457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.989013435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.983958529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.985454081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.97314987 seconds)
  done (took 212.950170454 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.969928309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969965676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.969410065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.967459643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.968089546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.970925659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963306843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959586857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.739427895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.747997403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970283306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.970381507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968090761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951875518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967527126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.951839952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.97366223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.962712147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968420711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.96589874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965619073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.769368311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966948287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.765830649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.957028045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955314213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945365905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960989081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.96227972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961162783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.541415419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947379813 seconds)
  done (took 224.484683252 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.208647065 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.953311444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952739751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861978395 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95317315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.952892365 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.957349922 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.199944792 seconds)
  done (took 19.945749168 seconds)
done (took 631.675488537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.528103139 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.294876808 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.134077859 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.980009768 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.232538008 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.01446942 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.969475369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041647704 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.619163443 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.044702534 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.654409284 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.992673498 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.738027089 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.001967433 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.094654009 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.028319538 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.547010624 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.638420476 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.147993766 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.04763867 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.149816758 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93767117 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.052713569 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.62019862 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.749048611 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.946683551 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.041876167 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.553433779 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.980901398 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.131602279 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.715312489 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279958806 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.986098549 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.969086459 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.028166272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.003485419 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.238824728 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.983847115 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095004774 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.70121982 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.055338087 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.510427223 seconds)
  done (took 106.345148561 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.94053737 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.936847683 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.938697561 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.939915071 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.939020317 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.941266136 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.940141569 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.939134003 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.938715907 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936471578 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.935259021 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.938858332 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.939979499 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.938628788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.936647537 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.938380808 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.936286103 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.940419117 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.936148932 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.935085233 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.938255694 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.936460721 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.955589852 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.935694009 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.937367246 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.939490569 seconds)
  done (took 52.287289717 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.953915149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.111259313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.191206881 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971034708 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.949981874 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.955421986 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.96814149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954633952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.949591586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.948520577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.054502464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95206122 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965556889 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.18426308 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.967084671 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.950220962 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.948427693 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.946526549 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.119921629 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968771656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.968057652 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.954883417 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.96742886 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.964038994 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94904226 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.946031186 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.951440543 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.409949256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.955154366 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.051287136 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027650217 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.969306542 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.386526066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193124235 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.012411482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.957674161 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.945430484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.051477784 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.951029283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944001157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.963701066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.949153403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181067216 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.438984233 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.959282139 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.944774403 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.41775313 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059854873 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.985960269 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957831737 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.183511513 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.964864138 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.945371859 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.944773207 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.979556706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.953125353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.944517766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.295235739 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.959164206 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.962724457 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.950766211 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.945670205 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119519199 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.954711607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.106657881 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95613408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951073217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.94518549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.183548289 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965629006 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.44186789 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960868614 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.9459393 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050487711 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.113494651 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.447996877 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959209864 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117831735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.402943379 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970971978 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.955290446 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.398457766 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.976167361 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.953771758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946888475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.948117376 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.947347692 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.990436757 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962582678 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.375528534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.446773396 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.313827982 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.975564254 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.963231607 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947188072 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.295667752 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.958444433 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.947590772 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175870773 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456312653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.9636605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.95260627 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.430296079 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.964849983 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967073474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.958820585 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.183852347 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.969882142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.99242898 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.947966143 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.952937433 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.950096798 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.967601717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.956951649 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.947288019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.420538965 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.0765395 seconds)
  done (took 241.45645161 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.945196917 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.969308972 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.942885545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.947316686 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.942256341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947448168 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.943630982 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.944197701 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.948039666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941420666 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942133605 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.944301475 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.9484567 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.951772962 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.984689617 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965824846 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.563031759 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.959253391 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.957408973 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.960964321 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.614259821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.968772172 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.955320889 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.977941746 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.95932899 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.955212814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.966349066 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.977436628 seconds)
  done (took 169.891191545 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.967713953 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.079579559 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.984468914 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.991057237 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.976741098 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.964735109 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.990186817 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.979935612 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.971972609 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.959625575 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.960142609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.028876995 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.976848355 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.066283826 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.994508265 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.997040508 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.068390532 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.975366539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.963496448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.962023478 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.994897435 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.960377236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.024449585 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.095303882 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.988125234 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.079094592 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972670595 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.965003976 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.967282273 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083546633 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.982417804 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.026047706 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.995917923 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.986537649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090534583 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.086139846 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.072810934 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.997819164 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.971447284 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.96636337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.964298919 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.952547414 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.082536076 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.987994942 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.969019611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.072816211 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.98897247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.966599269 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.97495283 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.963939244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.981441559 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988356716 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.037388589 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.100798414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.004824545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.995591901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.990681873 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.264537023 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.977322099 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.068165383 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961066214 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085152522 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991982539 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.958493647 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.966596013 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.972036854 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.996378443 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.000254765 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07281456 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.975138022 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066477914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.00233369 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.977933986 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.961814464 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.966697363 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.082091666 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.086661322 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.003466524 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.005100812 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.00443514 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.966631591 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.967782406 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.956525473 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987019001 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.972237726 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.084087709 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.090910406 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.976257806 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.968830049 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.971417943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.968894455 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.993014732 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096041452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00781608 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.064926878 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.035168481 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045101138 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.984998022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.97937053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.973523277 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.033043886 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.984733409 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.981206482 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.315930314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.043605012 seconds)
  done (took 212.968569531 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.452720577 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.022343512 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.026352295 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.281925608 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.325655734 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.900774018 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.019875783 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.021552354 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.046696797 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.210412538 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.095674731 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.035409152 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.010006258 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993655053 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.020282789 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.040091034 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.029040207 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.349715266 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.120006737 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.153922269 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.003130874 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30094968 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.294282824 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.413145411 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.055234069 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.362149589 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.672957887 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.168335622 seconds)
  done (took 64.318235534 seconds)
done (took 849.133498398 seconds)
SAVING RESULT...
DONE!
