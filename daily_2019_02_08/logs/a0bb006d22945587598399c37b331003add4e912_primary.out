cset: moving following pidspec: 15283
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298761853 seconds)
loading group "string"... done (took 0.572712331 seconds)
loading group "linalg"... done (took 7.218893215 seconds)
loading group "parallel"... done (took 0.167160284 seconds)
loading group "find"... done (took 1.156635652 seconds)
loading group "tuple"... done (took 2.007439048 seconds)
loading group "dates"... done (took 1.279320141 seconds)
loading group "micro"... done (took 0.237748106 seconds)
loading group "io"... done (took 0.980548207 seconds)
loading group "scalar"... done (took 39.479060864 seconds)
loading group "sparse"... done (took 12.644721526 seconds)
loading group "broadcast"... done (took 1.014087847 seconds)
loading group "union"... done (took 13.692557961 seconds)
loading group "simd"... done (took 4.659329243 seconds)
loading group "random"... done (took 9.317159218 seconds)
loading group "problem"... done (took 1.977862331 seconds)
loading group "array"... done (took 22.178551514 seconds)
loading group "misc"... done (took 2.024023296 seconds)
loading group "sort"... done (took 3.398379696 seconds)
loading group "collection"... done (took 19.155102023 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533534945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139877911 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117630685 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135354115 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186939096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129647079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126149572 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101169668 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.952855239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160910896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136635236 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.484867544 seconds)
done (took 4.95673064 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.197526943 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086134559 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094470264 seconds)
  done (took 0.858623736 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065111386 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127489994 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06510718 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082610224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065974185 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080391213 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066644977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065593213 seconds)
  done (took 1.237208042 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073965997 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068400396 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084849438 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068016624 seconds)
  done (took 0.980477243 seconds)
done (took 4.025749536 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.924005024 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238813697 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190959564 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45081846 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151847405 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189900391 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664056779 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340054168 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207308841 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073780888 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121566487 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.371859388 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12472703 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6610951 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077770778 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107265424 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161453263 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44905622 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081816591 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083064881 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103243679 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129272649 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105067023 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088708254 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158049971 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070583747 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150651723 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097449039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068444548 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.259028664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172928141 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689580843 seconds)
  done (took 10.486703665 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097325341 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118757446 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068954386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141108212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103612435 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087880736 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072240952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083298291 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093642041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162131351 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115572458 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108052338 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081317932 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070683879 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099971647 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214851243 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108089324 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086463762 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085946293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07651539 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123293032 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083578537 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094403717 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080030612 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152545787 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195559906 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099032224 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112483312 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070112602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098528178 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129899571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132367588 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065607437 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084026133 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157619803 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095532912 seconds)
  done (took 4.551713584 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.072016019 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.17563096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090315144 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154680769 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085618918 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11152994 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083400416 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099416744 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229865688 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.073361469 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098640426 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.473781281 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129014458 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086836088 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067880983 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087017273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06767095 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.515387323 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145049492 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102156644 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102825336 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073765003 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087529823 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354941584 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068251327 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065608958 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085093111 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057601884 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146544815 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068493766 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181271443 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087318889 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089017819 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102908839 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193598402 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09491666 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111042427 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120155216 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066668115 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065566286 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161558326 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092208759 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064742303 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066149367 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107746678 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119328057 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104440753 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084522784 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067511921 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182022678 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066723255 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10066103 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.907143677 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167170356 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095642508 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06570407 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292556767 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084655376 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085572073 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064396989 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268487504 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.177029106 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084684724 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066963618 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065524437 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08607731 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365187484 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067984373 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.608287955 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071509004 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075808615 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08599548 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067129112 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090381376 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073440269 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1018875 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067654192 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067879568 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083519025 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065942366 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068485729 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101824247 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200328116 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069488759 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084728824 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064847434 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103499508 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097948459 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087226904 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066219402 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116019766 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069483744 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067801884 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121146818 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068118975 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10142486 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0850575 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114119216 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086466886 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.129303091 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068291149 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110921757 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071621804 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11612184 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097987067 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069278919 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159119593 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065262004 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064285337 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082707472 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065456231 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083151899 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069342516 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067758358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097134848 seconds)
  done (took 20.785790179 seconds)
done (took 37.576807415 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307240447 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093509448 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093785643 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076207903 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09379687 seconds)
  done (took 1.422146947 seconds)
done (took 2.148826746 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132833907 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120216477 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063885548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114093876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063118815 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119248439 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116619844 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081842254 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11847472 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064134581 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112938703 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064351534 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063920347 seconds)
  done (took 1.994805825 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081957379 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084983027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086655604 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080848941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062552583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097455351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079846918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104785037 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080064404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070619628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07991688 seconds)
  done (took 1.638684527 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080207255 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082911793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085455269 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079781875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062661973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096048364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079328153 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101822402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079803721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071506521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080855056 seconds)
  done (took 1.632263908 seconds)
done (took 5.984849296 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078456229 seconds)
  done (took 0.804454038 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.730183305 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.585230208 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099984057 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134091635 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.213662673 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15438663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.445638016 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109412066 seconds)
  done (took 10.37398012 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113306014 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086095049 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072036018 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087121247 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072021408 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069803711 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084877692 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071919093 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088010419 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069512766 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086398645 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069745187 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068355276 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084822905 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071655471 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087734067 seconds)
  done (took 2.077483969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104045052 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103122502 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090850549 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076021572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09031666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07262401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091937128 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074115471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07165809 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089578207 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075752678 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090887043 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072836613 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081762489 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074475937 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092420209 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071153775 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090424749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075654438 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091331018 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075192629 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080483292 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073569139 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091646668 seconds)
  done (took 2.83697877 seconds)
done (took 16.821280358 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116251955 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087589769 seconds)
  done (took 0.937388105 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081220272 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097702155 seconds)
  done (took 0.918112065 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083387347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081719255 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090139399 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093644962 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06694928 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082238955 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103575909 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066980502 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06684614 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082486801 seconds)
  done (took 1.557250786 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06881723 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095009249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070578403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097009624 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07442408 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081164571 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074493095 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068497823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.094960394 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063445906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087523484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099028847 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071571778 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101193431 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074644423 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085506865 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070512718 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084489359 seconds)
  done (took 2.202494676 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066023522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067895827 seconds)
  done (took 0.87597274 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068163355 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06424852 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082503986 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066878503 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080345481 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063242942 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079646365 seconds)
  done (took 1.249853475 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409386834 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108654871 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265604526 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071901513 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105508908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27870201 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084637102 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071059545 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089090329 seconds)
  done (took 2.266410366 seconds)
done (took 10.740920372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07922074 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084492087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110637272 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41918355 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092771356 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081362067 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130882912 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225563619 seconds)
done (took 1.963398051 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129239918 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617462942 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403929801 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214108476 seconds)
  done (took 1.982760599 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37994988 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090278179 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073175466 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066733746 seconds)
  done (took 1.358155617 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066230197 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070467584 seconds)
  done (took 0.885586346 seconds)
done (took 5.098656192 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066711154 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.116229459 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065922573 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064078131 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084342867 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064281858 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064362914 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082282079 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067082159 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066270826 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082244182 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066393876 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06659618 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083460419 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063965894 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064287761 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082857653 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064157445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064536439 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080667006 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064272756 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066799275 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080651059 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063722651 seconds)
  done (took 2.518757831 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085133539 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08416846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072798786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072113237 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088342282 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072208894 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088172955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067472915 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088322998 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068576626 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086913808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071311962 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069193435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087541972 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068841136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087211036 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07219069 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083966237 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069499937 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087481393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071476827 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06781385 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086907266 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072291143 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087934883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070826253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085586093 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067381544 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088708177 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071138758 seconds)
  done (took 3.094044368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071479316 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063976939 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080951982 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071050308 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06461284 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082881994 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063662697 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064284175 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08241176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064196304 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065420576 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080848452 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064105279 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081900529 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065319373 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067714559 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098408295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065151172 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064379894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081464916 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067168427 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064390226 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081057428 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064847491 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081005998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063864438 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064689364 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080324892 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065787327 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064828546 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084222175 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067708477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06430896 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087893736 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067426818 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064811993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08526544 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064059508 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065278347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080302055 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063966483 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064250034 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080623265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070877318 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0647174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083013281 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064783751 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082308437 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065421165 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067068594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080950143 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064261879 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066131916 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082166467 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068737311 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080664341 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065064124 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064017659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082028215 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064669693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064163022 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080286796 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066960228 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064726915 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096122884 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070780022 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064194925 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081865818 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065432801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08342474 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066433189 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078454109 seconds)
  done (took 5.938803434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11849831 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092347336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08394779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065956045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062895446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081749742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06811256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081830723 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067246014 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08733318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065173988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066060798 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083360979 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079810954 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064824279 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083506231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070403498 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079710499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065180883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068255981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082459777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068497966 seconds)
  done (took 2.44836985 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189440418 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088591609 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10881134 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092156333 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069185697 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091257609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071556746 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087695053 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071274465 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085626854 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06990367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088023951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069050568 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068892151 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086745822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069605594 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.198411163 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069575995 seconds)
  done (took 2.438663831 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078866516 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06726524 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107113104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067348581 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084584048 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070035631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090040435 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076240653 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086731911 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067512185 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092950549 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070349027 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070160286 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084066514 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069714769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083896891 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070005786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067445804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092647953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07259165 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089044663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076168459 seconds)
  done (took 2.498587517 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082007541 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068988684 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103189285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069749856 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080747342 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065867439 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090676085 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067756599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08971588 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068533567 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067262033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082822389 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072450533 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084103556 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072605347 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067328041 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085828726 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067381906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085603862 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063432301 seconds)
  done (took 2.301156645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087021551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085419021 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069197333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093770505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069373601 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068906836 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093531004 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069000068 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08546869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109741053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069116726 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069558584 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093967365 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090348336 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069082831 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094133513 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077505052 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094391996 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068841264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08608076 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092092484 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08589007 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077544918 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085550827 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068297628 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06860677 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085713276 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07341338 seconds)
  done (took 3.045509533 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067443144 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067459551 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081724784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064509202 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065231783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081865836 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065227766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064501979 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083834167 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065157765 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067162919 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083949543 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067511517 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066561643 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083635162 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067125118 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067203957 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081875863 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064492949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064631558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083950151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067572314 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067047652 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081624994 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065531693 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067937875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081039447 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065126946 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066943557 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081914317 seconds)
  done (took 2.915514411 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076628187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073866043 seconds)
  done (took 0.916975902 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064776105 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081476073 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081866672 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071212302 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089010927 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067993294 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092473541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071434383 seconds)
  done (took 1.388123556 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081869824 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078207695 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085452842 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080132978 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094279999 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083169954 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158545785 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085758862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074524427 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065664915 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098450973 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066781649 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091096932 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067459076 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073121019 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091873522 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065277707 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09029396 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070204603 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066854707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08648621 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07917423 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086608867 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065141052 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068796182 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097436664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079841719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086832193 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07069323 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093262309 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073411908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061956009 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08479578 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068626674 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065691043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093933069 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083056902 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087509091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07669505 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086158244 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077649448 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080213415 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072473039 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074144227 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094684954 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067901265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085801094 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062880477 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065729253 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087133466 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063429846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084738104 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062840442 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075349801 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088468482 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079428881 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084159808 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069763119 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071065257 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088373611 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074420187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087732296 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070993724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067963674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092481409 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072105324 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095010542 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063265394 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062236687 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083514895 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077841954 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107877168 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074955644 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068358838 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086482637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066167381 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088949732 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069186196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090588417 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073669189 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067973513 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090658308 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075746626 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085077808 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070225268 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092969815 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066441946 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069875131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082959947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084382289 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083582986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065988459 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066401788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096237126 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07072895 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085558342 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065713955 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075562288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079214309 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068889295 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08581552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068321213 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078724048 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089764625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073077157 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09403894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074944116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085645177 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071303733 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064499217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086357832 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067002161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092658711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061866219 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071180138 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085964379 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069284817 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094201864 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066361471 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067938913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09258995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073173615 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083573243 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065060239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070494383 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084692472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071462122 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093568198 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066612324 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063000489 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08073791 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071643453 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068437077 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088756833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074118742 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087847027 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062780288 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065914447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089668784 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076532675 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085560664 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068572219 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091141633 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069716517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067025934 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092256812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070350851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084643265 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073597616 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068577889 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081621683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071047302 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088140016 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066488013 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071595827 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088345478 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070535263 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086139858 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066394597 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073153479 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086397363 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067664625 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084867284 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066614665 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077990209 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08759191 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062876003 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082443792 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074933659 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065653869 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084803768 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067207154 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086909684 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068715495 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066321703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084514808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069424181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097163902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07226659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068834205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091019795 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079322555 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084903187 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07022664 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067538522 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086441626 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069580913 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094629428 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073133656 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090305144 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070765954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064808858 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091657622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075732209 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084787419 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065686463 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066569927 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089511082 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073916353 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089019433 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069644636 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066444039 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086795403 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071092714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088199559 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067857293 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067356784 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090551794 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067878932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092226821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068599614 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095941878 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071629778 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063313696 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088706403 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066232854 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091552126 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063581738 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065786904 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084793227 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069435811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06630986 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088262714 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062465895 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092238694 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076276526 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068207137 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085506336 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067827855 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092620158 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069587654 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072013133 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088880224 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074606978 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095431913 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066936648 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071440065 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096243347 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068450126 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079742386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073366959 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06679501 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085075687 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067162904 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083265728 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070772026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076023091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092855677 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062169211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087932957 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066281106 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066489216 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081383487 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072048429 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088738664 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069710297 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074675351 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086610526 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069005594 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089373425 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068401629 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068511465 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08698629 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071261626 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086545592 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070461331 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067028099 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088865834 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067185911 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06655674 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087610133 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068452208 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085338345 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074267532 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067587095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085957843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070872745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086876111 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069193744 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069077856 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085518501 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071664911 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068407637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08583624 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070441957 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080722396 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075387803 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067377239 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093564903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068683467 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082535075 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073221338 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070530593 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090757869 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06902125 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086530251 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069445809 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067576861 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088455367 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074545643 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08311571 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078578347 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094138531 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068540039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071215892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085659158 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069714171 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067567031 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086242368 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069074729 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085757338 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067915184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072791421 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08870781 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068424968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087608723 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069704318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068655678 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087534703 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063038955 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067076569 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0855259 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067653806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096285551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068677537 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084891184 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067440089 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068642831 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08470698 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064749986 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094287806 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077082537 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0685947 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093221894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067069618 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087916426 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0787962 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0640794 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084366452 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066101803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083253977 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07581187 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069452724 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095643996 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067774847 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085262649 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065973484 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068869889 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085283628 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062604193 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065832768 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089451549 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067262074 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08494822 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068917146 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071297262 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087212906 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078558411 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08537167 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069086898 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068652335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084001639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067252869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067890967 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089009495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069059614 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084489543 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065446904 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067741623 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086742759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069727229 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067753067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08837343 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075434255 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08622806 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071663263 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089500773 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062993034 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071485969 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086287674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068379029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066606066 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089329584 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071967196 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087203062 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077691328 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067433107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086824426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068368759 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083839004 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068102583 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068179946 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085944121 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067477022 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087354627 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076703912 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066328468 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089660784 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068049371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068639111 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093588186 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068345042 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08889188 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075818174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08627671 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069758997 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075481452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089973115 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071965541 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087450037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070502435 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09168456 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068073374 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074846802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087435558 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069237534 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069899909 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084840443 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069072855 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085988605 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068063648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073743151 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087566459 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067869977 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085469236 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066713294 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069073449 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089778011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076018662 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088619502 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071549523 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063786588 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083699116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069531877 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065879579 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088177672 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072021434 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093031981 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070532416 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068766028 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085219154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077352855 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092231244 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072871727 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066443177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090436727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069615341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088591314 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069445651 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068248479 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087933894 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07276383 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08763013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067660581 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076123985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089546649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069574195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088010703 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069050757 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068495045 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082300136 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070050119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070159518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092685672 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070860945 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08651623 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079559482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0654854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087073623 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071870405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086400999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073343161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063356611 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088335247 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070358286 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087971693 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064323657 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06797987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084849949 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070979331 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067723623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081840472 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079125939 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096347436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071145086 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086157618 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067920376 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06418839 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082066154 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068252312 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069396203 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088705497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078514812 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086736467 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068617075 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063627996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087192521 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071704168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089913376 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065882725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063925753 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086280174 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072341834 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073222525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086495701 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068370456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090272092 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071420051 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066384702 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090226943 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065821194 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089860593 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081884173 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087166828 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069826 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074792587 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094653137 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069141815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081675899 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069518165 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071862618 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087908914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069729356 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08787983 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084331126 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070708269 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086374239 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06712329 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088690651 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06789981 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076084384 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088267394 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069131992 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091894682 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070989534 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095231162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071873102 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076338273 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090323603 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071244548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085671272 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069084483 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066592575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085476186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07006675 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069045155 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092263023 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075376115 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086229363 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079066889 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096288395 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071034781 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083645461 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067878285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068162859 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082627233 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070302974 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067060294 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085714068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067222292 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067107226 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087874131 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074034928 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087732027 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07016496 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067837392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081444627 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070903604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089852033 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069611517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065783728 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086920007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069527869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072735659 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090640676 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067058322 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088838926 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07051995 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068901716 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082778697 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075258188 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067086764 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090577757 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06828815 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087120474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069572567 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071594077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092437244 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070164524 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089498486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077342671 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089287646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066584622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065862526 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092161783 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066682457 seconds)
  done (took 46.8906001 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108968958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084194244 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063860261 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082363257 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076441841 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084587645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064714886 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065285794 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083475015 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06801441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063411466 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08247911 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074022054 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106487913 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095388609 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068611966 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081729385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065222378 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064282342 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084019304 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074656922 seconds)
  done (took 2.453594305 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088361372 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103095008 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079637474 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101837873 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073117581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099340428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0976965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080654881 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101040704 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075839762 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1014352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098507801 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076664809 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093850124 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075495268 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096533303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082699955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093220865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080606763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098400545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077142455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098230916 seconds)
  done (took 2.78481936 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069162841 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068492166 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08831532 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064001658 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067790724 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082753356 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072692015 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065727585 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091655305 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067620894 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08586765 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066977835 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06959567 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.093353843 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067611706 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065968232 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132676836 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090785867 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068517948 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08822097 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063476621 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069639888 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083604981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064053688 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066660535 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090221035 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069464327 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084540506 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067996263 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067257286 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086917377 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067110279 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069258573 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087433675 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06744112 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066691811 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086492915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067822975 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082736 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066009079 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068738597 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082614726 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069263617 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069332656 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085068209 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066285351 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069063287 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087313115 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063719647 seconds)
  done (took 4.516466584 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087532301 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142428159 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089843503 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105201862 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102890596 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094627838 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072068072 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124648719 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066222638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087253088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085313542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10264799 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068077096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093687215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071721229 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086517392 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069730296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085604561 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072470896 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086483852 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073131501 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093512607 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08328759 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101058372 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072051503 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085898102 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0679265 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091619103 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08165584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091735916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073538484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092751309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083820068 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092475369 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067481643 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089639086 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08432965 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087441682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071136075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085554415 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070419171 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092089928 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103260623 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068555726 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093186989 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068518522 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083405448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082110356 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08955586 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076711605 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101609988 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072885128 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08780403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072830757 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102310918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068162524 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086046672 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071573919 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099329655 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066791421 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091356079 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08265332 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089106646 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076208308 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101454748 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073554925 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09106434 seconds)
  done (took 6.740743658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078039579 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0940122 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082961377 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10254743 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074699569 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095339833 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092925377 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075586393 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093616221 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08007604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094000138 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115421245 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070505657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077486528 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094650981 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094609804 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075216267 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093787471 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075703345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094089881 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075207132 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10320871 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074479941 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102396781 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123922828 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070510461 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093423336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075698689 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103200412 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074077967 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106110254 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094122062 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074962916 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103646304 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106156426 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075198206 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085889708 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074897879 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093876593 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075299956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089070723 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083517688 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093556972 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070656374 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093529268 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075495391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102573715 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106586992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077606814 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098230261 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075048171 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103100143 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093044656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075082621 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102530029 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108873882 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102668917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102377156 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07559733 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102779964 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102060764 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090457207 seconds)
  done (took 6.388272244 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090402968 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097031675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079007228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084129028 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067075349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092630803 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066545262 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066263713 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097404463 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077202671 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099649303 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09124738 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075881386 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099978897 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072714277 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095918933 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072507841 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092318374 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076643687 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092433471 seconds)
  done (took 2.514355137 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077655441 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105458712 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069431076 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074687707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090931033 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074762174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091409636 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071719936 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088236793 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071985043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098260417 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079313728 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069173506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095154398 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09840326 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075460675 seconds)
  done (took 2.160953738 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08044168 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09949757 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082859363 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0892535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067805977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065154842 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089000218 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064740351 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084796815 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082859869 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088357275 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071347471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067942668 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087517571 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065944369 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090934758 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065703837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066686074 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087657553 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082503914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098585884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068137421 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088178624 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070409548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068462084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095470505 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068377522 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087002248 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067449456 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088451971 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069886723 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095745431 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066014771 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066949558 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086659823 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066867226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087626931 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06908693 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07089532 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087892436 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067184979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087546792 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068426049 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069037885 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08459471 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069472737 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084270848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075688476 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066351451 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088139241 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068994841 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090738179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070394151 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098415166 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072905565 seconds)
  done (took 5.142704922 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083216078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071741918 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084192123 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067159173 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091192446 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072406185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071834084 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09035809 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071299281 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085588776 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071151062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071477224 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090578785 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072992369 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090028056 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073360811 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064660273 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090304192 seconds)
  done (took 2.246674627 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074700608 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068861659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096126188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069661798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088286178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071708806 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064973284 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08750283 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067615451 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069156643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088278532 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071443411 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086345997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07138878 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069472284 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088698125 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071707318 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066886316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08898658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065248388 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090894848 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06819591 seconds)
  done (took 2.516769376 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075400908 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094889366 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16760487 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110698855 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085576851 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102561854 seconds)
  done (took 1.471640107 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09384149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102055646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070335382 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089730271 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098461124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070614935 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091820193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07057876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099675667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10455483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071434147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100731878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080137845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102253525 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095933404 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077472949 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090782725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072006436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069247267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110299832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09146467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080061292 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090853227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070897811 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091566469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07931376 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09971789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104156399 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071488921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098868684 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077914786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090068602 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079852584 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104274718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071165632 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1007057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090728337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089436878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09592193 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079078967 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092208985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077039616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09933595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095349754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080081788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090393294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076057425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092769025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071932763 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115731719 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096680499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080326047 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096771259 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080005248 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100661943 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116672616 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084649004 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099696131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097163447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085703618 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098708874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096865042 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079632897 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104656516 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076597041 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099788272 seconds)
  done (took 6.741643409 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085359852 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108527743 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071433041 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10432367 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078796254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092134585 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070868237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091245372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070503969 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090731779 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133476936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071584676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099242184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079240691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091891324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071014446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090846275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099251565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070912857 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115980163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071175575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099682681 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098288422 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08015346 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104486981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077335705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091450419 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070423574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090887268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070903091 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095967004 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070333273 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099475145 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070468314 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10045689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090517811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071590673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095767911 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072366109 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096630523 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080057328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10995145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091076308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071432276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105324726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072035216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090905126 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071447715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090726338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071800243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104432509 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084134144 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104668928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099503728 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071769757 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091132395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071415437 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090872269 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071752491 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097184082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079613141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09157342 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116363515 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071520871 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091132735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080461088 seconds)
  done (took 6.617165611 seconds)
done (took 129.434870896 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201928356 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186943353 seconds)
  done (took 1.224290174 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07127769 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098034598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100170798 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131086355 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089690359 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102944834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10150856 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101668794 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070393096 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089069513 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070068171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071030068 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153763965 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069936603 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069011835 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092069333 seconds)
  done (took 2.323153157 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097414438 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.20079728 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083082795 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088801464 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073197922 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091797111 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067783964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07430496 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093638937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068712181 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071941753 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089890961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068904212 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069443029 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093383779 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071882953 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087934864 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072828515 seconds)
  done (took 2.407327435 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096361321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111972732 seconds)
  done (took 1.053352503 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204263524 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125249599 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208668762 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.427453164 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.24892557 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283716528 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179501342 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180380178 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154717319 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174817483 seconds)
  done (took 3.028781418 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101656346 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163448933 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274196453 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138933816 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11013971 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.087911499 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138400517 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092195502 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105133957 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104549754 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084775316 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100108057 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09916765 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098025103 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077040868 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099897858 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102609158 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.096832343 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077473935 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098593165 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099843326 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089358519 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077905388 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095825942 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081414184 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101468017 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069660643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068558363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09840342 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078087303 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095851907 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086219085 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102109421 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132847972 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105173776 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134858944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081310431 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093990044 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077403286 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073270578 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100993418 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099926464 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086702272 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099721318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068761881 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079313333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089074473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069708709 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.095993 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081059426 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096436228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07618292 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133319877 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.100693417 seconds)
  done (took 6.216022902 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760955184 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113361663 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098057078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.825430789 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118106662 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08710228 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.723995397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118223979 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213411331 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.725692421 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115003485 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080171968 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208615913 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219070164 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95554449 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271778757 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.614173986 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108108475 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110977177 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136047546 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10229307 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097364296 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114487596 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411616092 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077371438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095465241 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080849724 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101941057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142469181 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085990654 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097352706 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158178712 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231722001 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182979373 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077895647 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072436609 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094788283 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152704643 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22349451 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193526815 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16172496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070804296 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093957345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084136609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114965829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070973932 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142964866 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155327622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.15078416 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097770655 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080063652 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103201014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.081167317 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165583401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082838675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300306854 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.26906573 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094600607 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08227469 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1085963 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219262826 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106432634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202433081 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101566718 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190311968 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073369679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779655213 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.150265889 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074110227 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099448034 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081158726 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098515252 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082882843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148282548 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373858981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084671028 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0974797 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07334652 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221276912 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086326151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072372654 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164424668 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07808316 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103485509 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087245558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107525823 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.149984001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21682663 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083810526 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102795662 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076680222 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108452063 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076477029 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194394287 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197323868 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142011066 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193934927 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104372407 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145974246 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150431568 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101943638 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153408319 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081097995 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105953965 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083420269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194818381 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126389873 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084086913 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097505307 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08044008 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129547335 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108512474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080354382 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151366838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458553159 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150721792 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070780394 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110106995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08210868 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142677605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100073254 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220550705 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104420432 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.150540064 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080639301 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091356737 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.08196423 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144462005 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104817207 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082702007 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105881688 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079985685 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217298205 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19607081 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103424152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201081924 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164971734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0789616 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151449054 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104213757 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147296948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079568838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104012424 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076399186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794275589 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10615793 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081487602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097698686 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146638671 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094543422 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085701179 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106892119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070670958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78763669 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087646497 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10284607 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084568398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100286059 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081169396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10099283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07704072 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140529192 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206414452 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101532261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081130546 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105900131 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.141514135 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077596511 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107212243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085292216 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107303694 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082274074 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098448182 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084607544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148232678 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163116234 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.176417998 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567944218 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074554392 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106889925 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183884743 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094269927 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245322286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102183371 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.180948789 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165436147 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082484963 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289002128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.145584816 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.167914803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088170934 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153251287 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091474548 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.079674075 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142918561 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094926529 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079388893 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143601898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107507767 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083046573 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961331107 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074088941 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206870672 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092090375 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153862866 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076790464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102791938 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275337917 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074842112 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087680865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165965367 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076646006 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106641156 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674385034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085709986 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104687186 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099884781 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177820403 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144344811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102518425 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080598408 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102007662 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.143639399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192573106 seconds)
  done (took 38.978318565 seconds)
done (took 56.069710489 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235018043 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197114923 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.229848184 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152402173 seconds)
  done (took 1.772612438 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.13135045 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.130432108 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.130298179 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068097259 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.132784007 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068007363 seconds)
  done (took 1.528355983 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317835283 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277374577 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202678119 seconds)
  done (took 1.666674821 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268676446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226350233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449501608 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278614735 seconds)
  done (took 2.213209752 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.187908755 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11389613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070792746 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.108340991 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154357124 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222163964 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124280655 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156698947 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103242338 seconds)
  done (took 2.152479441 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15441207 seconds)
done (took 10.348171589 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118944586 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.276001709 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.146357999 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117047771 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.196316934 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07536167 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.175574433 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.225861087 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238827892 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140442578 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189263821 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16675066 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074055278 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103847029 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.247148917 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15824302 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10018159 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064998883 seconds)
    (19/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.200823722 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078815945 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103908482 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081761563 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.130355873 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.171940726 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106631928 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.163603165 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05456584 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075484335 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216230205 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.17176833 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07707808 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100102223 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075987702 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075873884 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.206578453 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.166612116 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.184327311 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143304694 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131402357 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069090903 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118586188 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118711102 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076377798 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080496452 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099291902 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099119581 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.17394647 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093120708 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.226348601 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.114311518 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076587081 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.180888886 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104236353 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077389771 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07092561 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.076240131 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.167650285 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093193369 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.142704979 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.131269842 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079478291 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09903662 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.139245846 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.132170358 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064987321 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.078875843 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084527391 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120061136 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077554479 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054685111 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091496672 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.075602556 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078610207 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09115363 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075182184 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068164153 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096722607 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071380304 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.091037292 seconds)
    (80/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.11050209 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.233987429 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079148324 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17476704 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098379572 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119777509 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120674883 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094442307 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091526979 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.140705826 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117180988 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.112325839 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056796834 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100122213 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069539798 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053895189 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097135639 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100825872 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098977958 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056235457 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069364063 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120333703 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112193964 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146460722 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137140027 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073834133 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102006107 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149998753 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109225027 seconds)
    (109/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071642651 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169918442 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149714447 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 0.155211552 seconds)
    (113/309) benchmarking ("sort", Bool, false)...
    done (took 0.161906655 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078043649 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.149880829 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075785556 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099809166 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077001782 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069119627 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124259946 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074861838 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.19352399 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07471286 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100092439 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113366266 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095172829 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079048515 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05543912 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100044842 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075899269 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194975869 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069857718 seconds)
    (133/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.374856071 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094175002 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101696806 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.143020725 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094931247 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054802753 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174318325 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069215314 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076885842 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197545283 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076349114 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.168339536 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115912641 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055566417 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073408712 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.092858638 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.151009001 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07867208 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07753002 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.176786133 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056999036 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054400032 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077229711 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107435454 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161840167 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086238909 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101185375 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056281563 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108848552 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107336799 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073573407 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123441367 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.150366569 seconds)
    (166/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.089243212 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069269286 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091046952 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138193872 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074941365 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170962785 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068652031 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.173096019 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054205653 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.078291244 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117970275 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128033201 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074610549 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054875315 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090817808 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070432334 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075757128 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107105799 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070104399 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054392236 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117118486 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079256471 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100832946 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.134147368 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194104338 seconds)
    (191/309) benchmarking ("sort", Float64, false)...
    done (took 0.152754535 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091524558 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135462768 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064353332 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203341291 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068000644 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130321918 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075948643 seconds)
    (199/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070521118 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079077648 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056557547 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068088694 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139068423 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065143071 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072228958 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106110919 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055929544 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056130242 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11695224 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076720909 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068690623 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079247711 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103135651 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121606759 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08101045 seconds)
    (216/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055441916 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15037085 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076912987 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100991974 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070408285 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134828864 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069973451 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056357581 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091285895 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054742806 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19276477 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074724297 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054535863 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078687204 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054699422 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08378434 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092201087 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078587677 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068271957 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076872631 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069890049 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078017127 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091408126 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092388587 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.117682462 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072305515 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055687238 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197364359 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166622443 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070149364 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203992939 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057232597 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129782601 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056534976 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070358079 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079499727 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214031423 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072435177 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144396039 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 0.168467811 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076176734 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069003768 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078296942 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056449149 seconds)
    (260/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065906628 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098324865 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055283257 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069812835 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099809317 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065591742 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071798237 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113158128 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089971375 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075062779 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091086799 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.18100662 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055181821 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070830166 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092306294 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055803818 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056287095 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116167474 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054849214 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056159463 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161173657 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056434697 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056545111 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10143331 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090226565 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076934036 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091076454 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068639571 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115452867 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151662153 seconds)
    (290/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088305832 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09408974 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070480846 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079702492 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078209945 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.162473168 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054845527 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055930206 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097721827 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054952315 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09353568 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078814685 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071583405 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161202186 seconds)
    (304/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073044271 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069085724 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097685021 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076687426 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066393819 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168083831 seconds)
  done (took 33.912217482 seconds)
done (took 34.775082639 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082216606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092869123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101050052 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093570797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104656503 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078285349 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.099636229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079920535 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104115058 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082908788 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07982671 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.08101915 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078739875 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101164455 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078500393 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093421378 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104840631 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076022813 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099796517 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068310434 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077180051 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092021784 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070740286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057991369 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104248517 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076345467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098552153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078554901 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069822243 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09224413 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072523932 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076345859 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092818306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082927632 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075610465 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.099612661 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079306291 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10204766 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070886899 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068885067 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100592545 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069558789 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075888752 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100122556 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075684404 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09670809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077643709 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081114932 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116438229 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071637911 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100360301 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07958706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078149394 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099697146 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073415788 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100726078 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07456237 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093995638 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.101326449 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072299653 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100277173 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076873103 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075668264 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102429168 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078093756 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103921045 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081047935 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075464887 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10483662 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074861182 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069741556 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101178483 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072753575 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.091612406 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079750425 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080658055 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090906135 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075395572 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076905668 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097609118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06891961 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071112458 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094230559 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075575509 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07062789 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08113132 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073407183 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075580993 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.091056 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078200906 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098585214 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076137401 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071132282 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104412493 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069352666 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075242215 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092941157 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069610966 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071069385 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096053205 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069709264 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071705497 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101821066 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071537367 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075137263 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104429817 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069260206 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099135074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068722537 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069547714 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105965637 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080014484 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092342386 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072540016 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069018596 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099560816 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068964259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069370588 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092233505 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070062844 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076166681 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092922393 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071562541 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076919083 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106417805 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069434592 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072768715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094855143 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06999801 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074249521 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092884035 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069681845 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094330499 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065591364 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071784095 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092767398 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077195834 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074717252 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.1007679 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071211107 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078424768 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097168472 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075846788 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075414804 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091519447 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062411383 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072148798 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094846944 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071403041 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069624623 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094397958 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069152964 seconds)
done (took 13.581777601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070067316 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16544343 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108501237 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12277117 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113629379 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069909255 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079556542 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124270462 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071715112 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124151315 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092353077 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113387936 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10487604 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093300014 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070218492 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097177316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071324787 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084353822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126926012 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090147179 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144154055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0922816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103678495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.116724438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.078845574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.119770707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069939967 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073278834 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096375736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085721728 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114667884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073277423 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070759394 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114841705 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086818664 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101374797 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070295528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076565027 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093027205 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07057676 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121840641 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091223094 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098572241 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075261015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096885849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07305814 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071780027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102910903 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080447698 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074065142 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107365958 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136129652 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073516058 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103367738 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069231688 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.079917241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102518375 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072608162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.093087245 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072529799 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069749516 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096171466 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085044218 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.121774418 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074012501 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10282766 seconds)
  done (took 7.111198401 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086127571 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096864299 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111048586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087073021 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093247603 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070208014 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093473245 seconds)
  done (took 1.566988719 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07082435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092441406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11703003 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093571854 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113170174 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090859992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103744564 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07091226 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08776359 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095795455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091119393 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132895909 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072455163 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101042545 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09501231 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070848478 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117624348 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071464282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096879094 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094136967 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096182143 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092174974 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072554904 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094595055 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084927383 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070984957 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14251244 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099258606 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072012292 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074132406 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092265755 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120763041 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108620725 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081867163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094659933 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085272623 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084961763 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092191541 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087053249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099788646 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084467587 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071564757 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096046679 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069465482 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076126871 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104618393 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072166301 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095802855 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074415669 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090060387 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095946142 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084351695 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071242123 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.098874583 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073276486 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099958484 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080979347 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072259588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113959413 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072856844 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11189317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087325589 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084179739 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111311922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074011723 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1082996 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084904598 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073520038 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096851057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074537618 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110966443 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069633521 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072860053 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104733165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072627516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117272971 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094735963 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072666339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104921176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071059557 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070930132 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095487237 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094159217 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099024361 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071479599 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075276181 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098041262 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068751296 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070252465 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098870476 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069530865 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072539279 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097999721 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071340077 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097845304 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088113598 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071786467 seconds)
  done (took 9.567235721 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072678801 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07170898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096731321 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073194231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072739772 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096466195 seconds)
  done (took 1.426630105 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095424989 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097347931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086308519 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077416785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.135767576 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085875153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110530156 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07967082 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113123269 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084326913 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109734246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086732283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116015806 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07752006 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109323166 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077204701 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10969489 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081234677 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083850304 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102506229 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09270119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10166055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078659218 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111043334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075310366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101120608 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082254178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108218859 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083914633 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079539598 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102193091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075151105 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09982015 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078742039 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11043939 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076376416 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101229498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076389811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081820907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098680851 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087566154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102350535 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083567354 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100027984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079262326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100551612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076002904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10507673 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085406622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076510582 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100495387 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07676031 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099139034 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075998597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076645591 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103605853 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076094739 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110012476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077540184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100491389 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074448443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09923019 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079801626 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075086886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109162937 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075873554 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.1004587 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078435646 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102396036 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076849985 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099706993 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07509735 seconds)
  done (took 7.514815819 seconds)
done (took 28.106196514 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652930467 seconds)
  done (took 1.590407856 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.728773327 seconds)
  done (took 1.668939527 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.501677719 seconds)
  done (took 17.441287326 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.47116911 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.537905149 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.778069165 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157440088 seconds)
  done (took 2.88456401 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.895753086 seconds)
  done (took 1.855555468 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.223974007 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.210912143 seconds)
  done (took 1.379209239 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73991386 seconds)
  done (took 1.689801825 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.324916218 seconds)
  done (took 2.270756903 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.307111946 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140776427 seconds)
  done (took 1.398113645 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.531375837 seconds)
  done (took 1.486904849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.613672254 seconds)
  done (took 7.567660768 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215117653 seconds)
  done (took 1.181432266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267403649 seconds)
  done (took 1.228522858 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.422190642 seconds)
  done (took 4.377705049 seconds)
done (took 48.963751938 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080378048 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084047223 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10802605 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080806954 seconds)
  done (took 1.303297802 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082020863 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078140442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106420602 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076888 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106988863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077251981 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079158424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.106439751 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076992351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.10324581 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07755585 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076733294 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10444619 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078981455 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.099539992 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079978636 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106075311 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077297859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081435837 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102451347 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075650559 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.10404076 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080334435 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076831985 seconds)
  done (took 3.077432924 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080424365 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07599492 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101910065 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075433211 seconds)
  done (took 1.297374058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08219582 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097014757 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118743689 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081653264 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.122545267 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116327508 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073837293 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073815523 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100078887 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081491362 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072125112 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.128440208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118227113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081661259 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083973377 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.094908697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07356069 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117467012 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08203667 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082060401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099584261 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081453324 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072459961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119832329 seconds)
  done (took 3.219901736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082003651 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106029546 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108358847 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09387065 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122435219 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.07010136 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106658064 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095972568 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157682036 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070669619 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100008285 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070466732 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077105403 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.094403654 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080914284 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138980583 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117181287 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.098058434 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100325897 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070425746 seconds)
  done (took 2.927353935 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079938083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073997508 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094745593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073238038 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081268405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101987327 seconds)
  done (took 1.474587712 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073292815 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071227715 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095899651 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071308772 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076013441 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096180097 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070759147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071662509 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095621298 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071376917 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071517795 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094610575 seconds)
  done (took 1.922865292 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464300499 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073768558 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098044475 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070313685 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075943709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095818492 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085162842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072696542 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.12112938 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071138035 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096884946 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073731518 seconds)
  done (took 2.363253645 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214553116 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105921355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241926134 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167832477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137593416 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150016445 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13198178 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119229198 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201194029 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136996603 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185127906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17323498 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130420304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169673217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118281642 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10512623 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175862343 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220368384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135123356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183140047 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179068628 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144736926 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158721107 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131458755 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093017709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149162267 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101730083 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085755686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211454516 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156811375 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167500118 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14325797 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125571627 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191418961 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226391802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174460829 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16669382 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11510763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.129552352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14598301 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243375414 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093902435 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210651886 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113678316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112195637 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172244289 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148296704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1528565 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129759848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093918613 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19883851 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190923841 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170441066 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117899857 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116034782 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139867456 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145413947 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131707481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227181706 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178933531 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159221715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07605419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126320841 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17065525 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162201937 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146390726 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15869133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124984565 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169378702 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165446924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144102238 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169451479 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.162720973 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118407015 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148843826 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153502329 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149254542 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205649612 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159318358 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102416092 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146032598 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103084715 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110804423 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173305582 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080534719 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191314978 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12947365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119660212 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116594452 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140101433 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140019776 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175826836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169262217 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127157271 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070047306 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135116748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.136206114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167056336 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092910602 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138410737 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139924441 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.11009443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156391089 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079437855 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155490662 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077138836 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153725134 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184755787 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081120235 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138159312 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10599225 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128404878 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155782058 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176938772 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121126998 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087352083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20969101 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153072606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102498543 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158504342 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177861264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127446867 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128686849 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176785334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221001438 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094283859 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181584882 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133548822 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115528273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093181522 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15751532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136295167 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1413604 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086671316 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158691446 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213355258 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079851658 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118191747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166176003 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086932733 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112004947 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139610792 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10121268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119005496 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126214324 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104500687 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158709025 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156502607 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132077902 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144660188 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130727136 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22910285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094173235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129654207 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101306409 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101034116 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170442063 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176307101 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111163176 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180919925 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149812968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134875076 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122761362 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114460155 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156029816 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084649052 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100688504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171880058 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145404896 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141294222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174462829 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107282935 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184723572 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159749012 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151593278 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153009283 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.116799331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138924108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118466542 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111988563 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143845902 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104099105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095075316 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113632726 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135867183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095938778 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114364985 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176187144 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147021086 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128525663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111296734 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128610402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159372319 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108509776 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154779121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155752509 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100410524 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174745 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194995622 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166484936 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096872681 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210213295 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075096483 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105558674 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096389999 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148864525 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114441859 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089178108 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147195378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15933373 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161121516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153970001 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142944054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153986562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168738864 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076414638 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14865804 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163456668 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154409378 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.140641144 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117880283 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130892148 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128216978 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134573957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232073747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145625206 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155259252 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186480892 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128664034 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084969446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130347511 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162972032 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13301914 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154765357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126640043 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093970963 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139730581 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08590702 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137715956 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186283369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114547684 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193304016 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103763768 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160498173 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107967434 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143737076 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137394982 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11738546 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09459836 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15338173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180092148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126766146 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148208418 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170519338 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085018618 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155491708 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214571082 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172142366 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090491182 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137510585 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139278442 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142794614 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150465296 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128959683 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137924111 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16669481 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136676531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116099585 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093220314 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129815871 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103946642 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.117975014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127677726 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15435688 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092241088 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192475682 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113016987 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136743729 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149270047 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129115096 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098105106 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1298227 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192383652 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151956036 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214715585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102731522 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156327096 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180271853 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105758437 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085220679 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113247495 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157047413 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088304011 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165386502 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126815925 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135719114 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158762273 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16980412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093315346 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100725177 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108717134 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15042358 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143104813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131753854 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137021098 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183503719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126381594 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085806191 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149638123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136108755 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100551023 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173126187 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.09326264 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101383973 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107796437 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087322203 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143011089 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18171887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115350764 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.138152738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145961551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146878331 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143874914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128450694 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101963013 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144252129 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177404417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186748195 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.085809381 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136194313 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153310297 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173349388 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140393112 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092769956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206152318 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171090459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175861749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094632086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145344356 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145763274 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136205994 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162320843 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114478984 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182555419 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086866072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201676371 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132448829 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094980193 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151660585 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127413552 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120572938 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165336116 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150883053 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089515717 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129086276 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146338593 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1570632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108918106 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10704045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157963965 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077856627 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1949607 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207851536 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113042397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106938048 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126916484 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113235427 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108579312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135920339 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118619016 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.117399983 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179700462 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113568952 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167566757 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206924342 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146228362 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150933476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097308011 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670247441 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.109406302 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171762398 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106806972 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209700329 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102336935 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149137195 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137037311 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146470484 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171792062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138202297 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210243235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17025524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154788199 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111181946 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110964187 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139069318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.123073785 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130896258 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118155585 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137260162 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131437599 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154698804 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14711725 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086235333 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120002334 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17514604 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133319684 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163458915 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157404954 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091546246 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149929886 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160236146 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112703982 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156954795 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210389238 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094459471 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130326644 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085870435 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134238519 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235100428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0778871 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175314411 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152431138 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136458614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144337812 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125721288 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166688548 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136272695 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154703319 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097500095 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136352183 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133977574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116167925 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083398234 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133719072 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14434433 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100860436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136215732 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.119289141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190984649 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078013738 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123152568 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107914457 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165267769 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218350177 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094378886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115845145 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140487106 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103005559 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151403718 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154697361 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11469131 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087601464 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115644981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116339192 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121588757 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106665494 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133221445 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143049716 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181476533 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116928797 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255953013 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093241368 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132822565 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075361114 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111391133 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102311731 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125777332 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136604843 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101871056 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236223301 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124801636 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086817939 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12716258 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078761596 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115601327 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116558148 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142203624 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156403884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125096834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067037788 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136882445 seconds)
  done (took 68.304394743 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149456819 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.125294707 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138392286 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202669573 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169320098 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266049027 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205648498 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251727715 seconds)
  done (took 2.545745798 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075471029 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123758469 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106021902 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1147287 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072298246 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0979898 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.305415953 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111648653 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072020871 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09355773 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.150824437 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075192331 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485389787 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07081123 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101047929 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090581377 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072846299 seconds)
  done (took 3.258672935 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436827477 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669162403 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475490701 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078356623 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.999684594 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115035317 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.57580281 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.173882845 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097788566 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442671198 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.738575845 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141774968 seconds)
  done (took 17.985798922 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080374364 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074495314 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11501517 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088832259 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077140459 seconds)
  done (took 1.483175161 seconds)
done (took 112.109449386 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08635015 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.371457882 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059099042 seconds)
  done (took 1.506147748 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088455471 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089388577 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117450227 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088086628 seconds)
  done (took 1.433627491 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079664863 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079971107 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116183283 seconds)
  done (took 1.322690399 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.30089729 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141424951 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.121110812 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087272445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082543985 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110106982 seconds)
  done (took 1.32522537 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078819492 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081050617 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105033362 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081774759 seconds)
  done (took 1.388959446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081635474 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057610036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059461416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087537827 seconds)
  done (took 1.335096793 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094410402 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083546587 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111873433 seconds)
  done (took 1.332796362 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110795556 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117668159 seconds)
  done (took 1.275518096 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086098477 seconds)
  done (took 1.130223865 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098644221 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148548235 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168431947 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142841157 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178708978 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142759701 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093056998 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.121206339 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109432376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095896838 seconds)
  done (took 2.348424023 seconds)
done (took 16.087513541 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083890447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396356378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367334836 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124014637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675239764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361186281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011720654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097257756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141232852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072904522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116619097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656127001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038030084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328583556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025390929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.329351611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654383557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100693367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07351308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073211182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994824545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072440822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099365578 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07365171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653737286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404108888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072878299 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351782615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073239381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074892931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38733093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073607868 seconds)
  done (took 16.098933368 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076039994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151187275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079635221 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088639077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103388676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074405626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104000698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074391189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153285023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07357626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089031082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100135781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076853924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101267356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093161076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073694561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101721012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073866826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100023667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074628865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0912281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099621627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073771255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073453397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100389452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084733813 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100172205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074201357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073091022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102147956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076575919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074066155 seconds)
  done (took 3.941500431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121250996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159482366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079533995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135593745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119590958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103226377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177566903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099331579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15872745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073831881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117843095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073634188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133338822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074411554 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092848989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101556433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074835971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100079899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073906227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073786943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119358762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074154759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099841922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074688073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073246903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114121372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073358279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.099437366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074628422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075636313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103987264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074371859 seconds)
  done (took 4.25716092 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078149222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080040716 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115286912 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089442167 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075300148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104638666 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077918003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101973098 seconds)
  done (took 1.780420513 seconds)
done (took 27.121868077 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083586494 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074207322 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105849543 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086673032 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077898609 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.111122943 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072647762 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107149179 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080951978 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077878196 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108370826 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073688569 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075896786 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099740739 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079735085 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073398662 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111383845 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076180477 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.111086914 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084579963 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074311171 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108377326 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079048752 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.110624858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084158432 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083929595 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.11522872 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078631845 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101560101 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075981235 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081172702 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116261723 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073815991 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111098033 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074525861 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073330884 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099928159 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074271981 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083496529 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107907513 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075626319 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10699481 seconds)
  done (took 4.809091117 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092715024 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095693106 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117748521 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0683711 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072407917 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094397215 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093289693 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.09308584 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067358641 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091932381 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.088102267 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063839111 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064788295 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058686795 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.090319002 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06187748 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065518427 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061172709 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090328465 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063412844 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064725847 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086480452 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065713814 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064478957 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061197228 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.095197813 seconds)
  done (took 3.092839901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080646308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086730178 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120188134 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13470593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139771269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079835953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111377385 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091234533 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117575524 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073281251 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076159056 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128432382 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091642651 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107111181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073145561 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087630734 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.115306475 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074880995 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079005508 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121945576 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088991724 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.111010123 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094192095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085053173 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099691054 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074610469 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.104294691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086916223 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078036473 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110190245 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076985213 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104005076 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075774202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084497684 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113459198 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074307118 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121473635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082946962 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081600937 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.100946045 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076681838 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101344337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094301018 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145209072 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072884521 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079902543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108421036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083149054 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073206909 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119135365 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082145306 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100161598 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076634655 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071537498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101418337 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087580553 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074704676 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104597027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08271755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076215449 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.113494817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076845458 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116421781 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072988292 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080335819 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100511348 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073949165 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072056974 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12389609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073544864 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142514614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074496779 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102757817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082925478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080106435 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108586704 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073926928 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116462591 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083272393 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076726671 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110872549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077052401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076471631 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11957544 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075809839 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.102449058 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074692994 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079145532 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103987142 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0751848 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087005935 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101793682 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076647369 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.118491271 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07337928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074265871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108355977 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077974952 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072686955 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114062629 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079038961 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102447968 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082441056 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072835713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105244081 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083369008 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105918659 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073542444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077357617 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.107983226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073908915 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074572403 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104736766 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075085926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110950864 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.08005344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077352722 seconds)
  done (took 11.849463062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.204360586 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19486594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076077765 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186357937 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084074675 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113585823 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188307865 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104795378 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102304096 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074550643 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074559263 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.143505912 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106690387 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144927448 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111737612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073628939 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091386584 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142819889 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.192304548 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.184727026 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092933763 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.11127326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075819686 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074700107 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.104727326 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083471673 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119138209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086008534 seconds)
  done (took 4.420028932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087542447 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134502502 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.0794497 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094104531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.125624694 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073535056 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106542555 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075665266 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085975246 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113956037 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073108521 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108418754 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080389841 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.111196222 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074353713 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0825207 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.111618678 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075321753 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105463641 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077906266 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079194902 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115558886 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077929798 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101828482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081068167 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073081032 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099565929 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092346929 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102636596 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095341841 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101255184 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080426875 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083482852 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10373349 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073605001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075468417 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104659658 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076290436 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074958261 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101305894 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072263419 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063022173 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102823333 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086323375 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108862201 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065331025 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079309632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108103924 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079302364 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071769866 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105498514 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076321348 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105323703 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081909007 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07818088 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.107576304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07729397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071104509 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109032098 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076394364 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070153423 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101207737 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078958686 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07247196 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110684258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078800905 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101514126 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076991216 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078443845 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108753378 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076252456 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07636413 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100531937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075954613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078509418 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107208856 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07721243 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073057663 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102089627 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07460331 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061283073 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102299647 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059554955 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076505516 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100911568 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071995164 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076016654 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109297421 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087433614 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.103895337 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079852082 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102881531 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073122365 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076217723 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097346736 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076418688 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087879846 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119181749 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073508795 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100802578 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087983116 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079020623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101498195 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062435373 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080664766 seconds)
  done (took 10.351258265 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096841606 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098682308 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10470977 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087640237 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.129894407 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097124286 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.109838823 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080162133 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075816065 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119773983 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074231003 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082063446 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.106824939 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08245545 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126040854 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082899043 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075483302 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.11211974 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081996065 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13862973 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087634895 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091198456 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113539264 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074527751 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078415934 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114494471 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099786195 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112909309 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083327838 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116524985 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.084949923 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099437478 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.118533894 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077902235 seconds)
  done (took 4.404899929 seconds)
done (took 39.971548616 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.160405952 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.351467059 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.12896018 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.063702165 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.164871527 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.135380539 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.143089384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.141083157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.638795888 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.129998425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.371610535 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.794939628 seconds)
done (took 59.297739955 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.13543674 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.266094238 seconds)
    (2/2) benchmarking "String"...
    done (took 1.444084622 seconds)
  done (took 3.792235014 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.480912824 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.126594862 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.417695039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.128570615 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.128096777 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.578994239 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.732804503 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.474459341 seconds)
  done (took 27.658742054 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.131635636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.511294111 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.667190681 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.670801171 seconds)
  done (took 18.053103943 seconds)
done (took 59.192548091 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.153642143 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.160370775 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.154702792 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.114254508 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.256483702 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.156421433 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.385219949 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.26182128 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.12844551 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.115075894 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.146713739 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.133525169 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.136736294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.329951435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.137849256 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.13368201 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.152425728 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.77863635 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.531737309 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.147682574 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.137134534 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.185312226 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.141446807 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.132803219 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.192275641 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.133436873 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.132975658 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.149223378 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.573556808 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.135205831 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.233364557 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.53422317 seconds)
  done (took 188.26833125 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.129615125 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.277891351 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.342934075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.160773332 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.566349598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.330938551 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.264356797 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.632544049 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.149263463 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.159730444 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.391752982 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.134730437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.461781031 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.110496347 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.139668952 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.235084266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.353390315 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.444491815 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.15073415 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.399329157 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.133895228 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.386469493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.303015093 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.335979382 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195808916 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.180795084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.150334807 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.149534538 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.324357859 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.291581527 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.157578275 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.176618867 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.738371653 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.991870189 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.131846265 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.157069456 seconds)
  done (took 147.713548914 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.404771444 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.131080063 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.13096884 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.130759393 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.162282259 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.13225633 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.690851296 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.68362912 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.677367064 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.380756013 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136462895 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190758063 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415587549 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.135349978 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226102197 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.144464085 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.132912216 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.14742196 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.157020122 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137802195 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.132908879 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.691989103 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.148693565 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.644251316 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138277129 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.133500226 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.164079675 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.52946044 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132845685 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164740287 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.453174085 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.179219141 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.13314642 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.477617091 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.092981147 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.134707803 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241886243 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.135119654 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.164212625 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.134473315 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.403370879 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.133824714 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.132765889 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.133823817 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.136707136 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760887912 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.138680955 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.693887947 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138279868 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.05262718 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.13397111 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.133896214 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.950760179 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.690081255 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.137675651 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.133413613 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.136113845 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.1339137 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.134363355 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.165267788 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.965023389 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.237394277 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.135003907 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.136852416 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.165273446 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.135439316 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.543647776 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.134591751 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.541700896 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.194276347 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.238487842 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.695523815 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138864432 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228765425 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253791708 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.134182129 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.134383064 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.134350058 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.134496434 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.242433304 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.133800657 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.605154318 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141523687 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.136736077 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194612146 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.229900388 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.134692896 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.468391291 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139321185 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.135083699 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900538493 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23268953 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.135890543 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.135497428 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135681308 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.60652659 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.693019111 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378504662 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.140006223 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.902840412 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.14244702 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.619081329 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.678547131 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.763719309 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.140663833 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24419287 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140248366 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137458865 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.136791495 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.13567083 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.13586712 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16467603 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137215633 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.195922167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.532667475 seconds)
  done (took 339.937716127 seconds)
done (took 678.395550656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.834333197 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782012484 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.910902063 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794758275 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.775542298 seconds)
  done (took 10.176615939 seconds)
done (took 11.254855419 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.324306598 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.328745841 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.20102326 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.330523765 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168827664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.345515227 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.30768095 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.160136531 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.238290174 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.218210403 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.241258685 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.189815924 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164833169 seconds)
  done (took 17.298124054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.445694753 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.459845582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201500824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444205856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178848562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.459489817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.34274937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.351629585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330285871 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.154075469 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.153086066 seconds)
  done (took 15.602769223 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.457089086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.447240489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205169841 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.451736436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179873251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455732422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343437789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.34845203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334823889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.152714108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152551484 seconds)
  done (took 15.609767473 seconds)
done (took 49.589887521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.147614964 seconds)
  done (took 2.228632246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.182894361 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.347620157 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.166709747 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.153073218 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.148867761 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.151645 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.153577456 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.149102805 seconds)
  done (took 10.535863813 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.147665808 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.144664458 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.147556595 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.145447043 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.148262178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.146252923 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.146090707 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.148657171 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.148295819 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.146065031 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.148021857 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.145587383 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.146609264 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.146202223 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.148553964 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.14929894 seconds)
  done (took 19.435356233 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.148234343 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.145953669 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.146054661 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.146674206 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.145221502 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.146480172 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.147427322 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.146699513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.146197659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.14553731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.146706437 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.146390257 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.147430409 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.146182049 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.14618883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.147250154 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.146584385 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.146460759 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.150742346 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.145649407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.147580961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.146212933 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.146515998 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.146729627 seconds)
  done (took 28.605797465 seconds)
done (took 61.885065448 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 6.102239854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 6.149355349 seconds)
  done (took 13.334551987 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.149148129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.149994547 seconds)
  done (took 3.384105934 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.149145249 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.149425371 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.149311191 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.14942009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.149177972 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.150233687 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.149581276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.149632416 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149149322 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.148972195 seconds)
  done (took 12.578739036 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.150087782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.149485682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.146573391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.149841876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.148543206 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.147153549 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.149814991 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.150010555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.150105446 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.146653672 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.150409333 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.147772382 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.15070547 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.147581077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.150463184 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.148673873 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.147949487 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.148584231 seconds)
  done (took 21.764607256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.15096763 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15076702 seconds)
  done (took 3.385853156 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.147235063 seconds)
    (2/7) benchmarking "second"...
    done (took 1.1477215 seconds)
    (3/7) benchmarking "month"...
    done (took 1.148387788 seconds)
    (4/7) benchmarking "year"...
    done (took 1.148654892 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.148247223 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.148792848 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.149415658 seconds)
  done (took 9.124298206 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.151621211 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.341600558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.452844503 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.728919727 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.153626214 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.154957577 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.02400178 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.155179251 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.159442418 seconds)
  done (took 13.407631323 seconds)
done (took 78.061630067 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.174078743 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.14955161 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.035359914 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.158920007 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.166046597 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.489443053 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.193799431 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.289412756 seconds)
done (took 36.742192009 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.14798556 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.100158184 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.099000373 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.159800428 seconds)
  done (took 11.445421965 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.130796105 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.112795125 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.149988332 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.184068168 seconds)
  done (took 17.665526558 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.178326597 seconds)
    (2/2) benchmarking "read"...
    done (took 1.483968183 seconds)
  done (took 4.749506993 seconds)
done (took 41.093615542 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154283345 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.153825291 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.153059244 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.150891057 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.154495792 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.150286109 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.151231744 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.150945787 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.153217061 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.153294902 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.152907755 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.153341175 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.15391781 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152564028 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150749756 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15104003 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152694615 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.150070877 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151190373 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150533135 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.151377092 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153630906 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.152116456 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.151608538 seconds)
  done (took 28.741806983 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.154924227 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.151831677 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.153988463 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.153769843 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.150815482 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.155002695 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.154211668 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.151483923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.153286152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.154418183 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1513738 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.152074784 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.154277997 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.151630437 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154914539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.152218825 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.153653115 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152280024 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154692659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.153186498 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.154402306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152755563 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.15233252 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155174118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.153829247 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152184588 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.154508554 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.152864946 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154999076 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.152897348 seconds)
  done (took 35.689504805 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.16007314 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.162342855 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.155488431 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.154943081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.15472999 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.154484994 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.155733822 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.154189749 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.155567819 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.155688452 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.155480813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.156386212 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.15658377 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.155184794 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.155775357 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.156183401 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.156017551 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.156065092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.155417065 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.155698472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.156233722 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.155716765 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.155226287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.158410268 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.158293898 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.158754168 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.157804415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.15787311 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.158699504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.158213229 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15911755 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.158869969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.159026045 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.158316175 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159441909 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.158398788 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.164228519 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.166268063 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.158643103 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.158927879 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.158217874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.158617361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.15919089 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.15893845 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.160110014 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.16029099 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.159193263 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.15882986 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.159601976 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.159105338 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.15950202 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.15886517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.160365656 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.159328037 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.160363916 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160442583 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.159925276 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.16001276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.159029572 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.159844408 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.158967144 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.160392182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.159801736 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.160008066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.159561904 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.160287947 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.160683736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.159715977 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.15903083 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.160491172 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.159966454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.159732539 seconds)
  done (took 84.498457848 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.160424061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.157959001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.157423061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.157844085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157887901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.16048201 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.157451407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16094578 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157819166 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.160595524 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160806544 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158052068 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158544458 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.160946786 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160483795 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158309807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.161100571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158706453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.161072315 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160922039 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160275165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.158522787 seconds)
  done (took 26.601857263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160964142 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161433446 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.15836706 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.160553356 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.158370141 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.161647791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.161373534 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161081545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162198938 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15888284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164035837 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162079849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158885017 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159638448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159299379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.159465596 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162330555 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.158860755 seconds)
  done (took 21.984898291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.160304983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.160059005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.16251718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15893206 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.160479755 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.163186047 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160207643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162981487 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.163725474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.159915063 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.162814609 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162892912 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.162991873 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160462406 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161571481 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.160049921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.163333695 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160518583 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162907795 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160264224 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.159661771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163795576 seconds)
  done (took 26.650304254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162758353 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163222337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.16081795 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.161043537 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.160458093 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.163305979 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.164330759 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.161451448 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.163697003 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.164058429 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160612511 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.163670325 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.161609864 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162536787 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.160969983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161319418 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164351229 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.162242112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164055494 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.161524961 seconds)
  done (took 24.345316735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164204825 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165002112 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.165621138 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165241432 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165478677 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.165461736 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165829828 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165879675 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.165194032 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165713644 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166089014 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.166052235 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16544212 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165872789 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16611186 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165619241 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166072954 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166015078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.166776691 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.16587545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.165669069 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166262544 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166376829 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166703507 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.165904808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165813966 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1664443 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166380502 seconds)
  done (took 33.74232469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165461898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166029434 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.163913626 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.163634487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.163358676 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.16371928 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.164233066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.163725427 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.165700379 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163885129 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165205843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.165429717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166044882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.16718556 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.165608621 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.167474412 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166823232 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.164200953 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164545607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163711639 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.167177082 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165514296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.166618821 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.164293755 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163665405 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.167343691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165187621 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165897433 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167381117 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.1643281 seconds)
  done (took 36.058280529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.185703133 seconds)
    (2/2) benchmarking "in"...
    done (took 1.185563538 seconds)
  done (took 3.471790957 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.165169406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167247708 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167694444 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.165244931 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.165287193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168095446 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168316136 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.165332969 seconds)
  done (took 10.434269727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.165995759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.168289916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.168327564 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.167337117 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.167677419 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.1673866 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174123628 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.185582723 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.16710408 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.168852139 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.174356413 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.175012692 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.170250594 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167969808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.166439323 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169789575 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.167653152 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.168835134 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.168480885 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.168791921 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168991792 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171629997 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.170314474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.166159831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.169760855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.17893514 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.171988163 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.16916874 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.168959334 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.171514694 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.16852816 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.166091714 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.16866195 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.168906997 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.169241677 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.169667056 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177406788 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185523699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.17522742 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16978461 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169923001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.166794485 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.170549976 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.170677586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.170631267 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.169534617 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.169614184 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.167527768 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.168987243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.17318789 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.175495846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168841608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.167557202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.172946641 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.169909379 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176895182 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.187066627 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.173392456 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.180111562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.180548664 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.182945991 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.178382253 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172882465 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.171873301 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180432759 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.195023774 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176435812 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.185571999 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.168848391 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.17166984 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.177435007 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183679135 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.181261288 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.170736033 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171806335 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.171669571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171503602 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172025297 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177630005 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.190799581 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.172182471 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172041863 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182233881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194621873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.171572177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.172363947 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.173402859 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.172837233 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.173114227 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18253752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.188082027 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.1731439 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.171089172 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.171741886 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.173202381 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.172747167 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.171045846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.173491538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.171359384 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.1726763 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.172485267 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.176096939 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.180773639 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173496394 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172581693 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.178338648 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.173208535 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171780404 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.179144708 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.173855687 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173953781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.173856136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.178913637 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.171485669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176355142 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.181774288 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.173659449 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.173673371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.173587653 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.173745952 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184140565 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.200450434 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.174786824 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.17467927 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.1786716 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.185757497 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174782494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.17710141 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.17406832 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172216633 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.171463451 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175779621 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.174502265 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.17439726 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174928972 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.17481559 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.172634393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.175313441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.175230832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.174930677 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.176011305 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.174326313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.175945686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17570785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.17529124 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.176647182 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.180700629 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.174211016 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.175677355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.175131387 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.17317562 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175530043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.17622677 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.176057075 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.175698842 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17573591 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.175948813 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.176045183 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17623149 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.176614103 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175899071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.176511633 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179955229 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177543452 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.179362155 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.175243145 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.174842363 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176642335 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.177424834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.175773557 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.176725418 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.17520355 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.179644613 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.184599904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.177949038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.176373409 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.17911726 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177231977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177038067 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177793647 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.179216921 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.185288456 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.177368199 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.183029226 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.17732159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.17747599 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.178332648 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.177141639 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.176820561 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177046819 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.179862054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.18495253 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190331201 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186466221 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.178797298 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.182702297 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.179141584 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.182085478 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.181122461 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.178270269 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.178575684 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178867677 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17703224 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178349216 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.179710506 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.1800161 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.176655334 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.179637718 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.178048452 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.178528119 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179835733 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.179426899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179614326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.176709548 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180149823 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179272106 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.17807586 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.177154841 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.177528635 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.177142151 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.179855775 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.180088178 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.184571631 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.177082844 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.180643412 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179828899 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.179373618 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.178215444 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.180260444 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181881588 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.177802093 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185735204 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.196323471 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.180688634 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.185580056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.195478442 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.178552082 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.182568738 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.179983945 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.177714021 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.183297746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.188990269 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.180786125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.181108823 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.181403107 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179927547 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181413392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.186480248 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.178953678 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.179457254 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.180820107 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.18233465 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.178399612 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.181641233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.181370576 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.181105903 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183161857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181570984 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.181654436 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180673814 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.182563816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.181724147 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.180991663 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184377062 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.189096854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.185591319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.182395586 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18328553 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.181470593 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.184860162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.181202109 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.181501309 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.181235772 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194975518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.190340548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187739219 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.183304441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.182054524 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185961098 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.183279088 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.185104696 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180714425 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183211614 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.182028511 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.181718487 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.180608627 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18208832 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.183025867 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182763493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.183658399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.186494869 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.182848231 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.181051274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.182776976 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.182023383 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.183827685 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.181466524 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.183985752 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.183837352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184976144 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.181004468 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.182435642 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189731975 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.200400516 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.184804983 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.182682635 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.183186668 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.182512898 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.184391973 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.183593051 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.187158016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.192645951 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.186623314 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.192604165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.186154145 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.19286714 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.184973879 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.187791038 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.193081615 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.182131393 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.18262644 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.184137732 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.184945963 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190680821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.202232436 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.185442832 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.189447939 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185120359 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.186523421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.185794575 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.183756092 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185321091 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.183697009 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.192896571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.202510343 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.187625294 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187994831 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.182964263 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.185647172 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.185785293 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.184843802 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187900794 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.186540309 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.18593546 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.184494363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.185066317 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.18543088 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.18608394 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.186897931 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.183708355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.186188556 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192134446 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.202472254 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191384581 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.186328788 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.193500736 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186522822 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192751965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.203967203 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.186739489 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.186592179 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.186950926 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.189940444 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.186049632 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.186219753 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.186577194 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.187802906 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.191702738 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.188111173 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.188447362 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.186257688 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.187682974 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.186637527 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196324787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212363927 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.189139644 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192207949 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.185619861 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.1885007 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.194227379 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.188863707 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.185971235 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.189875961 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.197726735 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.196853205 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.187408271 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.187890748 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.187415646 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188131001 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.188848289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.18826438 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.188495112 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.188750322 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.188150991 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.189429209 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191701968 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.188802962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.189160572 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189245022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.189512114 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.197904382 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.188640123 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.189351928 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18915805 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.189546314 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.189191591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.18879867 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.188496012 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.18869397 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189546433 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.191381794 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.195872642 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.195678513 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.191717454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.188907621 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.190515121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.188474794 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.189400564 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190331083 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.189492666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190683121 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.190428377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.188917663 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.189069843 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.18736889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.190188207 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.190476196 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.19176251 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192945674 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.197562204 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190072099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.188113578 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.190196331 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19000932 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.189285947 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.18984054 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.197081859 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193271489 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.201477242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.199445598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.19423746 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.19042672 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193296845 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.198596408 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.189247873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.190362792 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.191040016 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.191708026 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.190233476 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.193918909 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190984333 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.196797789 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.189669255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.191195111 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198671182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.208300626 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192568274 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.19162683 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.195538119 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.191787567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.190048759 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.192850606 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.190255069 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198140851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.211017138 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192042387 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.192255568 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.190136446 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.192833226 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195746525 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193976195 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.19349163 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.190026935 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.192957108 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191588017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192310139 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.189833672 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.190995832 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.191433736 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.195785833 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.199867015 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.190706993 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19431611 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.192327261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.194417152 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193779206 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193644061 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19129425 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.191288345 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.193025164 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193887995 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.193870235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.195375242 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.192953268 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.194425746 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.195517023 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193600596 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197360051 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.204439819 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.20308169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.192617823 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.193826331 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.194373917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.196300077 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195419797 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.194781556 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194476455 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.195142329 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.195097802 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.195097765 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.195385167 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.197003236 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209944443 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.211191187 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192986774 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.194274294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19689403 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.194128863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.1923084 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.195374402 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.195426996 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.197510203 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.203147166 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194120446 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200651501 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211222086 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.195971729 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.199972392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.197314392 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.2033103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.197532612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194167363 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.195507439 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.200918281 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.211570062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195593735 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203968892 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225033765 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.213073202 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.196506338 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.195430118 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194177823 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.195798536 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.197714929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.195755034 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.19612977 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196353186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.195936115 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.19689499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.201672881 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.196952104 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.195942765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.196184928 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.195431398 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.196199445 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.193869912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.195869157 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.196986487 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.197281116 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.196294221 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.196475317 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.196925101 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.210161918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.207301058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.197657278 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.197861961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.195118892 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.199874314 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.20050106 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208197178 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.205705759 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.197074739 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.19748687 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.19906902 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.197011259 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.19582708 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.195964013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.197170221 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.197007894 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.19536092 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.208665191 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.207190604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.20123773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.19797628 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197420887 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.198399753 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.198433025 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198216573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19816545 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.199357738 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.199361303 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203163864 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.19869848 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198735119 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.201783649 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.207358977 seconds)
  done (took 707.61266729 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.197317996 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196637825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.197061273 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197232846 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197542989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.19626196 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196791074 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197400522 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.195968794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.19665143 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196305292 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197418483 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197131366 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197329343 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196814167 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196267897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197467066 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.197158244 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196366508 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197323159 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197049624 seconds)
  done (took 26.26713745 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.199722071 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.197305986 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197243907 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200125945 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197013468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199867387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197526233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199956663 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20040778 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198965353 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.202576941 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20197917 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.199269239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.200480935 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198906951 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203138633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201985826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198676081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.201624526 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200980564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203235935 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200813386 seconds)
  done (took 27.53400483 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.203692794 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201916117 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.201854823 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.201250479 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.203966963 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.200401054 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.203991438 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.20438883 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.204130074 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.203091336 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.201162621 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.203696664 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.209443433 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.207344302 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.203206525 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.201850889 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.346447454 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201501661 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202508944 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201815624 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.199283683 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.204953596 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.199510832 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.201065625 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.2011249 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.201928685 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.202867795 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.201671043 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202346619 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.20343373 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.205673604 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.202831286 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.201219773 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.204224782 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.201521323 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.203230011 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.207213172 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.202718712 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.199537334 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.20305254 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.212394863 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.224952818 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2032142 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.207846936 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.202667753 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.203783695 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.206125324 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.21130289 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.200034487 seconds)
  done (took 60.265666213 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.203221341 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.203880656 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.200531909 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.202646841 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.203803004 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.202440606 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.203130815 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.203049137 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.200623905 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.201253711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.204129021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.201819371 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.200994727 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.203977992 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.204245963 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.202750964 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.202495099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.201777043 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.20202347 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.202570444 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.202304431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.204602981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.204829919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.201905753 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.204628333 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202063999 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.202143078 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.204307193 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.20240469 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.201982829 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.204882812 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.204289225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.205490506 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.202837569 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.202456368 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.204400296 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.206407876 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.20254536 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.205000724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.203139451 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.205406293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.205441506 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.205514971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.204812288 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.201292654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.201303518 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.202281225 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.202977253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20238877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.204350574 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.203963438 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.2027031 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.205128271 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.202475844 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.204708281 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.205188581 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.203451449 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.202174075 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.204656653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.203682843 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.20288947 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.205993885 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.203146018 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20531829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.205208097 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.2027411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.203579006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204879832 seconds)
  done (took 82.968866592 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206475967 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.204851297 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205967352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205221801 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204693951 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.205734319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205720958 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.205477476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205992517 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205766442 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206088299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206810161 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.206022287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.206612335 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206188612 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206658472 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207426441 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207770868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206434514 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20703921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.20669464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.207387934 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206544044 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207391536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.207715891 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208025177 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.20744186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207546602 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20745944 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207649121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20728693 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.208270448 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207835751 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207182385 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.207959429 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.208213257 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207503158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207753756 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.208758499 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207892507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20782284 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208228061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208784569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207824938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208433312 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209797821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208271592 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.209112661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209180273 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20899487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.208316008 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208520629 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207976756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209059253 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208762345 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.209610495 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208820806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209023016 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209202082 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.208827285 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209352176 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.20936487 seconds)
  done (took 76.007749431 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208952691 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209348532 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.206568279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206739364 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210564556 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207612192 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210323483 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.210815682 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210497638 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.210073292 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210597975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208127917 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207775757 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210082817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207406929 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206833222 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208093141 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208439571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211034214 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208962485 seconds)
  done (took 25.320201884 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.208133647 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.211212285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207664351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208304297 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.210257383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.208350891 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.21025533 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210341992 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208036861 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211723829 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211740358 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211475437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208955764 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209031348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21114511 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.209102512 seconds)
  done (took 20.498408214 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.208988683 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.212062496 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.210836236 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.21165242 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.208826702 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.20865432 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.211363232 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.209857962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.208846564 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.211339517 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.211637811 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.211316011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.21164 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.211360726 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.208676368 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.212731859 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.2096938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.209470892 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211745658 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.211325411 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.209878548 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.210143938 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.212897523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.212254177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.209133758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.209885294 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.20979617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.209721783 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.210503225 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.211963381 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.210241644 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.211024277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.209874024 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.210351515 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.212592668 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.210825267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.212822118 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.213276541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.213643666 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.213453738 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.214192683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.210681302 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.212573992 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.21361962 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.211118206 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.214062418 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.211294362 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.211282791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.211206935 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.211153922 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.213935992 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.214162053 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.213616259 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.214949087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.214462536 seconds)
  done (took 67.772405147 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213997646 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214151061 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210804354 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.214629424 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213802018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.211900627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.213201449 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.212278586 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212551832 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214108713 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213903072 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.214309367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212672304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214036611 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212833302 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214852376 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212053826 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.212716516 seconds)
  done (took 22.983937776 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212466586 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212616738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.215005953 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212358794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.21324498 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215217816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211975232 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.214341285 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214531551 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.212504553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212384844 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.215226203 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21556425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.216443634 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213201093 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213030009 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.215838804 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215500894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212249524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212625171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216746636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216455569 seconds)
  done (took 27.856186754 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.213746439 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.214106384 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.230561295 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.257780255 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.246591544 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.213741301 seconds)
  done (took 8.522820117 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213146521 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216967736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214486543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217161327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216610662 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214190872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214376283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214668536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216672214 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21552979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214925399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217273863 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217796492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214887798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216337511 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215935981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214509269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214097777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215408644 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218344508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215179911 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217745285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215378169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215148932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21569525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215136242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218022908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214864328 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214764822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216266755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217830628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214499416 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219020774 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214929998 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218162864 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217886132 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214648215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218230047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217941623 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215868343 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217930162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218495607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217954246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215388889 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218841661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215177403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21498896 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21577164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216041405 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219062934 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218771363 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215497525 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218610594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217886311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219466695 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219639543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216901164 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216067645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219328473 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216602976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216774584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218841681 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216863418 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217801314 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219227939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216868515 seconds)
  done (took 81.444810262 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21707861 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.217427948 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217228633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217851132 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216963202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217018172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216581355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217428413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217043422 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217133347 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221027825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218134677 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217375342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217497372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218803888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217245912 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217875809 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217904462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217932343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221441973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217641639 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218019144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217792582 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21813986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218952784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220713121 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218246817 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218373224 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218141901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218048776 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219907077 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219214573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218933437 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219282131 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218784274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21912175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219476834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21874121 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221684192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218520125 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222030945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219410069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220196703 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219773718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219505088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219749746 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219302039 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219043478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220056652 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220028586 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219499271 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220168353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219452658 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220403532 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220404211 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219918822 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220112792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220318914 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22330961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220509464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21958542 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223521817 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219881844 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22085207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219852864 seconds)
  done (took 81.614490645 seconds)
done (took 1649.974431174 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.222014325 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.310677055 seconds)
  done (took 13.685284129 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.382273876 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.337093757 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.220162004 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.245812783 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.220753377 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.235572502 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.23734128 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.221516822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221069017 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.220553161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.221189321 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.40712292 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.276274587 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.221520377 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.220928898 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.312981695 seconds)
  done (took 41.362937296 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250396466 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.228387792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.344195417 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.248118472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.250614291 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.416853156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.284203583 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.230404238 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.40906133 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.272000013 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.945343725 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.253917152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226596636 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.4436965 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.248950295 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.418305607 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.488699499 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.958724216 seconds)
  done (took 29.072950141 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.704683361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.261027867 seconds)
  done (took 9.121725569 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.264987317 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.265070629 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.260201909 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.253435378 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.257762684 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.252733883 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.288455752 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.268500368 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.267677913 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.251530245 seconds)
  done (took 63.793264229 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.245952369 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.22619734 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.227815694 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.225685811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.217548317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.221221155 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.225777135 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.221622625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.107815055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.362654891 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.247280888 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.233742763 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.228607296 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.226971364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.224521352 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.261805806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.412853867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.224748759 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.223259482 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.232241442 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.226597332 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.352907217 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.272761739 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.229156843 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.35986122 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.112048093 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.233195446 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.232780846 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.413095667 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.226040503 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.226510725 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.226676042 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.228483675 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.805282913 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.682819554 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.23833813 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.265837077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.235520262 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.225684271 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.399370599 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.227890057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.235060458 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.230828004 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.66160041 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391391534 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.346435606 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.601858667 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.232807418 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.22894103 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.292301709 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.232771391 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.22864477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.256789976 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.003565046 seconds)
  done (took 106.319299687 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.257649178 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.709235499 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.391546924 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242642207 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.128514892 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.05593817 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.226594647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.529925355 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.264538783 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.221088903 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.512963397 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.762006663 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.230372544 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.26806466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.844568677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313347428 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221704039 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.156297251 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.226114846 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.221975764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.653626985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244489989 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.222607474 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.364207727 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.262075505 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.702875646 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.78562306 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.705452128 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.226107441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.222247965 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.722142093 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.23175398 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.299902201 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.224952916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.504573046 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.604661247 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575283627 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.224126394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.264805646 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22218761 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.25238946 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.705342252 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586673071 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.222212149 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.223768949 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714773745 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.225699709 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.231291942 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.222584107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432891755 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.187084345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224119051 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.79586075 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.22801509 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.482826104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.276744004 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.263627725 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731036875 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223609605 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.450678431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23392142 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.224960477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.224149453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224600246 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226212605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588077574 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764420526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.22808532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.589542607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.718726993 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229811811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7908136 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.105576085 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.252469591 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.26181548 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236689376 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.974704963 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732346833 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.250692146 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.224703949 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577746917 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.227139748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.511905676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.239999736 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.241252529 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664924085 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.252278649 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.24211096 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.224735814 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.243833088 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.021057668 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226996836 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.502543918 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.257803753 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.225061344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.224405391 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.269781257 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239464187 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.226082318 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.229110372 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.774611635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.237922173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.381019191 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251566763 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226140123 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.243938219 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.228714089 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.225873831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.451607632 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.716819417 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.232070051 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.228786074 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.234515805 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.237323679 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375501675 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.231186313 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.559635679 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.232159885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226240125 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.23029149 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.097286794 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.253683783 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226827695 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.230950767 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.083546114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.438032616 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.24582934 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.242549048 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.226954092 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.245885455 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.673531111 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227413351 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.29880504 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.230981617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954930927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239134117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260956874 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.862252974 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.233796444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227151385 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.235612805 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227694015 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542689791 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510015824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.680044175 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.230984155 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.252085284 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954164773 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.25299809 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377807654 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247029191 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.22022448 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.425605408 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681056737 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.229157033 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.785569558 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.229980581 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446314545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.227516503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.568496181 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750572827 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.232104154 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.230758073 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969270023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892408351 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.869718818 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.233718579 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.516705055 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.22837624 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.679425961 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.228438668 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229803799 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.826532506 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.231520447 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23369512 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.228137906 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.229329237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.287289811 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.405284252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.597012253 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232248675 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.718672006 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277019503 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229764255 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239357882 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.232867201 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582417994 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.263358714 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.231178962 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.261572404 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.231170962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.238918886 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.728921708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.156905355 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.234213436 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385139632 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8856861 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.233592301 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.230770614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.887189658 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.60321387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.765531736 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.29661152 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.567032239 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.240180178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.271030125 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066839735 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280652712 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.729534398 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238893575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.236629947 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873513855 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.235774173 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.307367404 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.232621085 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.233408259 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801135619 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.235866473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.230095417 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.66382698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231510114 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505211633 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.232761099 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.233816469 seconds)
  done (took 1091.074462127 seconds)
done (took 1355.580907871 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.23084672 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232277858 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.221981046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235673416 seconds)
  done (took 26.089641005 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.244802499 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.239095015 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.245308414 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.237504799 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.241435199 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.238181811 seconds)
  done (took 8.616662118 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.382167619 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237195865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235897747 seconds)
  done (took 19.025118729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.468082751 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.593247346 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.629713328 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.565589789 seconds)
  done (took 10.428395393 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.239818555 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.240871658 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.24095692 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.242315854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.246132376 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.247460325 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.24217291 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.243606127 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.247227369 seconds)
  done (took 12.359025416 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.416994792 seconds)
done (took 83.102814889 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.136335073 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161497521 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.254583379 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.296998344 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081317813 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.303976337 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.596337497 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.649501679 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.830099652 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.240506293 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.75288228 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.729901271 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.496691757 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.290452572 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.972233395 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.875583511 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.265908032 seconds)
    (18/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.671145432 seconds)
    (19/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.820391132 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.283528691 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324598852 seconds)
    (22/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.244628953 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.104183529 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.767949124 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.239342601 seconds)
    (26/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.636194921 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157978897 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.3453294 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.670774011 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.342974979 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.319618036 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.284719286 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.337903155 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.261617633 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.101166507 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.900380367 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.234755798 seconds)
    (38/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.624397602 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200651289 seconds)
    (40/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.240571714 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598945296 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.246894707 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.350204067 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.249568623 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.489347209 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.059741614 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.226099815 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357679507 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.221087174 seconds)
    (50/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.693442195 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.050203372 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.897141386 seconds)
    (53/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.329359625 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262926437 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.294617402 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.682121727 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.236538095 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.37303431 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.237328511 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.106769387 seconds)
    (61/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.266470976 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.321292585 seconds)
    (63/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.600193166 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.363892211 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.46998464 seconds)
    (66/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.912270881 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.669484215 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.929964039 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.252146726 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.944626222 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.989037746 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.668046355 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.251290826 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.658631668 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.744362352 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.156250497 seconds)
    (77/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.503858193 seconds)
    (78/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.364688547 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.504435545 seconds)
    (80/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.647409043 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.243627315 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.282426569 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.867983364 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.803746581 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.25380029 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.844502428 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.51182306 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137115662 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.868513335 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.458489891 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.621421609 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.234075773 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.265600023 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.237986409 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.746610295 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081473985 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.241723081 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.463908022 seconds)
    (99/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.98702182 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.252935146 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.248534475 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.859361187 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.242416111 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.120959477 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325452482 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.379253957 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.262624692 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.708683385 seconds)
    (109/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367108152 seconds)
    (110/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.497234441 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.685652004 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 5.289728905 seconds)
    (113/309) benchmarking ("sort", Bool, false)...
    done (took 1.75598006 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.264593493 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.32313883 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.364659452 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.250522337 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.494023449 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.216299327 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.284937557 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.266626153 seconds)
    (122/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.391892896 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084971692 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.523313418 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.841203389 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.397055801 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.245692994 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.268332432 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.3435826 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.267691346 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.768594162 seconds)
    (132/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.277405126 seconds)
    (133/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.233254773 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.245513221 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.272713457 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.577033663 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.659975026 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.717616298 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.245225587 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082156525 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.27195183 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.242724105 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.532482702 seconds)
    (144/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.184831038 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.261976174 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.432755394 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305177259 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.250978647 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.35400514 seconds)
    (150/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.194931361 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.268583822 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.854410592 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.245416056 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.95150032 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.091478524 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.534633866 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.649989012 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.863709193 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.313459778 seconds)
    (160/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400043038 seconds)
    (161/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.628979847 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.989773487 seconds)
    (163/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.390193122 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.29079231 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.439400368 seconds)
    (166/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.434912679 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.876428478 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.669910829 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.338925202 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.333777984 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.349046262 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.790006904 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.444050772 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563158483 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.251060327 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.241322798 seconds)
    (177/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.90836359 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.2659767 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.498191824 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.481904486 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.257522398 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.273823488 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.974658291 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274252757 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385487725 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.244543795 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.352343798 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.286022641 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303723928 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.367450471 seconds)
    (191/309) benchmarking ("sort", Float64, false)...
    done (took 5.631695663 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.499329407 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.233761619 seconds)
    (194/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.089454649 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.252960571 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.357681704 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.317611699 seconds)
    (198/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.271371943 seconds)
    (199/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.256211357 seconds)
    (200/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.820041317 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.222257392 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.306176851 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.304862625 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.715757257 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.311955895 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.69869192 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547126999 seconds)
    (208/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.813844911 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.817064184 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.253363959 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.67653294 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.251022439 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.930432579 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.298640483 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.270350989 seconds)
    (216/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.437290537 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.270798878 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.462696382 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.911672208 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.271390836 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.562532653 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939748377 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.237561431 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.14869272 seconds)
    (225/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.417533514 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.246234345 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.286990362 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.776240451 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.246497944 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.5904933 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.397477532 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.266077721 seconds)
    (233/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.260864122 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.288685706 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.591829795 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087923274 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335268291 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.669857622 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.96406872 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.833151253 seconds)
    (241/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.991115305 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.239681712 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.246475976 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.250680113 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.249896536 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.252827445 seconds)
    (247/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.2663748 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.325993738 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.994479029 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.263752918 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.269468469 seconds)
    (252/309) benchmarking ("sort", BigInt, false)...
    done (took 6.267461979 seconds)
    (253/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.361605434 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.24181777 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 4.291184342 seconds)
    (256/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.275839774 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.468412191 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.796174729 seconds)
    (259/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.399203889 seconds)
    (260/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.223309232 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.278631818 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.884067203 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791599536 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.642564051 seconds)
    (265/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.69667676 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.38358623 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.708051116 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.033895735 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.26985044 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330328084 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.762502714 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.710169094 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.249388852 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.306101231 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.414764936 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.902258433 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.954094354 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.894139543 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.237434351 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.248285414 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.675471044 seconds)
    (282/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.585392895 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.274016398 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.940838457 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.336241931 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.331951515 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.361803436 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.265024758 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.248847436 seconds)
    (290/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.289125269 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.25303136 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.37511384 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.155098335 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.096360365 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.885429167 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.45820537 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.48772353 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.291798382 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183780973 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.281769504 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.709814553 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.339619725 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.249090448 seconds)
    (304/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.33447432 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.091430075 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.276225263 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.27632991 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.043019014 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.268509817 seconds)
  done (took 910.984755051 seconds)
done (took 912.154287267 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.284945886 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278081695 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.262066596 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.2839365 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.37371994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289863727 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.272923144 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.264826428 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.310623155 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.31223944 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.258866973 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.289614179 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262509096 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261346718 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.263248668 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27625609 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.411140983 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267696528 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27797809 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.274157907 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.278925276 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.260046883 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.314059279 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.290511779 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.267670785 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.265738612 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265816772 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.28105216 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.373529768 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.266296387 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.267001515 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.274292683 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.412384987 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.266351204 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259068571 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.282205804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.274018856 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.273633817 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.268086582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.295224418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.856085668 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.267429511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.264723829 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264473114 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.26508436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.269746073 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.266001284 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.271976484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276623751 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277927 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.86634872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.282818016 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.266469791 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.266649327 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275734822 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.26442815 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.269390055 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279965684 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284291578 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280331822 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.405833662 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.274083401 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.268837968 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.281611285 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.271681438 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.911478087 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.266477374 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270100629 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.866808158 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.276182847 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.915500768 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.278083168 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.268200612 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.280111044 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.29779987 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.419871332 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.266150352 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.26561318 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.272654137 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.264366286 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.277732554 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278113932 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.272166447 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267041376 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278289663 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.294457821 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.277401182 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.266525829 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.27632568 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.285124657 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.274074538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.277398836 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.269953583 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.262852591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.276977772 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270269514 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.268071955 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.269585702 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.272749933 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.27888794 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.865917957 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287418149 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.265149413 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.265358915 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266849982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.280245676 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.866498551 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.27210095 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.290733732 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.316842154 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.268936114 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.412953567 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.273399398 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281654502 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277274812 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.271984867 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.264443046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.41342812 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.886115335 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.286820669 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.270417119 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.264702358 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.282210667 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.270739701 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.265338269 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.426564868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.274514151 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282081416 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.38901224 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279826881 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.300331846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.265157521 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.272009706 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.297256966 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283241743 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.299644999 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.272778398 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.283663819 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284250162 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.265687413 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.278870157 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.280762644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270828665 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.275631718 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.264103526 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.30052468 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281350017 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280555972 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.291451324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.389384552 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.267882145 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.415263322 seconds)
done (took 217.475992905 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.327295067 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.260792901 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.356284695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.265736999 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.367010941 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.378610067 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264499242 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263882175 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.262963425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.643280281 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.264336469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.263694643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.259974288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.26374536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.347474348 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.265732927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.263982026 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.606501306 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.265637958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.335728386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.265192575 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263654885 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.265149801 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.643749976 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.257816974 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262844868 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.340198434 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.267016723 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.61024282 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.266392454 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.26116395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.610015883 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.361178397 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.283759868 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.276369923 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.274431188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.378083705 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284685699 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.361600393 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.346805809 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36316828 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.306003128 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.267318507 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.267054358 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268940426 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.267138829 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.26613695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.29410554 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.260192476 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.275364378 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.607743477 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.278408627 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.266018731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265582452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.264593227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.297448675 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266646279 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.268127556 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.356824842 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.269616106 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.334922681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.645933432 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.646375844 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.267090866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.266303476 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.265674687 seconds)
  done (took 144.005474018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.333659976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.340299796 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.383499907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.268653111 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.316419386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.387709345 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.269668149 seconds)
  done (took 10.495343212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.273714153 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.268989909 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.317634571 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.317208119 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.266889726 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.416534241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268994692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.278354627 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.266331664 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.320288586 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.270600461 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.270019692 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.275889808 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.26131486 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317275182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.280481149 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382961333 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.269997101 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.269977181 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419495858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.266896945 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.275789484 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.320566195 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.27990584 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.271398754 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.275471319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838974874 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.269275187 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268234187 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.270299846 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.268189255 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.308277566 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.269439217 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.268798702 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268414523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385433796 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.269966331 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269040642 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.271048835 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.267244824 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.270539963 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.271621985 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.271497808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.269691007 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272032648 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.293286763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.27131574 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.271499041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.271099176 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.27251181 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.32189452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.272686543 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.269295638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.270409059 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.326446739 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279481118 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.271691767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.26894442 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.27208676 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269016737 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422216246 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.318579341 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.271333271 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318505203 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.271553121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.272893638 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.271688626 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.271905481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.325903476 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.272628904 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.319225565 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.269216244 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.425197345 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.294368129 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.273068109 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.273648909 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.273508145 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273393101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.266523364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.278246828 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.270337161 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.272751325 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.2778674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270527051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270402511 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375019856 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381107612 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.269817796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.285135584 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.278562137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.271235649 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.32545921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.273960125 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.270720547 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.324209468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.386953745 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.326548529 seconds)
  done (took 147.046843735 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.277862773 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.280764496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.27388108 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.288848103 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27437704 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.273038547 seconds)
  done (took 8.868984686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.27509411 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.276632565 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27435133 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.274807545 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.273616666 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.276044608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.275260993 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275845369 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279220001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.275118679 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.276037328 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.277708278 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.276494956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.274802892 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.274204611 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.275057893 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.276353803 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273547444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.275279766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.27530932 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.385957946 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.27397135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275513231 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.275774317 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.282395518 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.275726669 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282511032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.276277239 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.27564463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.280389445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.278697734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.277212418 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.276706368 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.281768896 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.278979489 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.277837132 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281049023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.278931231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.273957236 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.277127122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.2803989 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.276602098 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.27588553 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.279130088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.276695243 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.280774185 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.284096407 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.283343732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.276359782 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.279336376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.279254582 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.276800069 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.278325574 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.27929174 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.278299749 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281494729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.284008378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.277225011 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.277146261 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.278402782 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.279499507 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.278383615 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278782846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.28151506 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.275277401 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.280082362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.278515821 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.281849252 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277853561 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.27838653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.280449058 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.276299976 seconds)
  done (took 94.312070947 seconds)
done (took 405.920021916 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.295132886 seconds)
  done (took 7.500264403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.382871841 seconds)
  done (took 7.590172244 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.307233447 seconds)
  done (took 23.517720613 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.349628763 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.316056098 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.299673205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.278471079 seconds)
  done (took 26.44916407 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.505550532 seconds)
  done (took 7.712002618 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.270767344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.277358234 seconds)
  done (took 13.75590349 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.875659786 seconds)
  done (took 8.081166987 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.272001436 seconds)
  done (took 7.482781067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.296781828 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.291992978 seconds)
  done (took 13.81079488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.257309279 seconds)
  done (took 7.463140926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.443978129 seconds)
  done (took 8.652163072 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.273089219 seconds)
  done (took 7.480478295 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.283961917 seconds)
  done (took 7.49047354 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.8639601 seconds)
  done (took 10.070716608 seconds)
done (took 158.261228233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.271987331 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.275486878 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.278028814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.274896096 seconds)
  done (took 26.306917967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.313359557 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.312860781 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.312980725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.323893437 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.315913825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.312801543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.772670603 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.305826731 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.324884078 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.315989747 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.315432201 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.31558554 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.31304631 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.306298294 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.315263305 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.314943186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.324698295 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.314877384 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.306561209 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.318051467 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.280818383 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.325002024 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.316619249 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.280264598 seconds)
  done (took 33.167752923 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.480663234 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.351452755 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.436510502 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.332917206 seconds)
  done (took 6.809501261 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.331477009 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.333694909 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.357768687 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.386402572 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.410239787 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.343414737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.306562662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.301519455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.287385436 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.334673787 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.409315934 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.349309146 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.416281992 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.277753018 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.466822712 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.281251522 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.280412058 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.332532275 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.383810434 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.406181861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.281396906 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.332503445 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.343901989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.349814852 seconds)
  done (took 33.5119484 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.279430304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.287749255 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.286748111 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.280006779 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.279670459 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.27999089 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.28564481 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.28170682 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.300818062 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.281159542 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.279515827 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.279797127 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.279438918 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.280255955 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.279979181 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.292771947 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.294420852 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.280814627 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.283825062 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.285266384 seconds)
  done (took 26.886916535 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.274438405 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.12659659 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.624600713 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.530060601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.27480542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.278808947 seconds)
  done (took 27.317418277 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.356177593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50109994 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.280987062 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.682177835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.769835793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.290064659 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.285047089 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.540985618 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.8853088 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.88789426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.344635493 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.351799108 seconds)
  done (took 19.385764322 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.283936124 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.279654827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.279597805 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.296706254 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.342388603 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.287161326 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.289391276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.275932838 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.345484639 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.34561298 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.286735112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342669163 seconds)
  done (took 36.865240517 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363316419 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326398507 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.370923626 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16189801 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03710415 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.488961018 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.176364724 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.718899605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.282094941 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551698716 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286771054 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370910698 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535984211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289668693 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282708665 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366957007 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505030712 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824758728 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283594544 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.50621591 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306897675 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280005716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.698826941 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.313303961 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490842742 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.260687147 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.539960041 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056795467 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589296619 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294737457 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289017502 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278017865 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552370893 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968042411 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375131511 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289285786 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.148918028 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.831262227 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.26825407 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.603934825 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286794852 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285104455 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290258748 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281164548 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214392577 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295241414 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732998857 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.290119157 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.990433222 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279486718 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290549071 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374150791 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.282927003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.852802001 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416784234 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.288367439 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.278074755 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286693648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854145269 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074669541 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286676354 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.218421443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.760277447 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609448386 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950793856 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383466538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.284591536 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.284203264 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224415909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.615747528 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301494595 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418424122 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.307372977 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942608653 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044167908 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.28435892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.227422553 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899557555 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2987821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.220897083 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.51041566 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059964214 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21998625 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.226788366 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215888178 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054281526 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290965933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.769769381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.293485001 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719873947 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.293939822 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298084486 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305877951 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507596842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.166457016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281954742 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.293386895 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404133694 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304841666 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729139708 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23370436 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.28644936 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541872423 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.494389582 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29163896 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397288569 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502711518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288194267 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.303124894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.291612798 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.298369922 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.90808295 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301114256 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004908491 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300679309 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.060749268 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087912142 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291241448 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.388224026 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.300128175 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55278294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.118075768 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181789103 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350941997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286109563 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284717281 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.638375006 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1396622 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.444343778 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.286608089 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291319334 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.299381981 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.283876604 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280569893 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.295957347 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284188665 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.06939231 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.509290009 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294870913 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565661085 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218788762 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422048284 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301790976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.507658935 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.59909901 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.288450226 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54674151 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298165948 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288949735 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301723138 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304887651 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382561278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307587229 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.296591036 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.547061208 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.289733089 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.289011441 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.649344632 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.068167112 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290049054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.290708369 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22995168 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919600857 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261341021 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294063118 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180601376 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.300373883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353617789 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29206077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297104002 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.277159438 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256190015 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.294568167 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.286015768 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515562953 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298007806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.630888581 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371382824 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.499016159 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926151346 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305521995 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.221283206 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.998510041 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.980416537 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28819475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.479142514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287331565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295910333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.2974114 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.943823593 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920535502 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293720411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.549621965 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.297489432 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298094426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.293942025 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288583973 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.250077799 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109945795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300457669 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.303136349 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431564566 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.302411898 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.222698063 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.804342099 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.294268702 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287657163 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.063592077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323231122 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.555317362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796701415 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551137739 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.11824036 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3030765 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.660893983 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.325664415 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.288902116 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288955908 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310690493 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.31425199 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299225571 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.300517051 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.622125684 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.742245346 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859038347 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102823949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878771344 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28724739 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.296229433 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.17605832 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74348557 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228158907 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950197464 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498290961 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743069037 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287634189 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503063186 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.611041269 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134078339 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304755025 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519319062 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31638387 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.308355222 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306606603 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503080978 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324148839 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297701087 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23474353 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.576706592 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534843563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292270042 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375677582 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732256416 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292786073 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07282973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.29044707 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.764396664 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480914459 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.844207615 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718213162 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295451802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29565271 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802759711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300984485 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818939033 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973974705 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297101668 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.50899896 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237293584 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.302807998 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.301723485 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.2920767 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.79412423 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.298043738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.552695022 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304154802 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226057843 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299418 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870646552 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.156067828 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.297949414 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293542426 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116876152 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301131716 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605078457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.3081064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.270186165 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296920195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22812429 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227037241 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.985282161 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295774675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264183302 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858612931 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.721594579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379728731 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327104616 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149214942 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551094309 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.307315534 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927234195 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523462952 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.230454838 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319626016 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.392937243 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304145173 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.285204441 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1909944 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.531882854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233173768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.520006173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.418115217 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.200409897 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292791064 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511849379 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.194701594 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303960121 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565491771 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.009476543 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.307140404 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104602325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321001431 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.297398643 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318018147 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.776626275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304883071 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36601191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306764662 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.305707923 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.305486096 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481502754 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315100065 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301287327 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.309139338 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388977765 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051392655 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.282490912 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072644334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938987682 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092834686 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933925869 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314072666 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295369312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295239195 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240848108 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444326568 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.824657129 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569309546 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416552392 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.862196381 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320675214 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299556394 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316670273 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513600228 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571961798 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173304325 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309253247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959240527 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.179110827 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307769168 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.508529145 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867143892 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939030214 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426887382 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.308772059 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751358102 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576088617 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.389445383 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297015457 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891133202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.319572131 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.78087719 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.305987127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303637648 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449076223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307841684 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991413332 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.307657884 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.452648953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.0714691 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.58036285 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.559444704 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881528241 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.310145503 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942328102 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071473904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567648554 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369152895 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309115915 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.407644611 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444604245 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.312117501 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185979625 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298489734 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147171343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.008921785 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.309987695 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940850846 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567965091 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.295706289 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.308439515 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3256673 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.309746457 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524730884 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093634087 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529784072 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.308365417 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301104757 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.87304322 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936861977 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31723285 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242390432 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.304052063 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564167587 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539772722 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325741833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.753367925 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.010856126 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927425049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.278791424 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321683922 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305696479 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072830637 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939215706 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.297179303 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863133398 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965919993 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299966182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575510109 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.305259617 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300013455 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594664764 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.304662493 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.307768355 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316868934 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942285839 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151818028 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.320320356 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.603770091 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.241466659 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.52869627 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999401951 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254347888 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310765664 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.501807563 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307055918 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422297972 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312891761 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.29926579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325280967 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.038510964 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592839841 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.308394419 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.296209588 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.30892133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321630586 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311757716 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554831196 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308359446 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.976645349 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.654376299 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.560022959 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310636332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.29126141 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.305628317 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302540277 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057363244 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.310810579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.973389766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94733275 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.317210836 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.317548473 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306464613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.520025936 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515682136 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320105651 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320175625 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30278362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319916804 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.208222801 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075092706 seconds)
  done (took 1577.30075284 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353086883 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.344684036 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.346330828 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.359992121 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329588296 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.368050745 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.400405822 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.378852215 seconds)
  done (took 52.116992114 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.301793539 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.463677459 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.335562825 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.3159282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.315849939 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.302359369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.81374386 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.319451193 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.314834343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.31294869 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.315148849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.323118718 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.029096983 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.316750943 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.306394968 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.295477686 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.315755465 seconds)
  done (took 64.940337131 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.30430976 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.73324641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.346176225 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.309077998 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.857016103 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.320835095 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.786156155 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.336793497 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.303675208 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.575604964 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.996142639 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.328448074 seconds)
  done (took 80.4355314 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.31203162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.311823299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.312857671 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.311418623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.311931147 seconds)
  done (took 7.797231264 seconds)
done (took 1994.048530085 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.708248107 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084136225 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.032519176 seconds)
  done (took 5.353612285 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.450853138 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.501983715 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.641492333 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.65990526 seconds)
  done (took 7.492511806 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.581496187 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.684656599 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.497986936 seconds)
  done (took 6.002398076 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.860768212 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.312068751 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.442702103 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.306480574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.3084649 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.310009897 seconds)
  done (took 20.164476117 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.31024457 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.312955999 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.309880404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.311394598 seconds)
  done (took 6.48387592 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.291325687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.00599692 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.29245159 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.3071654 seconds)
  done (took 18.134731078 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.055572009 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.069023696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.053213651 seconds)
  done (took 7.416267762 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.305683191 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.216074186 seconds)
  done (took 9.761013386 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.622646885 seconds)
  done (took 2.862410808 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.443546158 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.64090808 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.481970215 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.400879886 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485552647 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.637248887 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.170090184 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.690866306 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.417476945 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.777190897 seconds)
  done (took 29.385384107 seconds)
done (took 126.615861495 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.437126266 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.329354305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.512432676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.412243482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.545561344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.513649594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.59752414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.379180022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.115573048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.912982993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.414172178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.572600519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.765575084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.330615122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.764443133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332144582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.540001907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.689991332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.309125041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.315125543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.596087747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.051267867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.244620934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.267350852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.54109532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463453365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.642737792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.331715758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.277982364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.86663735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.46718043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.308171842 seconds)
  done (took 195.088829832 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.307578517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.307141484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.308328678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.307961374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.315111662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.313459553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.30927102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.318892996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.309264868 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.327990261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.308433806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.335832603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.307867638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.307944888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30781242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.308307704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.30883857 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.313637625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.313756204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.313330636 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.321312183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.308910449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.309092409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.307993266 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.313698779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.321067132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.308766245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.325811364 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.325033276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.309109177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.330423923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.31457863 seconds)
  done (took 203.288995187 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.314639943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.313606884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.310664842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.319994156 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.308472962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336843248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.324952087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.311059373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.309537401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.334331551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.331677137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.319901246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.310577344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.309093253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.312121476 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.310822612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.322221792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.313453334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.314002012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.329774745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.309524913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.324046892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.309951088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.310500848 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.334443456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.31116241 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.341320229 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.319680256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.314059226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.315073053 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.316582178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325472999 seconds)
  done (took 203.433904264 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.507732549 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.319148755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.318922943 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.256670014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.31975734 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.31975375 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.317476077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.518139213 seconds)
  done (took 14.121250911 seconds)
done (took 617.170644019 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.799216431 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.499158129 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.528426028 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.340442267 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.156604278 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.356993826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.34114292 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.520583922 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.265719788 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.524106337 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.671844287 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.336922219 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.816421512 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.338797484 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.603185562 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.442282292 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.248322066 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.38707494 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.680635958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.930886049 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.616172231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935967176 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.524841215 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.279203475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.821853066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.933828992 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.163134532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.270171074 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.346622213 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.672334877 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.071358408 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.42565207 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.411862954 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.385578123 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.440057993 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.422310778 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.400586339 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.388495263 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.527037177 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.688624237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.929686559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.091992197 seconds)
  done (took 92.782681501 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.308551421 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.308845327 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.307774641 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.309098349 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.311422698 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.307846984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.308059524 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.308352119 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.309015967 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.309470678 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.309204148 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.311501743 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.309566379 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.310312295 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.308959594 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.309052003 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.310232143 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.310888179 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.30871964 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.309016874 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.309253141 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.309450512 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.310582032 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.309178256 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.309443839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.310132414 seconds)
  done (took 35.292797102 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.324344119 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.58517736 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.763346401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.333062862 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.323615646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.327046509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.408406666 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.324413759 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.326557337 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.326814789 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.500781458 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.328195746 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.362874847 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.793724249 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.330518573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.325364744 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.324895516 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.323582227 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.593426778 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.334406021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.410093277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.326525037 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.408878342 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.335661374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.327236155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3245308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.329172771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.86533702 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.331428133 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.501253124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203820908 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.412694311 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.838337981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.785358843 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.214716917 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.33237054 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.326440023 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.508580885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.330723473 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.324837863 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.410312926 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.329456574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.780450394 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.988810254 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.344737644 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.326672853 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889500542 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.512059812 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.609357822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.337262242 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805141874 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.333303631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.328049743 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.327681129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.603344698 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.337868645 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.326377186 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.942072791 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.353379514 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.4127586 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.332754713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.327224003 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.613693334 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.331662327 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.59936641 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.333192809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.335538754 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.327164276 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.783128372 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.334512803 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.01511352 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.348173431 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.326831169 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.506402774 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.605851757 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.935887059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.335868574 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.617244947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849402167 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.415816062 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.335443347 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.863180357 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.420256584 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.335505437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.330027432 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.330442145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.328062562 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.375387343 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.411023505 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.940279323 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003794157 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.960607092 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.436278363 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.343682418 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.328161104 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.938887981 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.347545767 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.328641593 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.771685819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.004287707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.343969454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.338171991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.992702564 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.348341283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.414538605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337957692 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.786222359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.333981821 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.375692274 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.329896858 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.335371498 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.331439543 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.415895753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.336484597 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.328849958 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985518357 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.532913609 seconds)
  done (took 176.525227691 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.322509153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.322461805 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.322409839 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.322236545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.323386152 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.327841458 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.322864218 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.324670608 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.328242598 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.324241015 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.323742252 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.322572034 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.324840991 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352939555 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.332769867 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.330476913 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.935626788 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.324515709 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.324744041 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.324230191 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.142873695 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.329077013 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.324131479 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.323668846 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.326126647 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.323304461 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.350948963 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.325809383 seconds)
  done (took 151.83900687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.331465967 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.980940854 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.337250623 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.47593281 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.353865029 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.328912246 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475563886 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.399868064 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.337146857 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.329589177 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.330569477 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.679910427 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.338913346 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.920929783 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.547703424 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.485256806 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924876207 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.339047997 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.330226903 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.330769134 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.479195468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.346541231 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.68106315 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.987347326 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.339168639 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983446945 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.326020714 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.332754293 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.331606026 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987527362 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.336635772 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.683487821 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.421504198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.40107842 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.987806917 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.929398923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.931485772 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.500487601 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.337019689 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.330486896 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.330943252 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.322696399 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986888094 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.340210653 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.333090092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982636219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.356368808 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.335164057 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.343550096 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.331354276 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.397562429 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.398765321 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.686384154 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997324391 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.423349488 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.356347397 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.481624935 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.742642164 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.336569436 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.927191858 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.326225423 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.98877804 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.34164326 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.323211433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.334435354 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.339655587 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.501296161 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.487269124 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.934938752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.34087636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.928105305 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.505992742 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.338315926 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.334230067 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.335616395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.986302503 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.933762387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.50654754 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.488674618 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553756616 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.328378081 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.333112583 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.323165488 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.420906048 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.338449232 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.990706319 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.935929821 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.341757978 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.336261834 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.33660536 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.337099354 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.531109949 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.996572494 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.426552384 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.92954071 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.708027416 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.693309812 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.342066566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.399008111 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.335278783 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.688795004 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.342336098 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.398192958 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805958634 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.690113404 seconds)
  done (took 162.042140637 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60488576 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.599704413 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.430058152 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.455547911 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.986878065 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.947249003 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.698630172 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.469468748 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.454563592 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.595361926 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.628663708 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.430228822 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.526968031 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.419312487 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.076211611 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.408412516 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.435770414 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.46330997 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.437946847 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.409711341 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.030503933 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.638672817 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.524877631 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.428231789 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.440680921 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.20244659 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.920348196 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.934978392 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.534458576 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.764132583 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.90476707 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.518124366 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.397512848 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.073250299 seconds)
  done (took 66.054592146 seconds)
done (took 685.779990263 seconds)
SAVING RESULT...
DONE!
