cset: moving following pidspec: 22492
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.350262203 seconds)
loading group "string"... done (took 0.548409187 seconds)
loading group "linalg"... done (took 7.077324101 seconds)
loading group "parallel"... done (took 0.154408103 seconds)
loading group "find"... done (took 1.080948912 seconds)
loading group "tuple"... done (took 1.699515878 seconds)
loading group "dates"... done (took 1.168790775 seconds)
loading group "micro"... done (took 0.212481136 seconds)
loading group "io"... done (took 0.987421851 seconds)
loading group "scalar"... done (took 36.278326029 seconds)
loading group "sparse"... done (took 11.127282101 seconds)
loading group "broadcast"... done (took 0.915118809 seconds)
loading group "union"... done (took 11.939732266 seconds)
loading group "simd"... done (took 4.137349585 seconds)
loading group "random"... done (took 8.515101388 seconds)
loading group "problem"... done (took 1.858090564 seconds)
loading group "array"... done (took 19.813221181 seconds)
loading group "misc"... done (took 1.63405823 seconds)
loading group "sort"... done (took 3.250380638 seconds)
loading group "collection"... done (took 16.240545367 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482965598 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123071237 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115060317 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119420106 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146618915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114689338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123593575 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083435262 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.806226539 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152753073 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119574703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418026281 seconds)
done (took 5.145673963 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173755331 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082767856 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081584678 seconds)
  done (took 1.327629135 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064936075 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121563848 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066940724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066500183 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066513306 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06631676 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066140464 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066322147 seconds)
  done (took 1.676057054 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07355072 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068642459 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069122856 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068011566 seconds)
  done (took 1.44215053 seconds)
done (took 5.854062076 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.773713855 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205563071 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18379194 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399060611 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12976188 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154378404 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637065771 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327277238 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183850375 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081562529 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104665897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320420508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108095618 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638952116 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074318965 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091076963 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13746068 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436428501 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067245759 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082714698 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089700385 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12883536 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087142767 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075250382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145632626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06851458 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131654106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080477027 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066621172 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208624136 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172194631 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657034559 seconds)
  done (took 10.245815415 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097046413 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097453811 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069150459 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137143457 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099385255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070074022 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071308062 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067533963 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087232846 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128609872 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08900214 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101920284 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065626364 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069480113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08473093 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205150208 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082848901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082865678 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070830396 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075877241 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116941801 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078262386 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078128857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077615435 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128983888 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180289171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09870294 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097678135 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067050133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080789947 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117681766 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128410538 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067907064 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067079775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124726402 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095744198 seconds)
  done (took 4.657983857 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.299405033 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141084929 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090470438 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132863114 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065253971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107241588 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066241768 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080850931 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201315636 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.359927757 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.583861477 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111280073 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104607753 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067902996 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068860929 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067064159 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.358083369 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108699847 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104085926 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081238711 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070000234 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068851632 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341768994 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067264095 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063743388 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068318973 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057711673 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124230355 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068601795 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.936144336 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126337255 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067146259 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101107543 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161897238 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088617121 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276167185 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069068991 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064747312 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150605963 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07060421 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066685423 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083680838 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103420526 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113605885 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066430131 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067286882 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162104252 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065595976 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079108969 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.979925186 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154479695 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094936735 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064502671 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246740536 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086562491 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069508118 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064772471 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176111908 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137681883 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067954859 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067130707 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068327191 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069315987 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349622504 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066115899 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.932883365 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070682113 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077561392 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065269645 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069014318 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069302933 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074000464 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072720948 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08528194 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066580414 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090787249 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075754909 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065934637 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066137194 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066892248 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084418791 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360005088 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066925048 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070965049 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063923402 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064844374 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086436908 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101395952 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066875976 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065782838 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100282833 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.173248198 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067065079 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10684331 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067808611 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064438431 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085364518 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069753693 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113682753 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069127679 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092160185 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067874625 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100028165 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070375179 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099510138 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081359796 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068504349 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.402431407 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065691753 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065599046 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068374585 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065130819 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067804463 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066481628 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079446099 seconds)
  done (took 21.211671576 seconds)
done (took 38.574137104 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272636054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076031913 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075649762 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076269652 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075681307 seconds)
  done (took 1.827825753 seconds)
done (took 3.061920754 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119903071 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09985224 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065036243 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095793114 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064098407 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101137977 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099657534 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080693631 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099344649 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064405131 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096197409 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064246456 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064401794 seconds)
  done (took 2.365894012 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083410137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083245203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069231235 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082515236 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064088796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082661107 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080677644 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088540086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081040614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072238835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063864619 seconds)
  done (took 2.079753205 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082153863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084289825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069060789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081279873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063905181 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081570041 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081188494 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085505775 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081395259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073375819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064059738 seconds)
  done (took 2.063932984 seconds)
done (took 7.730595765 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077697441 seconds)
  done (took 1.284170076 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595776952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.101290119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081688216 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113067312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184294016 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121046648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282872242 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087790331 seconds)
  done (took 8.954643774 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088210372 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069105954 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068927397 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083375633 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06955756 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071606217 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071363247 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06850885 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069859279 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071488398 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072341653 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072132127 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069876557 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069307492 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072480351 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070911302 seconds)
  done (took 2.442008578 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09271841 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091358665 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074108341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074922523 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072109454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072277671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075057719 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073565979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071037955 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072476058 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074775849 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073690624 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07192553 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065442823 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074516209 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076232749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071239499 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074396956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075259006 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075573637 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074689039 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064545435 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071832975 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074192329 seconds)
  done (took 3.106999051 seconds)
done (took 17.003231015 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114834569 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071780106 seconds)
  done (took 1.398052381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08225328 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083453802 seconds)
  done (took 1.386986731 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085629506 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065569075 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09366989 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079536607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066402046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066091835 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090155525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066549561 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06587443 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066560195 seconds)
  done (took 1.968962634 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068221218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07942803 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071745854 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081544442 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075096368 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064918706 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073637721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068348556 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078984303 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063115632 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072063753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083197091 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071831661 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085048179 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073228605 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06933832 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071709493 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068229737 seconds)
  done (took 2.544682721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065567424 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067626759 seconds)
  done (took 1.363003413 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068514495 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064245973 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067304016 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068141908 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063716 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062780657 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063858147 seconds)
  done (took 1.682474424 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386343397 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11075447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295653603 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07094748 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082161116 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251967607 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065689055 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070500017 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070890995 seconds)
  done (took 2.675334985 seconds)
done (took 14.246960224 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07987639 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08638316 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095567123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364982507 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091932532 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065970168 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114363234 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191307353 seconds)
done (took 2.332097248 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21521334 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617259208 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387222998 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197928942 seconds)
  done (took 2.438675846 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32655877 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086418977 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058919901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066850927 seconds)
  done (took 1.785142323 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066571358 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068925402 seconds)
  done (took 1.384420676 seconds)
done (took 7.071734232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066732332 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08305762 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065525774 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063958658 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064196544 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065817032 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063745153 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06371397 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065734917 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066253799 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068708838 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065886547 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066227011 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06598174 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063620897 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063391116 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066114244 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068751443 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063846778 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063497052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063562326 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065889503 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063829754 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06396683 seconds)
  done (took 2.8610355 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084623346 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066894468 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071790354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072048654 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07038204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071467585 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071271248 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066205452 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071623769 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06834717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07023503 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070562514 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068467089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070280861 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068447009 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070359092 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071622682 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066848977 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068166622 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0699036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071440445 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066407753 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070292204 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071183381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069559635 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07014439 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067927849 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066371169 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071004697 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069898333 seconds)
  done (took 3.362950675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070512988 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063083663 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063993161 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070478152 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064102296 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064957862 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063497105 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064053791 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064611192 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064055071 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065008445 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063621201 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064019449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064921844 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064391584 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067475359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079107479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063757471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063648975 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064156785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066970366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064447394 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063594042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063566883 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.176675021 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063489484 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063790696 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064407605 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064203546 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063219627 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066609147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067269228 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063458069 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070056289 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066908443 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0636105 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067281113 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063039568 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064290032 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062878377 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063185083 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063341331 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063572247 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070546468 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063516564 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064784636 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063554826 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064586902 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064075233 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066025678 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062690809 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063186578 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065401684 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064799672 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067075355 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062958962 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064088898 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062883377 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064292064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063227235 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063508171 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063179224 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065652332 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064128139 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077481743 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069910812 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063113713 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064767934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065810229 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066054522 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065158511 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076848574 seconds)
  done (took 6.077150367 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091578656 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087767567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065820213 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065435354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06220272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064240981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067988947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064400571 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066157237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070268839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064382402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06574819 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065970348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076923204 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064685514 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065731563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070166574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062221576 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064659356 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06794697 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064248324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067765919 seconds)
  done (took 2.769795973 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156829207 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070730392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106145947 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073665933 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068532831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073172341 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070297991 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070130807 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069949591 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068191681 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068191074 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06998778 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068305393 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068097022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069003401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068298655 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0701074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068686136 seconds)
  done (took 2.644659676 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078090328 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067508117 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087090637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066656186 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066454476 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068231377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070811863 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074591189 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068624853 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066536609 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074500086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068663094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06824295 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066374474 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068220518 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066157349 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068508083 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066182738 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074385311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070899723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070963188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074143177 seconds)
  done (took 2.819271697 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079865289 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068185964 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083432368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068965635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06247779 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064484043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070012347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066781707 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070232361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068071493 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066536787 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064625324 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069678192 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066156866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069649419 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066419299 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067881031 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066069333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067705798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062226955 seconds)
  done (took 2.634670386 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086986558 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068649238 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067801289 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076842808 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067722565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067534402 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076131891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068074624 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067816743 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089273702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067420863 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067525561 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075705251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072881197 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068014137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075723488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075290106 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075466734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06756901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067550706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087369112 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067276918 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075225329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067278121 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067420826 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067139324 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067275922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072148016 seconds)
  done (took 3.280514623 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066259861 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065405839 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063962319 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063935053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064091188 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064277502 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063891397 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063695775 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065921913 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063900044 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066184886 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06603423 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065976675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066122165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0660674 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066220886 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065787834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063672083 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06335018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063468743 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06570699 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065635741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065748163 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063921636 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063715851 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065464152 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063834307 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063898861 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066333654 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063538187 seconds)
  done (took 3.211097488 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075363217 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073125648 seconds)
  done (took 1.41345347 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063445989 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080414048 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06348258 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070128548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070279308 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066558467 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073448468 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070068163 seconds)
  done (took 1.820154467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082063318 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077228549 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068066826 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081151623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077101448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082841441 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133040974 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06716272 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073154136 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064646547 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079922557 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065926012 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072741369 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066826299 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071869503 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072613694 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064019965 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07243978 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068815097 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064895462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067736638 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07539931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068962101 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062124819 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067680242 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088764339 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077669234 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066256105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069494239 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073855891 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071971017 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060541956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066124533 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066734414 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064178903 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075445737 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081471181 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069330205 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074912026 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067082994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077112594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061523257 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070822262 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073065284 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076332669 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066507367 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067147354 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061451335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064110423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068638481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061288404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066204256 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060876788 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075895384 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069800531 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076921658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06537635 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067695284 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069163044 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069910014 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073398411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068565558 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069243839 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066120558 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076289914 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070993252 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075545852 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061950832 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060770873 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064326225 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076400753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089173865 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072713433 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067364368 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067674937 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064528114 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069816266 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068009535 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072627507 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073028612 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066706679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07209144 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074139392 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067214243 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069610602 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075619845 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064845204 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069650014 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064770794 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0831082 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065479869 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064584823 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064494519 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077347278 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069832029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066337595 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064471791 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073822043 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061040641 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067567059 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067550861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067663512 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077703504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071330737 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071438519 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073950176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072432579 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065165356 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068143742 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062053007 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065967122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064404056 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072517589 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059612157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067719594 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066033999 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065445966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201648793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065336439 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067942765 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076015571 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073346338 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06499807 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063764377 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069756323 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067025957 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069492692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075237873 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065365098 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061949139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062735441 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070441908 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067401293 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071282708 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072464423 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070188643 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061436442 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065144612 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073074505 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076513238 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067436696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067777812 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073819562 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068544308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066315 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073822567 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070051253 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066466437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072476301 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067619692 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062467866 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0702879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070218737 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065492546 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070568873 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070758423 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069179551 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067854758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065932643 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074737567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068676395 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066828299 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067065232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065320664 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078128763 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068903915 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062135641 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064955658 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077105775 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065399752 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067228994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065510631 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069032335 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067407091 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065429343 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066736503 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069299031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077014207 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071058396 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067526517 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072460109 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077812479 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066835216 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069127152 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066482147 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067879668 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067646758 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075426094 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071645942 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071830442 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069318634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063230983 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072459904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074213568 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065676897 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0643317 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065602775 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070640122 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071986497 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070588661 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066983851 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064610975 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067057691 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069625117 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068949513 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066075511 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065543392 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073327807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064459077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073497199 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06753805 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076543795 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069575507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06160432 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06954956 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064425141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072508035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061520823 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064397559 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065679375 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0673201 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06523476 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068912812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060708207 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073075352 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074087029 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065930801 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064580528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065244063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071981656 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066802696 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068744283 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068687674 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071291298 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075296872 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064630734 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068545227 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203642037 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06660081 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060524702 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072236769 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064901121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065693302 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06603249 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064846413 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069804746 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076623751 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073362052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060854488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070099125 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065649819 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066508684 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062448842 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071507202 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07024006 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067587503 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074152497 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068483135 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067823596 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071836631 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066534264 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068190069 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068173332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069975884 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068354421 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068417243 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067074579 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070344814 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06597552 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064156256 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068841259 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067015313 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067554018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072765272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066918 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067477053 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0693382 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067805906 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067963725 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067255716 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066512797 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070243496 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067854173 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067062325 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069537581 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062535026 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074214956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066641463 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074932846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067151729 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063629645 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073927405 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069463461 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073783991 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068064785 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06750849 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068822814 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067266895 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069796629 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073748143 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064721058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077371698 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07468972 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067168091 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069328045 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067554898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068258303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066151809 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067781638 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066683472 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067964818 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066084395 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07125776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068846007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066662326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068157882 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067239781 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066928931 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068150317 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061316221 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065852022 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065957535 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066295615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076207193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066907951 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065953875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065248199 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067296907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065302119 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063294029 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074760582 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075814376 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066901812 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073893164 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065996174 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067697364 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076860195 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06075355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064773657 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064122472 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064479584 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073911683 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066803474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075941684 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066487816 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065742921 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063773931 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066859147 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065276322 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060563858 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063712904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069394069 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064545794 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064816647 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065275779 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067615021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066151584 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07475404 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064493929 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066503306 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065745976 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063434004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065139996 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064781074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068678833 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066389903 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063474877 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062621383 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065030329 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065861128 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066578143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065213636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066874222 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074428247 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064843344 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067935467 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068377844 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060129946 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068151096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064989766 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064773431 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064266148 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068702208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068623619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066018674 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073984181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064670141 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06568092 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065201633 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06302504 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064781761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064958756 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065128854 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064587411 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066838588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07287768 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063069322 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0680778 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065530437 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065606056 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071481131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066022031 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068056847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071516119 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065350013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066924297 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072985557 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068902632 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068364052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066023814 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065955895 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069738715 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063356852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070076331 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064676828 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065079887 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066030615 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062592464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064188251 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063851521 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063040198 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069758729 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065289952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064437858 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064136812 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062425536 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06535151 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066927131 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071564062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067133269 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067346514 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060205237 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062567764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065368837 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063238195 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06651317 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067594242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069593324 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067238092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065492034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063790455 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072736695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069663903 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068222669 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062582082 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068079481 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065819888 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066986303 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065399088 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065110977 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065499818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068695732 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06605225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063708489 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071192315 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067241659 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064659207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065512989 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065369254 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064485636 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059447671 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065146054 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066176836 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069344158 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066323424 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064227768 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073897328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062270683 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065041309 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067327598 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06406058 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068715393 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059253484 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065529592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064161707 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064865622 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059623924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063871756 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062126555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066535163 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063758361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059599159 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074007484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072785773 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067278185 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063320484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.303636584 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063080839 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063608978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067995345 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070228482 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071127708 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079044163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06799843 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067987316 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06400056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069369626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071434 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071716431 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065571505 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063350831 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067320849 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071815719 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073753686 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067332038 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067938592 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070816711 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071298487 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066170128 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071787483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065010694 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072018359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080096393 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068783095 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068772925 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073973505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075857993 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0691168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062601162 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06864938 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070677873 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06833506 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068969173 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068765441 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082994741 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071337348 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067598558 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06629086 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071370244 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067212008 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076085636 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069258571 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067954435 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072074894 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069882312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077795954 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070529243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075966632 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070873047 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071050743 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067226827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067589432 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065536035 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066865451 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069099197 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068053353 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073391416 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076374212 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066685399 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07865051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076395393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069134106 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06440446 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066888275 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067572277 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062521788 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068437855 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06549142 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064930969 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065540632 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065853204 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068193283 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073183855 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068455477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068252847 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067350924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062098375 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069812448 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069148067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067949653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064273242 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066855365 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067550299 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071049294 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070405511 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06501019 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068610327 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069066006 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067650422 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062433808 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07384149 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065982887 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069012965 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066590309 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067790187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067946441 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070713036 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072297732 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068105643 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069566179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070859068 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069360604 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064556332 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064198183 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072497596 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064987406 seconds)
  done (took 42.582401215 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102411499 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064806456 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063460361 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063084379 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075090816 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063896854 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06287128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064033031 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063752126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06589448 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062892477 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06307491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072282797 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079312952 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07534606 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067853501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062947098 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063935658 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063071882 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063826234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072319207 seconds)
  done (took 2.838987741 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074801497 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071808333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07322196 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077095858 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068256025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071597443 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074188029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071634223 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07724738 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068226269 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077273522 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080391094 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068192121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068296328 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068321778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072122797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076987612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068811873 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071784405 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073677195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071843373 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073624335 seconds)
  done (took 2.966300023 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067847907 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067144268 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069010329 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063000375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066876428 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062430718 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070382514 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064791832 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070322505 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065986432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066022275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065910686 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068339271 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062624294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067211768 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064537938 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11071131 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070121517 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066681564 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067636542 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062733145 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069305098 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062662638 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063243069 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066374783 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070614327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067782166 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064937808 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066833938 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066149629 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066900965 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064789832 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068668126 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067427166 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06633105 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066058746 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066890219 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066802653 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062932054 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065348219 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068132871 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063563205 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067453554 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068235354 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0651363 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064839152 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068649733 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066726793 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06221023 seconds)
  done (took 4.665957733 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081093228 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111617426 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069230689 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089599478 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08122181 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076607621 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070543724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090779276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064630286 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065751554 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082860157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081296369 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066910392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071848676 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073532866 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066856595 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068533091 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065802044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071125275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066396556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071622652 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07320139 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081243646 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08034552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070822401 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065906328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066310592 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071032974 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079903842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071651365 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071696277 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072384631 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081665945 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072343779 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065843153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069377039 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082892473 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067111187 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069179311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064304633 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068784612 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071011225 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073108783 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083197368 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06697609 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071828459 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066461876 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063668062 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079627863 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068913704 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074245897 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081620545 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070655882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067048378 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071192305 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081653285 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066826151 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065250823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069323703 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079004668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064127668 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070576892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080192639 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068357312 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073538027 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080911382 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071822698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070335357 seconds)
  done (took 6.497430254 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075953125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073301274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08263959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081611895 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073368236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073911585 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073261629 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073256984 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07330859 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078237576 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073490753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095239784 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068326834 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075943905 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073816387 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074018404 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073490012 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073214019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073502439 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073865761 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073186362 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081077562 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07326572 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081209561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099492998 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068769705 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073034358 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073186439 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081503016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073122286 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08041341 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073524233 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073103895 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081432509 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080470213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073102192 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06599762 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073099982 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073293674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072980338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068370316 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081466843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072876542 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068084214 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073259891 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072653063 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08100819 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080136254 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075711024 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077806161 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072937412 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081335568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072820158 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073082556 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081304686 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105720289 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08109713 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080931401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07299347 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080392232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080509676 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086961132 seconds)
  done (took 6.156033547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084106012 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076204221 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077360272 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061898302 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064873156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070642677 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064606879 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06476218 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075469916 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07558647 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078105462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070493827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073440737 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077904083 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070641658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073400895 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070453724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070438828 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075207563 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070681165 seconds)
  done (took 2.842348524 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075304987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083727209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06752035 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072482008 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069428154 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072589258 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069179099 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069794803 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067849701 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070039236 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076841308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076605199 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067532326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072593958 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076813175 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072312741 seconds)
  done (took 2.547015117 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075832368 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074124215 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081235279 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067337073 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065180562 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063436569 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066485221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062239142 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063217076 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078552423 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066942257 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069223395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066727759 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065270548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064025215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069608301 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062982272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064436469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066393611 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079831946 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077773623 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065564121 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067240563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067423924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066653432 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071638735 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065941076 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064185947 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063835055 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066622023 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066961822 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069658675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063476138 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064331655 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064735017 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064194678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065985234 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066718207 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069431964 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06642954 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064415383 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066608548 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066730013 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067348135 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062686251 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067018388 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062920488 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069122983 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064521734 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066817099 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066055535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068765681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06660651 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072746638 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069114214 seconds)
  done (took 5.102253791 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080254386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070395067 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062181132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064928138 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0694832 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068154368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069879458 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068129944 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068394249 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064809398 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068626515 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069122245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068299262 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070132392 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068344163 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070031417 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062583549 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068558046 seconds)
  done (took 2.635083163 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072168686 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067098802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073601864 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065988063 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066571724 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068676286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06245803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065204186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065253764 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066699207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066406459 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069287933 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064885475 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06863728 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067283159 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066468936 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068776571 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065387994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066602058 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062856954 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068564695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065171284 seconds)
  done (took 2.870309398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093413368 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082437585 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139143697 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079477188 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083765966 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072506932 seconds)
  done (took 1.948180873 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090642865 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080039615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06736116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08961335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074514218 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067797456 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067872703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068332745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076700281 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077333403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0681036 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076580912 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077237024 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076316388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073903126 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073541048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067797879 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068155871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06684968 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084868733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068280649 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076574912 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068650062 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068209092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0685168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076965738 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077046144 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077400463 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06813591 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076520504 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073852377 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068297738 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077249624 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076890365 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069557181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07666928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067964658 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085057719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073462932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076072748 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069247153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073960257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076749006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072860264 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076665228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068047009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072570974 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068082923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0683719 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086402283 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073756674 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075809257 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073956269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077004761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076945654 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086988028 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07714345 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076098026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074097375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079714769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076055415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074382498 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07604139 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076651505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074382191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07587011 seconds)
  done (took 6.32268388 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08321021 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086863235 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068776205 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076874696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076153817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068121594 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068535904 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068474128 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067985963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06796139 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108627985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068609297 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076552263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076424353 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068642779 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068561099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068546073 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076284353 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067953898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087385675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068191284 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076261845 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076441348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076076418 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077052558 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074178756 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068270366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068462112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068265583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06833501 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073282976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068731388 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076461388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068003027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076723446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068367579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068411363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073473435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06828868 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073815878 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076156714 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084499959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068572411 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067587517 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076966242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067716542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068067009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068144151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06781675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067374158 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076545063 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07666234 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076532957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075920691 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06818153 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068324553 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068040718 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067981415 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068240967 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073865618 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07613842 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068066879 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08766128 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068320547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06818848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076369241 seconds)
  done (took 6.231163764 seconds)
done (took 130.345650248 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185463782 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165267147 seconds)
  done (took 1.743791916 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070125067 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098834812 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077398175 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129818247 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066764704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100824518 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100100428 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078602027 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067147523 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067042485 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067115876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069220991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131991568 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066990155 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066677396 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069286008 seconds)
  done (took 2.73438333 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098528488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159256754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100004852 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065964112 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097173792 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073747535 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065314603 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075586205 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071898626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065616081 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07423983 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071075076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065664413 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071562524 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071937429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073437418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065529795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073426126 seconds)
  done (took 2.850412075 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102545282 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092021095 seconds)
  done (took 1.6044021 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162123558 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107210774 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152447846 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348383855 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169420304 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232781375 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129565601 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.132564164 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120406337 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125429364 seconds)
  done (took 3.086516824 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098394105 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153040802 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.259593425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116129628 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073083408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09654774 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117351917 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079232251 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081462279 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081009715 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081029671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077221793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099963623 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074478548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074404973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076841036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103393748 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073094558 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074593698 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077109843 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099735282 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066178882 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073936733 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072493232 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078000685 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077903031 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066044138 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065738698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077632175 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074677114 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077291311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094453026 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078110205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108752663 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070883218 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109597187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077028157 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075064612 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074578562 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074850608 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079849747 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079369443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072823529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076821026 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0657776 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07700687 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065568551 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06619684 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079153983 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068069058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078540468 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077595307 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10908527 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067131509 seconds)
  done (took 6.059263124 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101535359 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105679973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072480454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112276083 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100744848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071920082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102252957 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094211255 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10406659 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071305967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068996041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072442209 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082874407 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083618913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112915131 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104920003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074350033 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071181809 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105098342 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10316865 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069185448 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095598845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090645211 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102750975 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067687032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070990722 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068743825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07122421 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077835242 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079340007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0701693 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081958206 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085107618 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078863854 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067609556 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068291796 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068737443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080119601 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080291971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079970446 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078207127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067995936 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068707486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069898007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070455042 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067925559 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079615639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080966167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079457156 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0698288 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070606681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068613509 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069880751 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080448765 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078605878 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081328938 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081090248 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068553999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069626206 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072250769 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081533525 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079964096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079980806 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07016587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079654282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069300056 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080812094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085637202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06867632 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070269513 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068753056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069943651 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070115155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078578747 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079065934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070343224 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069836393 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069008941 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080628207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079506673 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068601858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077862308 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067878464 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06885219 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070397776 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070324421 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078590645 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080385997 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070777738 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068817218 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069672143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069365276 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067862077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078031606 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081398224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080554156 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080326889 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070465788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079906687 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07935141 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070032781 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080021054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068455333 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200226443 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070743631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080152654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078678184 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08157249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070977373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068821985 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079581818 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082426142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070069877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079695487 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08227903 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080425653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068840772 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082885003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069781877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081095537 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071069467 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081189485 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070565417 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080905276 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070070626 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068626118 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069459553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081075254 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071305367 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069515136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070498911 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071053015 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080809986 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083713489 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07181019 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081887257 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07963357 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070876153 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080250734 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06998733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080164613 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070999187 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07098577 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067928801 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082922572 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069652171 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068976378 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070479415 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081122122 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069229349 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080809341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080115882 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068266929 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082714021 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081267172 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07887163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081606613 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070291176 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069929255 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068781967 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070624356 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079568999 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080009995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071268283 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069556391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078820605 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080527432 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067955412 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079414595 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078892451 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079532274 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069258674 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070044261 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081189756 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081513439 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079036221 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078802683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079396967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068921049 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078723601 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07931063 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06892179 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0856873 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069297824 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083510916 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080156161 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07804086 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080049805 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08162883 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081439757 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080947006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084208756 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068370147 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068618367 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080323787 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068693551 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069995524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079107106 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070477228 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070427027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084036439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069052864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081054105 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068915883 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079053481 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067335403 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069617435 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083543831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068428984 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069712894 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079809072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069380973 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077544612 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079824136 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077342924 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067617349 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069177003 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078773719 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078151516 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067288776 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067370477 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069814976 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077035639 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076009633 seconds)
  done (took 18.728539686 seconds)
done (took 38.2243555 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211343302 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152819238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18106529 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119433984 seconds)
  done (took 2.178652259 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124435021 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101817453 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095568618 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065310196 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102690406 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065571995 seconds)
  done (took 2.004048598 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315935605 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214610479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184631543 seconds)
  done (took 2.159170716 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200930327 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18916825 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.397100983 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255828649 seconds)
  done (took 2.595972038 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145247273 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090260619 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067660675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083470986 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142378336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163372948 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102109501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127602928 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07874978 seconds)
  done (took 2.500171341 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149204182 seconds)
done (took 13.062032029 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.246216236 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111336244 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10184776 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.153195097 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.171979421 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091581248 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073795815 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.24929965 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073718843 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089453193 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185251492 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082358089 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154849993 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110131151 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082975141 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077833535 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106721476 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07589441 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089815777 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073070755 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088115413 seconds)
    (22/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.163404501 seconds)
    (23/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.187425527 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191839988 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077477284 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.186015091 seconds)
    (27/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.184543141 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09163649 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205386901 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077782874 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092240448 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185154294 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070340979 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090204545 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188701049 seconds)
    (36/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09715983 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067442288 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082390472 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 0.14104457 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156361695 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153392684 seconds)
    (42/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119190927 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122473988 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072663089 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095609119 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065987577 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161743078 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072338217 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052496333 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196045895 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090697063 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09341715 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107471489 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072056129 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075800577 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.14948411 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089918805 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.199827295 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072835992 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064329426 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072694493 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089049994 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072151907 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086073431 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090429712 seconds)
    (66/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114778614 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150435705 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078650049 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073490324 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075404621 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076364014 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086726237 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072628789 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063250008 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155097689 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066910968 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051982181 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051337678 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090916491 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139766736 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071488606 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071003312 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154988594 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.243966686 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100942399 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094372692 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094402205 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.275955356 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095409892 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151970372 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.142763509 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.066611306 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076397378 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076331703 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178370775 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.127059401 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139696536 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090519913 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081645265 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075010303 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067280161 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067291816 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100524647 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072687396 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072137615 seconds)
    (106/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09752934 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196697403 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185228215 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153163662 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.1492229 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051127545 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065979125 seconds)
    (113/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053003527 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.193780957 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.167789943 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060978682 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072901972 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065788182 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109500519 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052770667 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090173084 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136354636 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052464207 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074127612 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073123055 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108051495 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138839186 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.135736691 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073559021 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066728026 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198846192 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157954014 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072272037 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075795803 seconds)
    (135/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147970022 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060911595 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072817429 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070804053 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071887777 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062012826 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072238336 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051243138 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097613705 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065697156 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05138936 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071754284 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075646122 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051940107 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086483396 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065379675 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073850562 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088280764 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078778803 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092850881 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065076201 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088851306 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0725635 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067011797 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066160227 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063329589 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065473821 seconds)
    (162/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107577494 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174828174 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065406287 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080851341 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052521409 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07394591 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062373081 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065711592 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13155672 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052362327 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052851595 seconds)
    (173/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073215887 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080416253 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053050958 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051634533 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.176157665 seconds)
    (178/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052065371 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066408975 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074448782 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051455401 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071326692 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07006458 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051902876 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051012629 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065128068 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113419711 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072101215 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065602907 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175416423 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0604604 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053422413 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166728629 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075511389 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.232064218 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.167949155 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066362268 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157043396 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115028042 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069580036 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071767442 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089099249 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066394414 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.0807611 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093541696 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134642554 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06974041 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064680754 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100123418 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139835819 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113213149 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066062891 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088707898 seconds)
    (214/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054434628 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054917299 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137127003 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109997589 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051839802 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139304718 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067911675 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074502221 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07340679 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067435187 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051686823 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151603852 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053613883 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053382795 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052497465 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071849196 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066196053 seconds)
    (231/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061322886 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088836842 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137848088 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051742209 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070135922 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053085125 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066702397 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064741438 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067337688 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054435049 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066000237 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12598182 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065486 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076730267 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061965836 seconds)
    (246/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061323947 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13157195 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066627355 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088993025 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076920946 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174427999 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079707406 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149991223 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071883858 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051524113 seconds)
    (256/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052628851 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052581019 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051461823 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109205131 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051449935 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163879168 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086221525 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069131491 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051886756 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051867387 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065033669 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053001918 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078351472 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068253074 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052819383 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087372834 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071926123 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073597619 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072381791 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052001657 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051703049 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051975659 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073595205 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053414349 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065966681 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065468566 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051902254 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068142565 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067387862 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065910089 seconds)
    (286/309) benchmarking ("sort", Float32, false)...
    done (took 0.128428399 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051738502 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069795144 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052208031 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051813437 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06516391 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052010923 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051928185 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07344592 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068828866 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089440653 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067913639 seconds)
    (298/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064795226 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101685037 seconds)
    (300/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064669725 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067242027 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052098662 seconds)
    (303/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073772077 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176091907 seconds)
    (305/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071555259 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067699392 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052418455 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071456801 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068584573 seconds)
  done (took 30.623664069 seconds)
done (took 32.083016842 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084286757 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094068396 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075143093 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093285478 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080490066 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077362418 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07238801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078800211 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08032027 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08130576 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078461503 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055575999 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074299995 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073950181 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074435649 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091422969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077987529 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072688936 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073414227 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064979522 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073216092 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065665442 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067610509 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055074472 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078040685 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072286269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072809293 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074586686 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066227503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066864859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070075403 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073795754 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066562963 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078492896 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072381303 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073408682 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07495488 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076706666 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068103054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066417538 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074472477 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06647014 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073205156 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073883005 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072275745 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071718799 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073238283 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078012975 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091283834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068484252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074079666 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076192946 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076578879 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072227357 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069845907 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073473756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070835414 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091525863 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07371758 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068378377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073872073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074038348 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071296971 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073045457 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073131163 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075489689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075164794 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07156419 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074546247 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07106405 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06563772 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072911269 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06901133 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066118859 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076071162 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077010661 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065130276 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071214915 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072748377 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071836683 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065208248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067664025 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067446562 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072148592 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067778195 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05498449 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069301467 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071660876 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064691733 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073251398 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071650083 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072391391 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067194071 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075596085 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065199046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071204663 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066236098 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066096352 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067325119 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069415825 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065827256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067777721 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074763062 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066961569 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071630771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07960168 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065600805 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071965007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064773831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065379727 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079665259 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074831875 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066027066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068065308 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064885674 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07233726 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064867103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065622452 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065396146 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065556011 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070826386 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065364313 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067148988 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071879225 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076957414 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065402602 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068604328 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067264907 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065184816 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070203387 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06523187 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200394988 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068436063 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06218291 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067984398 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066445411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073102269 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06837449 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072572699 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066986141 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074743856 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070336392 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071365392 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071560953 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06482561 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059468182 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06888359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06883041 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068483718 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066769958 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067764428 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065988453 seconds)
done (took 12.548300342 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067843782 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143445364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099863077 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095226025 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08630759 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066816855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076590639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102248772 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068344461 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103084175 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088133223 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08557008 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113534354 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065272359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066260496 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070441397 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067983117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082308755 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102376338 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086932673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116556472 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065574486 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095074404 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090193051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087491616 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102419664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067227354 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070028218 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069718983 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091717008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086446558 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070007156 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066773232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100976254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09270157 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083938228 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06677593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08302365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066898441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066189269 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067590322 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098376042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080373794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080799908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069953977 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069795336 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067380695 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084143564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089548992 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079250517 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087221372 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103744113 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068979379 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065865838 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064904504 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085995191 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065766176 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069362103 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06661138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068792732 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066678919 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069471619 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081498167 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082348202 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07006906 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080842414 seconds)
  done (took 6.880848434 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084450674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08986798 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084220851 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084186495 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065658395 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066617164 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067131865 seconds)
  done (took 2.093568111 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067680601 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088348747 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089090893 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089204226 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084674461 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087812591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076540446 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066948593 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080709852 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067991586 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087561795 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103036536 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06751276 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073110838 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090945513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067124079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090508745 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067118601 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069776292 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090662233 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069131876 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082486523 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070085695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067608665 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081078455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067723019 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113815687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071247127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068776343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069935087 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065279378 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107915684 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080520914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075835938 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066887815 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081089623 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081017623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065135848 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082884093 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071571963 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080197768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06678397 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067762227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064605568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070768815 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077445165 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067656199 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067287091 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069070959 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086050014 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067291689 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080260573 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070369247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069357039 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068365854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070709396 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076726775 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067581652 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086617181 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068619511 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083769391 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083039006 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080351498 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08313509 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068770451 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080381026 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080579095 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069655974 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068290186 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070020766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082726289 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064967416 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06797149 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077418372 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068327731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089149247 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090473777 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06830539 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075810496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067301331 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066785655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067534657 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089507919 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069866562 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066724312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07101229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069886454 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065251842 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066094197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07011472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065006959 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068636297 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069682259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069860451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069631841 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083374585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069223994 seconds)
  done (took 8.850041637 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069107963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068362345 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070543512 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068233405 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068394792 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067957792 seconds)
  done (took 1.987363045 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094486297 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069923599 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081072573 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073231515 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10546708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087356436 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088025214 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079536163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084355554 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079446169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087521749 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088844229 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09343673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073114048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087231027 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072562969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087453676 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076312744 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079019465 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073613504 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087563662 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073116674 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073689485 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081990563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076105785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072393977 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0674263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07904914 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07929436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079450087 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073233961 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076106622 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071494294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078967894 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087603291 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071360018 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072171846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077672747 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072778628 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07608962 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088660642 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073308723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074960184 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077485322 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078859733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071085233 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077746161 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076840467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086608266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077829978 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077262674 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071629833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075650023 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077533892 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071350333 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078820062 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077391214 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086589455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072541505 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070651415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069239852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075639539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07846802 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075351428 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079106577 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077208231 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071039387 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073508013 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073374971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072228011 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077571982 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069641994 seconds)
  done (took 7.178018183 seconds)
done (took 28.529503369 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542319944 seconds)
  done (took 2.082494245 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602022281 seconds)
  done (took 2.167148676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.686868141 seconds)
  done (took 8.250181101 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394860985 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480817896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.698856913 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131603414 seconds)
  done (took 3.313567989 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668281715 seconds)
  done (took 2.241530161 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211288004 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197765177 seconds)
  done (took 1.989420977 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379641128 seconds)
  done (took 1.954683898 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115958608 seconds)
  done (took 2.686853101 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265938858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164212241 seconds)
  done (took 2.00513714 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463969783 seconds)
  done (took 2.039756818 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.852057719 seconds)
  done (took 6.430323453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209160924 seconds)
  done (took 1.82565047 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241388825 seconds)
  done (took 1.815572224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.689383077 seconds)
  done (took 3.270216279 seconds)
done (took 43.647568471 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080450281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081460265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08146572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077952624 seconds)
  done (took 1.885501377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077066752 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072882149 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076865749 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072824544 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076938644 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072742698 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074228109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076976301 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07286279 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072871081 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072406082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072410573 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074757788 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074090337 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071043811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075196655 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07622968 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072511046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07595241 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072785526 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07102321 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075411273 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075081705 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071931593 seconds)
  done (took 3.355755404 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078605244 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072646314 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075063842 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072672165 seconds)
  done (took 1.886791723 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078034424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09235445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089323536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077438633 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092130169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086348792 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069072957 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068993524 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073245862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077010586 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067745034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096193716 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088031039 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07652099 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078761098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065776667 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068443767 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087254382 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077175325 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077978389 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.0697816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077093001 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0684617 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088170045 seconds)
  done (took 3.471861923 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079258061 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103804487 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07718507 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08821069 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089886882 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065373097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074658333 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089580058 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123497369 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065367656 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070115831 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06547533 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072370859 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065145992 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076145238 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105118287 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108142816 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068463332 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096068324 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065715576 seconds)
  done (took 3.236960758 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075321145 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06996737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066142042 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069514753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077377007 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072966324 seconds)
  done (took 2.022149513 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070204647 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067736117 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067205178 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06773073 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071659083 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067769822 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066273948 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067507726 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067631318 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06688088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066454867 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065773424 seconds)
  done (took 2.398164737 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424448417 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068631067 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068679114 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065741971 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070832071 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066284659 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07986159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068678502 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090963562 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066573043 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066379723 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068325315 seconds)
  done (took 2.793579225 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208925932 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076478098 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23869407 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137228269 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11225899 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115622925 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104734507 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113891083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144969427 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102266573 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168306222 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167541256 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107138257 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138803139 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089044097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098129509 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156559312 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163064667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103596073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166530714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144660783 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124963621 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146772122 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101766575 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106295304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122574946 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070814965 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079802177 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17147488 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13226834 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147289178 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11130242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093938124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177507026 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172018212 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143590201 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135225639 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084127604 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102630885 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133395915 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200540225 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088751169 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164952552 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247221749 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081512911 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134381148 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121032844 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120166932 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107386996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089936299 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14667212 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185314396 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140034306 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08740994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112744698 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115184767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116011623 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104612688 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183817826 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162348233 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128410068 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071669646 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100290156 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153478222 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131830423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109860829 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12710606 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094499583 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134435523 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155468014 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118647684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14344765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129266353 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08852014 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119856892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140223547 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129108935 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170633524 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12539591 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073434921 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1258061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103726045 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081285195 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142270857 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075625327 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176554854 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099242429 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106931412 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112985874 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108908139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108796354 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162910495 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143717164 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244371847 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066386864 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104933743 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120795452 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14840336 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087918725 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108286715 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117371823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078451889 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140757112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075530586 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123520737 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075667098 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126405582 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132667684 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075913546 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123618055 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101070229 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100786841 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134874468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160734012 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089849312 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082721816 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167766179 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122982542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104514707 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144811347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157592231 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09898523 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103381795 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149429615 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181153868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089752634 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164306252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107786245 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083682554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087455136 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124705306 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112679699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122267374 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082407329 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119504051 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169802182 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075852057 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095180415 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133920372 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07942127 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081081021 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105031952 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100485451 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095000743 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100666808 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104757608 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13785855 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12344627 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104468991 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269874696 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099116574 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172400458 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089636748 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101622235 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104845605 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069990863 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138375834 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158490097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080174988 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166421165 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125470754 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105303172 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120591811 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083103791 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141129678 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078906648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070058876 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144520781 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110556879 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110558413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152440187 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104849294 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127882465 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121465274 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135595013 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133548419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12867544 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105628302 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088439343 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112732385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126642583 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07281683 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091478922 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080356109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104178575 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095689254 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083883569 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143426118 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125379642 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10061336 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112331383 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096813483 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147480196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076535564 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12977053 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119779752 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094616503 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152382624 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152692409 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132205192 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099224196 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145392111 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070160621 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073341262 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233212861 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125738036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083893374 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084322921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118624406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148713916 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130015948 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138585044 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112316386 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121468082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154341294 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070031364 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115255273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149764232 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123282631 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104011934 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091018101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098796876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142701059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108994103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184481786 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114486107 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127448631 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154401681 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099764179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079793499 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108754582 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136623287 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104987848 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145258831 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100222152 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087669002 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110422537 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074315435 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101101988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128532425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12034947 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136708369 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115431554 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133796511 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076886028 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117316629 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121105627 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12310451 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06432654 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12109416 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162537613 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093355134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118637114 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153056213 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079195644 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125019554 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323002958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146477355 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084711629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110237245 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120237913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127985694 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12126136 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140589729 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109410029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136442328 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109733034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08583057 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087182566 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098056532 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106083475 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095010491 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108669536 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115249091 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095315706 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132508377 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104415908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110204476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118703734 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096360144 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089100574 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097698497 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175935111 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119166576 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172958112 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098815426 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146097152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165779727 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07451168 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079118302 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078301715 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140091418 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084432662 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131812312 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098446311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105821165 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125210021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142623197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095287401 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06857193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108787576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135330861 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112908621 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099176977 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105137078 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163750599 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10033775 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078987826 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113588068 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104659652 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102252153 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318379691 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062304783 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098585873 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076414772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081195609 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132082977 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154682496 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081790277 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103363801 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120650653 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111596784 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128344645 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102625332 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100408136 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115070085 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150603309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129984809 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090393873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113452647 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131084364 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15854696 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10511352 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09574926 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172628581 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154033496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178983373 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089009248 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114334628 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114048382 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108351329 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140180084 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083380759 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165055308 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081843605 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13750252 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104617961 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091048732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130719404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098851068 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089114196 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149476519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117940356 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082601672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078078377 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118356952 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121262643 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10770279 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07518836 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140023876 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072945794 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132218767 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168686757 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081193321 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249312191 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096769757 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080655239 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109628477 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103462735 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089774305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099032421 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174636784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088765459 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151046375 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14273763 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114376998 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138254041 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100941389 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637132799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077852347 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152806374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117217843 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174568799 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097833815 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118218648 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1101971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124574461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145366162 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106152872 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176664508 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132717023 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116744929 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079379756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102766481 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102827916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088973475 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105048032 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114174685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116513447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094040634 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11660525 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123778231 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082370889 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095503469 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156685534 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117245734 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14538394 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140897174 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085107979 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118571689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139027319 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079826093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122151989 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152390189 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105939665 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242532516 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082201656 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103983297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172207475 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073418127 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165324488 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120946287 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110224615 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114031974 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115468609 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13215221 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109650556 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123567329 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094070825 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112443342 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113309786 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082370718 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07788692 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105048843 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112428718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097045643 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098590335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098519775 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152900409 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07116062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096254478 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104189441 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146562154 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176534077 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088589983 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082737593 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119809541 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113260526 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114142198 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120507468 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079495144 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082786247 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081884737 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077252693 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108561929 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112974107 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104741198 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111982308 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165405875 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082452018 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224809396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095263517 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104511265 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069628802 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078915871 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096128885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097849336 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108624569 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101077264 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170774663 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094324311 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089860156 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093041348 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073018094 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227373765 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129654701 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112058538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118886912 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098379513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06338182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110144154 seconds)
  done (took 59.231180027 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111994578 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082186923 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097259912 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149727003 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123243082 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212875169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157782477 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19969979 seconds)
  done (took 2.82824772 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069919132 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094758053 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.1004569 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082152839 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066465076 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068660915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227845497 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080396695 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066365343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088591687 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078400498 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068457961 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423790997 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066268915 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067623592 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062625652 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067118265 seconds)
  done (took 3.461465359 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367575843 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598793894 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373095254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073041468 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.870625526 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092074356 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.06239991 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130633112 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073919058 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526045436 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705177618 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124159072 seconds)
  done (took 18.69039421 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078056692 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070002384 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083942108 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083686191 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072548592 seconds)
  done (took 2.076409978 seconds)
done (took 108.952825991 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083292444 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393859158 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054138346 seconds)
  done (took 2.165757811 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084559932 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08523327 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084360437 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082944149 seconds)
  done (took 2.034317431 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076886182 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075607841 seconds)
  done (took 1.844062579 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226124002 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139279271 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087411256 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082376124 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078171109 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078522225 seconds)
  done (took 1.933936688 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073941474 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075401845 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07295098 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07595478 seconds)
  done (took 1.988749924 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079103254 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05212688 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055073111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055855478 seconds)
  done (took 1.93245775 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088775708 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079283178 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078810578 seconds)
  done (took 1.937821581 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102500287 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084620424 seconds)
  done (took 1.877483106 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082342029 seconds)
  done (took 1.772802889 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100208876 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114497869 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129336539 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109411479 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137739411 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109295243 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086391568 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086900794 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077355371 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087648289 seconds)
  done (took 2.729879393 seconds)
done (took 22.441375946 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079373241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373942991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360642054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090202926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667200179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356406639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005879876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092081025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113798851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067615795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084287965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64890398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.001489657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324472442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982948088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318885656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649968491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068327153 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067619786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068301853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.993159654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067551982 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067742958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068604372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648316992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371206691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068294404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323802888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067906218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069737471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355406357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068002531 seconds)
  done (took 16.267074993 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071496917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118304269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074188026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084076861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071123634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06965203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071647325 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069657395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120126262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068219246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084666004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06781063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072344023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068414031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086966011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068310465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069295156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068716209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068380356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068613497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086279461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067953364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06832541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068681199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068174651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079798757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06849695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068188195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068871797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070877123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071371354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06915593 seconds)
  done (took 4.104214636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117232285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125491908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07453559 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102899692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112815263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070521168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143631345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09310389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128085205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068880784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084979723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068324077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101475284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069121124 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088158391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068894664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069935639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068989381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068441729 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068741464 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087642688 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068547134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06862567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069010575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068918781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081973426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069127012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06869084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068906018 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070637293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071665417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069183824 seconds)
  done (took 4.366985342 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075008946 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07534733 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083958654 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083913972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070234876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071803521 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072830231 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070179139 seconds)
  done (took 2.315652777 seconds)
done (took 28.753003521 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079597233 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069371378 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072743108 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081829253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073263269 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078487438 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067573606 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074640935 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072239806 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072873179 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075081736 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067709922 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071017361 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067544649 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073474129 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06785811 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079596255 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071776506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079294353 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079517753 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070345604 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073291913 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073962531 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079410437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079549745 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079228134 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077902654 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073082263 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069313258 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070733791 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077081377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084128578 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069038114 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079366732 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067884712 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06797916 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07152526 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06764396 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079294037 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07690463 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069761706 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076658616 seconds)
  done (took 4.797029362 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090048849 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090653497 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08493855 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061977529 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067184921 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06497308 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088941773 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059642327 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059693129 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087843277 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056343682 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059535799 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062464154 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05413567 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059365559 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0567953 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061404304 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055856343 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059228476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059430892 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058266343 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054492634 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060055425 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062675918 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059219642 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061955182 seconds)
  done (took 3.41261786 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077201919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083576711 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087935389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127066439 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104112916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076823048 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078004774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092528429 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085280149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06730843 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070957686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09317832 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088164694 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073678914 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067532406 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084090723 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081885243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069114579 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073761876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090822946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08426304 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083406837 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092354264 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080200697 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067039537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06935463 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071503561 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080951683 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072079518 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076512747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071665895 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071125286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069282968 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078984806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.082554942 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069467288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.0902558 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077026738 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077890666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06823569 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071327184 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068882978 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090009852 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122749691 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067213921 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074191961 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075313768 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077014648 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067784688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085855842 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078570233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067200548 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070622643 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067042498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067682722 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080355292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069824308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069916893 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07649183 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071051971 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086236297 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071792312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082753697 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067162196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075332989 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067104352 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06876429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066772195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09237861 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069401309 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108142327 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068539186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068347299 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076669928 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074960655 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073416416 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067761888 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082804724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078038174 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070935195 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075966609 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070988172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070441601 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087893331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069987876 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069367788 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068900115 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074248768 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070413786 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069493264 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080642881 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067749599 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070598639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084485862 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067538598 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069014875 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074074605 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072483357 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067178021 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078693915 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072537971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068602277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076773345 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067793864 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070671473 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078119702 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073865336 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067040334 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072321744 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074108386 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068692856 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069821095 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070755189 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069362024 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076128635 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0740706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072242883 seconds)
  done (took 10.643885725 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162366156 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154011259 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070463222 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145668847 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0766916 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079484259 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150201777 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094943864 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068278623 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068536082 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069260435 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110184563 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106143123 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115647782 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078751034 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068136905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083338053 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114045159 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150418821 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143243741 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083988979 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077274949 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070178734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069266558 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071127776 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07880926 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085585029 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076747375 seconds)
  done (took 4.469459213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083023 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097400052 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074683837 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089648294 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09180833 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068005492 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070322248 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069657725 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081021363 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079561048 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067949179 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073945857 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074781949 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071616262 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068992977 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074716253 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075464416 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069553048 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07108717 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073276963 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077708655 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080829697 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072359169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066910143 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074360532 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067092121 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064847429 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084989689 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068623157 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089968565 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066177991 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075153224 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081839168 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068696471 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067988877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068162853 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067930663 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067692443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069476563 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066247602 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066938377 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057808812 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067109782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079840782 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074000843 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056836122 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072603537 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073106239 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07333561 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065454102 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070758822 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070760329 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071426173 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075032721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073282175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072727886 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069546425 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065951319 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075535503 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068171747 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064834269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066312632 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072373443 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066883581 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075555299 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072148201 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06637395 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067476355 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069789677 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073690612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067631927 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070952492 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065527128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069531759 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07201361 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069448462 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069138913 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066106945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067318547 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068072593 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055693773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067522743 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053678922 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070621512 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066088461 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066200617 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067554772 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072437298 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080402782 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068982546 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073667963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068632142 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06717359 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070694156 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060952635 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070537199 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082682012 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083136922 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06793893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065965493 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082398304 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072194365 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067230611 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05625723 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075304945 seconds)
  done (took 9.233386378 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091131268 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070889992 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083206632 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090978205 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086963621 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074652952 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077120052 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069407738 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082725523 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07376359 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076328188 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068098541 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077143187 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077190147 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069957019 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07707912 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072328313 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083132971 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082615738 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068707481 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075940391 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080414747 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089510231 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080202534 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078857192 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079939763 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08949293 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07245659 seconds)
  done (took 3.95857788 seconds)
done (took 38.219848622 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.788287493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.041978935 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.789614807 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.198512058 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.877117107 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.013440516 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.796872216 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.785779575 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.084363334 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.819386263 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.025550334 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.858961261 seconds)
done (took 65.798210113 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.811291685 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.930672892 seconds)
    (2/2) benchmarking "String"...
    done (took 2.065412373 seconds)
  done (took 5.719193217 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.130228104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.385489715 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.029602383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.785334004 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.787091549 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.092667928 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.585868246 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304342452 seconds)
  done (took 30.694804781 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.866545156 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.009701252 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.454099978 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.488400503 seconds)
  done (took 15.587447873 seconds)
done (took 63.742715929 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.819609355 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.828703169 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.810168492 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.773399477 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.842031479 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.801993849 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.849164195 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.980716243 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.783749678 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.781950832 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.785461362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.218875434 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.799840642 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.864680268 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.788057704 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789834202 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.803335753 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.186858362 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.942233142 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.805426027 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.804231374 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.797577057 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.789233044 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.792545891 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.815538451 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.787649377 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.220748261 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.791112593 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.414343809 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.78917798 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.814761131 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.041335174 seconds)
  done (took 204.836622375 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.78561911 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.871702314 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.919050853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.825137078 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.307536009 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.966164912 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.901887003 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.345039542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.789871827 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.816231488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.136319386 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.786024792 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.165079165 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.766008493 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.814794562 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.891022705 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.056128908 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.146108833 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818200334 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.958085828 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.809903284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.998804255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.960604881 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.089184686 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792334846 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.882662485 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.934870099 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.806236421 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.980475072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.016470428 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81039319 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.837088062 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.007815415 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.663601021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.801581676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.792468069 seconds)
  done (took 171.978874718 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.944141745 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.789898723 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.78762881 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.787826829 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.800309077 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.787759814 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.910791073 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91176048 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.252469772 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.236333913 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.840934674 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613608789 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.786339219 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.857117766 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.798794454 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.788527375 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.804592516 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.814417367 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.789404984 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787768227 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.913433796 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.798628853 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.893551006 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795864786 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.792136061 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.797181925 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.167737019 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789413995 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.797976606 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.053149703 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.789557656 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.790857841 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684341835 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.436027256 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.879080884 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.788559707 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79590992 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.790053243 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.012516891 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.790082954 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.790862299 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.794595724 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969048553 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.788744479 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.916069332 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.788885357 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.292264851 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.790141055 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.792364852 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.376295401 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.471795612 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.79014907 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.789952071 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.79148279 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.789004484 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787926262 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.794816117 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.395171252 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.867369383 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.79086952 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.794116973 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.796746978 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.789782246 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.829189214 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78678783 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.38091849 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.842812214 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.005605626 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785709701 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784166803 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90687675 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.856968221 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.877972117 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.785848377 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.783711244 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.784300039 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785089614 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.782564959 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.865614887 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.785053822 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907740477 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.791753266 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.786571145 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.836212561 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.782581772 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849826055 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.783755583 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677918183 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.785874088 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.780900476 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.090330038 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853254137 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.781322784 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781912308 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782977967 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.781187478 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.921538057 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905265486 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.559182609 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.784380315 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.381428034 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78505112 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.923963218 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781738731 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.967181358 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.783136612 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862746806 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.786680393 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.782878488 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.781821367 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.812908554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.784675959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.838230236 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.785068767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.152698245 seconds)
  done (took 403.453259631 seconds)
done (took 783.993174313 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456965573 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.420101943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537774095 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.451735741 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.425086734 seconds)
  done (took 14.014128019 seconds)
done (took 15.736181755 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.870160968 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877111672 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812101158 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.872413491 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806315106 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.871377048 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85561065 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811062244 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.841238107 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.807744636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.841358621 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.807550948 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795873368 seconds)
  done (took 25.592128067 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.008634159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.019076157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853439587 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.019028567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829981067 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003428134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945972258 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.937963802 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934330964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800023687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.797183428 seconds)
  done (took 22.87404675 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015432377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020254616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856513728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.022131102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831121624 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.017842725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949954214 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.940231646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937109287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796928657 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794442411 seconds)
  done (took 22.905756071 seconds)
done (took 73.094371388 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79062337 seconds)
  done (took 3.513681379 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.81235892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.947839733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.79908484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792658841 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.791243173 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790722001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793026255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793414959 seconds)
  done (took 16.244067393 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.786344137 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784067328 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.783401101 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.786218224 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.784067961 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.785510927 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.787572724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.78261912 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.782723371 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.786814021 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.785800325 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.786001201 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.783750038 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.782455128 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.78607836 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.78532307 seconds)
  done (took 30.281113666 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.78448132 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781847999 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.782987748 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.783344684 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.782210206 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.783587327 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785779316 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.783065862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.781997164 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.782183793 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.783311415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.783387652 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783858115 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.782552482 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783532323 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.784677989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.783503044 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.783746156 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.788253669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.784310498 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784272886 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.783799884 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783667465 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.784545417 seconds)
  done (took 44.529283325 seconds)
done (took 96.291490918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.675735542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.178156649 seconds)
  done (took 8.571361874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.787213577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.785898065 seconds)
  done (took 5.328323569 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.785834309 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785320307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786346185 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.786569494 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.785714642 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.787269494 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787731621 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.785480401 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.785759924 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.786011121 seconds)
  done (took 19.581039966 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.786250527 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.787617753 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.782967074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784833665 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.784907627 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.782553617 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.787272255 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786001061 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.785437128 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.782947681 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.786232136 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783812315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788202694 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.783017931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.786204354 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.783761288 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783337417 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.784213221 seconds)
  done (took 33.84881846 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.784232664 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.786275695 seconds)
  done (took 5.288155485 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.782380053 seconds)
    (2/7) benchmarking "second"...
    done (took 1.783183892 seconds)
    (3/7) benchmarking "month"...
    done (took 1.781152667 seconds)
    (4/7) benchmarking "year"...
    done (took 1.781397465 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.781085211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.780838665 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779896656 seconds)
  done (took 14.188016434 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.783743832 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.964351501 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.042192866 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.450271379 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785475301 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786570847 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.738802526 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.786333394 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.788803269 seconds)
  done (took 19.844641777 seconds)
done (took 108.36906359 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.595562668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.776461093 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.154346303 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.87442535 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.790475076 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.069995813 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.806285006 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.990623052 seconds)
done (took 42.774654705 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842843944 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.327996258 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.35463569 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.024282678 seconds)
  done (took 12.414257756 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.762010761 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.31745622 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.828538052 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.449595473 seconds)
  done (took 20.256331426 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138119489 seconds)
    (2/2) benchmarking "read"...
    done (took 2.134783619 seconds)
  done (took 5.986644493 seconds)
done (took 47.209684597 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775787917 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771781849 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.776150646 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.772241355 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.774470634 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.773849788 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.771599512 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.772594328 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.774624506 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.774963024 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.773605507 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.774695566 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.774323156 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774151641 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771771007 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772038059 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773417494 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774081685 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.772359524 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771573105 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772092394 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774120357 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.772784259 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771526381 seconds)
  done (took 44.268752481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774645306 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.773325507 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773468355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774377557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.773064609 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.77378579 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.775335438 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772740275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775137587 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774498654 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77209288 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771388312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774841727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771848427 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773372777 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771564297 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772909588 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772053567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77457545 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770708698 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.774452575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770977094 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.770932875 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774217466 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.771499018 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772304788 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.774476695 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771653703 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774449708 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.772794002 seconds)
  done (took 54.901192513 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.77826861 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.780460805 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773452612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775120302 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.775530365 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.774240874 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.774269772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77328944 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.774924344 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.77413334 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774436699 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.773180674 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.773633502 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77395409 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.774576888 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.774995674 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.773400938 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.773683661 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.77325737 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.774452057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774507397 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.774958659 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.773958684 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774018339 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.77338311 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.774250025 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773730428 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.775555669 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.773637271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.775499204 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774302877 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.774370725 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.774871389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774058067 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.775092769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.774431329 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.778102443 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.780817236 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.774979819 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.77434574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.774761166 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.773935301 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.773993952 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774910871 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.776253827 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.774162295 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.773024469 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.773796868 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.774294572 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.776288016 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.774038915 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.773507502 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.773286323 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.774192537 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.774439058 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.775642276 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.774018928 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.7741376 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.774346211 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.77483909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775595835 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.773754719 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.775217559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.775491155 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.774169407 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.774739725 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.774955945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.77375874 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.774899028 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.774501679 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.775107288 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.775126217 seconds)
  done (took 129.487153985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.773962047 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771898387 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.771238475 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77205604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773322502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773932388 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.772461134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77349177 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771913814 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.774482665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775719051 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772625174 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771847125 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.77493572 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775027538 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.772021214 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.775098104 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772161579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.775179685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775092287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775582182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773695693 seconds)
  done (took 40.726132119 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774844755 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775310243 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.771843439 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775741161 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773919014 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775048515 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773801198 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773738484 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774352331 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771362929 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774443529 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774284669 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77222554 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772383681 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77237394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.772497445 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775334263 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772039003 seconds)
  done (took 33.633832811 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.772678227 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.770991444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.776363133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773361777 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.772349464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775298416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772336957 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.776297781 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.776019036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.773447631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.776139494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775619001 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.775164729 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774090741 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775321187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773219769 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.775863253 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772663217 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7762893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774917118 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.773583717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775329148 seconds)
  done (took 40.746201293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776456907 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778314661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.774127879 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.77413087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.773576053 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776006202 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.776194504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774868045 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77638229 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.775843622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773250241 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775696731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.774571606 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774879626 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.773948228 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774176078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.776321526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.774477809 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777019396 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77533798 seconds)
  done (took 37.215001431 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778677966 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.777109951 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.777907572 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778656993 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777464723 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.777508199 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777622722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.777776863 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777038223 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781384812 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77790384 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77828309 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778032151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777173461 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778628248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778255475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778094516 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.777624016 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777959966 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778355558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779763423 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778984985 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.778346914 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778397296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779146455 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.779263132 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779009364 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.777725039 seconds)
  done (took 51.503809259 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777251909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778374905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.774693945 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.775590067 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.77496281 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.775009908 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.775129193 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.776051318 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778882124 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775127382 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.77825252 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.779386911 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779125052 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.779690949 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779638473 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.779087659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778576665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.776078196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777081461 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778508398 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.779146249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779921702 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780187015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777283937 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77697617 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.780392755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777391659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777395744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779619108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776285134 seconds)
  done (took 55.043590933 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797687003 seconds)
    (2/2) benchmarking "in"...
    done (took 1.798214951 seconds)
  done (took 5.309558126 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.776620234 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77890426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.779437614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777736832 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77603801 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780185851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.779269213 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777336337 seconds)
  done (took 15.938068254 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.779329631 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.779664273 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.77976909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779749255 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.781659082 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.780975578 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788879035 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.780409629 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.782462802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.780366633 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.786364291 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.786802263 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.785418926 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780623933 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.780834691 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780925127 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.781634983 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.781078434 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.780546044 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.781378212 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781964457 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784598144 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782520962 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.777761388 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.781226489 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.791757304 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.786650535 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.783186403 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782404903 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.787028236 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.7822687 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.778554881 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.783318032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.781877105 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.782297687 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.783317911 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791471831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783346673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.790275318 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782110878 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782665846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.778811395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.782335171 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.786370261 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78407153 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.783205437 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.78209274 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.780750482 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.782551538 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.785544403 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.786200296 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781191433 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.780749197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7890757 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.784615409 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790201853 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.784643243 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.785077107 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.790096595 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.79318885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.796344444 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789469005 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784162528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.784213319 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791224492 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.803170391 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792914464 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.781135028 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780676924 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.783395328 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.791743144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797521983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.79279561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.784123952 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784474331 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783949368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784740575 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784937372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792472093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.786693591 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.785338368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784418131 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792168372 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802742917 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.783262553 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.785146523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.785087915 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.785851711 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.787136645 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794721413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78647106 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.784912155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.785914495 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.785842527 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.789612219 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.785890276 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.784091206 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787409324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.783276762 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.786312243 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785600946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787570118 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.791843444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784663549 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786272672 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.793866588 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.78538599 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78506277 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.793994535 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.786948478 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786752558 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787224643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79316329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.783987299 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787835067 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792169584 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.787409834 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.786544735 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.786969186 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.785870326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794557664 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807176436 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.787612718 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.785878909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.789377324 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.795806481 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787530644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.791449312 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.787646093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.783909877 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.78376179 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.7890647 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.786226718 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.789325326 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786889555 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788910763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78429415 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787665521 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.787724208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.790339989 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.790097314 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.788610566 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.788996185 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.790985531 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.790726777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.789000175 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.795611424 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789476058 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.789499267 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.788901182 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.787458087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788297371 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.789454927 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.789523609 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.788671804 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79127004 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.787297165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.788965698 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.787862488 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.789341015 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788940556 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.788667993 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791784364 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.789292491 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.793890716 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.787632874 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.785419905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.789075578 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.788818414 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.789339217 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.78819266 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.786126246 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.791082077 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.795895408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.788286235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.789287003 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.792257541 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789440948 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790180584 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790049747 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791540062 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.796220396 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.790599494 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.797293016 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.790288416 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790983536 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78954783 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.790270012 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.789507418 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791249271 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.792011747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.796207737 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804264919 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797532232 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.791498334 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.793832359 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79068799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.793833022 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.795223014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.790732692 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.791903664 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791045522 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79040586 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791663201 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.793903293 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.791364295 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.7917951 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.790906418 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79123461 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.792165209 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79068519 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.79283682 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792941211 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.78853849 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79207955 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792618723 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.790317706 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.789763192 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.789649763 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.790925 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.791223982 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79218391 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.802857566 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.790014841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792964568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792014569 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.792579299 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789947656 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.793452252 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794277134 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791786323 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799177623 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.792654031 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.793184285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800212098 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.793107829 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.791665607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.794950978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792115745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.790644133 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.793993721 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.797783201 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.792129594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.794058126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.793357479 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793919989 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793530093 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.800572294 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.790725494 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.791998538 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.793922405 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.796476426 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.790432934 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.793814126 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.794889841 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.794221468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797165871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793683846 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.79489148 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796562237 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.794479273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.79444339 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.793688546 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795568005 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.799958298 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.799183302 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.794942552 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.798845626 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.794636325 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.797201488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.794302987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.795000763 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.793685083 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808784405 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800333815 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802288972 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.796951604 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.794920382 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802462699 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794720495 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.798372501 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795542547 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796586214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.796161864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.795364923 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.793003421 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796785516 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.797352724 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.795731431 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.796074142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.796770685 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.795239078 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793262521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.796824238 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.796272342 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.796519477 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.796058815 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.795035376 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.801983396 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796796076 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.796227825 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.796203369 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803569942 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797257784 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.798441983 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.796150489 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.797449321 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.796000716 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.798112801 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.796642099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.798613398 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.803305969 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.799223912 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804890318 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.796745417 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806003244 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.797656399 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.799280336 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.803454686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.793154774 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.794541781 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.797576547 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.79720095 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805039421 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.797467383 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796124178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.801004995 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797482823 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.799551764 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.797954739 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796580712 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797450934 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.796816448 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806212853 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.798042538 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.800369667 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79923931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.79471061 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.797881742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.797071708 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.797110857 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804176754 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.798952254 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.798796185 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.797126854 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.799157364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.798807024 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.798254795 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.79794438 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.794929056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.798928335 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806637931 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.798283446 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801721944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.79798296 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.809045877 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799166399 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806349498 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.798403975 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.799503028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.798585148 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.799015208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.802078771 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.799217364 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.8012591 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.798611567 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.798460779 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.804025294 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.800898003 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.803036413 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.799590321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.799809751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.799202327 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809278111 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819607043 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.799930392 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802289348 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.797450417 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.800635067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803684402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.800558374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.798729448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.802235538 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80772764 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806371536 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.800129759 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.800493527 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801090533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801410371 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.800345056 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80025224 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.800681697 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.800618961 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.803003418 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.80136005 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808148187 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.800135856 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.801329792 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803808241 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.801260983 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.811849191 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.801296109 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.802659424 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801797341 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.800561864 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.801924052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80213502 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.802197848 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802594369 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801481502 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801840855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806965116 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.805135135 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.804151993 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.800840594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.801404739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.803711754 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.804181437 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803778702 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.802995848 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802986091 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.803794766 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.802631163 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.805847376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.800853855 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.802295536 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.802279624 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802669461 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805605455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.807853476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803713543 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.800365231 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.802901558 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802752309 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.803436376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.803575026 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.813996871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805536575 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.810419437 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.810972382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.806007466 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.802682125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804434098 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.81003563 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.80253182 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.805820057 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.803531173 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.80574902 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.803616184 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.807143023 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805078009 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.810937043 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.803204705 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.803494054 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812968339 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.804740058 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80459143 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.803378487 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.806814222 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.804024099 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.801429025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.804334169 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.803466569 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.811488276 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80677701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804751041 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805209356 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80357148 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.804208218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807331089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804641064 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.805675629 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.802617142 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.804715802 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804773211 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80500458 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.802856994 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.805126478 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.806644086 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.807398979 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.810994303 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.801429928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806555965 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.806043293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.80649878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80619927 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804084445 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.80262303 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.802872095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.805585261 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806290099 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.805855068 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.808036881 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.805136669 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.805400766 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.806256444 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806150276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806561134 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813072848 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811587978 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.803742721 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.805061806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80647377 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.808772439 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806242903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.806537511 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807147789 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.809101993 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.805718663 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807173681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.807292403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.810177393 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.822712811 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.806109706 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806654827 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.808982387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812990052 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.807707435 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.804664024 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.806444366 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.809966198 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.810501949 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.815031233 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.807184271 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812666307 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806477924 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.808265688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809642945 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.809570145 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.81488854 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.810373668 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809056987 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.80831891 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.811140174 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.824406416 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809125052 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817908217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834359118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.809594509 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.810136478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.808704918 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806837878 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.808504082 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.811097655 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.809928002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.808647838 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809410212 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808070503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808938393 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81421742 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.810359581 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.809535942 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.807748401 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.80909279 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.811597672 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.806431259 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.808828201 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.809677424 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.809387075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.809847555 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810576901 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.809246868 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823233397 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818988719 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.809158601 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.809466258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806892694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.813471565 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.810427162 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816720363 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.816498287 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.810905281 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.810675226 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.812307156 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809641034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.808235293 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.809791647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.809962596 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809161767 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.807283675 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.823427139 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816962161 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.814862193 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.811704706 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81163639 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.811172298 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.813184362 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810563605 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812115723 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.813360748 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810049938 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815436577 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.809704607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.80960422 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.814253089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817449078 seconds)
  done (took 1073.080351131 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809229838 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808987337 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809727002 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.809308075 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808302045 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809727597 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808005338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808858323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809370169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808056043 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.8078204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808422082 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807932523 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810732534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808699651 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809283456 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809161701 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809709013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810057862 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809802494 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809724102 seconds)
  done (took 39.735019964 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.810960618 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.809355763 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809488308 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.813383571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810122507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811952015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.809424826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812064742 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.812062941 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809095459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.81317959 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812516431 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.810390565 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.810469457 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810471191 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812152954 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812739885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811023622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.813922171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811373307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812705528 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.810598588 seconds)
  done (took 41.594930296 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81340024 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.813849918 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.812143438 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.811671642 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.813675227 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.810652624 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812659527 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.813350793 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.813750666 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.814755327 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.813013465 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.814923961 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.818861814 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.81725218 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.817387549 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.813831228 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.958060121 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.814560296 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.815614388 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.815058789 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811595894 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.82055552 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.811397796 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81136866 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.813775229 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.814153175 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.814688563 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.813131859 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.815468427 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814591209 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.818485857 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.814408148 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.814075354 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.817147264 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.814204594 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.816396072 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.818013937 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.816151322 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.812110542 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814092401 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.824870046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.830968334 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816317144 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.823265195 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.814813823 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.814415105 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.818059833 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.821512193 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.813590044 seconds)
  done (took 90.849371046 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815544549 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.816103769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.813568776 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815444898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.816136864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.81596836 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.815484748 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816002451 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.813055156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.813752151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.816513404 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814547768 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813747622 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.816042119 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816547733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814113949 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814234233 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814121848 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.813464445 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814667105 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.814373966 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.816528434 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.816809097 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.814413013 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.816537371 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813750474 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813981364 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816467511 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814459577 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.815252874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.816575325 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81711568 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.817105321 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.815170364 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814668065 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.817353256 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.817189573 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.815310352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81797194 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.815293018 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.819332146 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817652683 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.817580768 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.817400376 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.81594521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.81587158 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814965928 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.816045341 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.815645762 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.81813742 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.816601437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.816678705 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.818106542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.815838391 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.817953267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.819389024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.816101159 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.816789251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.817802999 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.816153538 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.816124415 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.819527897 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817204306 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.818751716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818173698 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.817036027 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.817119328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.818529581 seconds)
  done (took 125.247688355 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819510493 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.819582772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819264645 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820990759 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819686151 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.8195735 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819131681 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.820852735 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821006124 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820288983 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82013165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819980445 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.820032006 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819863358 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.820054443 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820609291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819732982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819588411 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821066202 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820607487 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.820228045 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820477919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821296368 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819887154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821444388 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820809546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820801464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819784452 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821566074 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.821059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821287862 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.821234025 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821726479 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.821907866 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82283958 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.821794313 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820807011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820269687 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.821691059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.821710246 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821016709 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820420467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821225242 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.822734269 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821421125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820891869 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.822457339 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.822754066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.821277893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82168184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822248892 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821877715 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822409255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823472904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.822931787 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.821226828 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822943409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823106227 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822119393 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.822104347 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821944191 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.822276999 seconds)
  done (took 114.663037586 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822200236 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821813466 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.818619612 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.820291145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82297617 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819234602 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822124964 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.82207308 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822216909 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.822535009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822207885 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820157098 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820565221 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822236181 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819725536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819592595 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819835297 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820034361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823480556 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820349736 seconds)
  done (took 38.176986266 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.819948886 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823160274 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.821421814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820576701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.823903944 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821365759 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.822705146 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823699673 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821665145 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82360214 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823905882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823751143 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821301272 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822496231 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824298739 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821615421 seconds)
  done (took 30.915549032 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.822441055 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.824982016 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.825447327 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.825295279 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.822730421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.82232289 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824119583 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.823341738 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.821792645 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824760671 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.825183558 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.824327004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.825614704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.825598876 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.823977157 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.825867753 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.823150822 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.82213844 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82553824 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.825479273 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.824457837 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.822991375 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.825512428 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.825833743 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.823516826 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.823876296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.823296138 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822383953 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.822488175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.825741374 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.822280393 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.82405944 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.823740962 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.823723244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.827477416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.823467998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825665917 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.825435783 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.826528246 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.82537407 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.825774334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.82392027 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825865524 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.825754035 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.823864319 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82646112 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.824922399 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.824468831 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.823901011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823912246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.827699789 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.828410073 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.827436729 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.827689177 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.827436009 seconds)
  done (took 102.118321401 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827558159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827727264 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.824654141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.826919686 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.826791087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824751682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827826455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824307627 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824009116 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.827597435 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825186748 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827137218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82465236 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827100453 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825459213 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827816945 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.825919105 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826507786 seconds)
  done (took 34.632104736 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.825959852 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825671367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.827392575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.825260797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.825436334 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82818815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825400732 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.82868882 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828119129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.82528545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826315592 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.827119348 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827801634 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828052264 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826465843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825560068 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.828805874 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828549942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82603633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826525481 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829694389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828594382 seconds)
  done (took 41.955681115 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.827491681 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.827666382 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844914288 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.843639762 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.851489685 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.854275055 seconds)
  done (took 12.810398881 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828382515 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829623011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826584375 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83009222 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82871037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82681988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827402727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827316021 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830381249 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827437849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8271439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830308516 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830826065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82763272 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829717014 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830290252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827534356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829189065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828592792 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830275286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827559672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830666639 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827506251 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827562972 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827135042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827872338 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830447022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827548659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829275599 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830443487 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830622043 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828330615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83082989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829595764 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8319928 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83147257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82788721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830780838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830652398 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828536676 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830573584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830773141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831804814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829150011 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83125394 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829271678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829600286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829654563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829311597 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832679326 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831246052 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828417799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832099644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831345628 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831506355 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832495131 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830973302 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829579522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83239565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829746121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829720982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832093168 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830664903 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829437318 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832621381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829580834 seconds)
  done (took 122.522493134 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831788272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831560897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83087058 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832240055 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830655593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831332435 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83051022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829485945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829854961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830116326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832800997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831393738 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829878614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830766372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831398142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830420507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831159979 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831521582 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830929229 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833560236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831236402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830731649 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831204145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83080526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831630144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835811166 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831575849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832358077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831637812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831585791 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831751182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831226825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832935581 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8317159 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832472344 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832115341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832275323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832189304 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831738954 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834841067 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831540483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835172395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832396548 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832015902 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832348073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832071045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832367111 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832944952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832376219 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833705187 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83305387 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833522394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833084488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832261415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832540379 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832989695 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832790248 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83336254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833328232 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835850262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83473749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833924693 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836660657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833264443 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834152861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834313219 seconds)
  done (took 122.698387479 seconds)
done (took 2501.482340131 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.856139639 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.938843686 seconds)
  done (took 15.562797357 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.001352793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.953989499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.838153948 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.835505002 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.839307174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.832495111 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.854208226 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.838467098 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.839980984 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.837939995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.839035399 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.026110319 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.890451633 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839364715 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.83853153 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.932692256 seconds)
  done (took 51.815548135 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.842229794 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.842971527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.85383559 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.844872109 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.842609301 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.854142803 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874545206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84642291 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.876437309 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.855196267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.909297274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.8504345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.841398705 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.891687646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.854012109 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.856244658 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.929145374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914226073 seconds)
  done (took 35.354303017 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.918335489 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.841875051 seconds)
  done (took 10.539116998 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.873779421 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.868307426 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.868979823 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.844559875 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.859638716 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.839714644 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.873584503 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.875062674 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.87196244 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.850724629 seconds)
  done (took 70.401612829 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.849901295 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.845583529 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.844796905 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.842434582 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.836692484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.840925165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.843629496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.844517757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.519105693 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.876936926 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.849932053 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.849085496 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.845453818 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.846026999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.844037887 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.867052735 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.983555172 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842072579 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842110821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.849159869 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84667079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.895498032 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.857404276 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845352295 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873144462 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.519435081 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.851279281 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850768795 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.963158697 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.844932021 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845167291 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846329809 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.847486932 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.231739197 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.114847048 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.844194429 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.854433696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85375215 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.844883897 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.980201067 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.845506696 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.851869513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.83885564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.098298381 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.926622895 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.889571406 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.206419774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850137873 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.847644933 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.87544522 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849815824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.848102885 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.860943074 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.356511961 seconds)
  done (took 131.298641619 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844746838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.138760332 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995641384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843137291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114980226 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046782406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.792555193 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891002406 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843110103 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045113072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054005746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948500425 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843845386 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.842820731 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841358841 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842017273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001812773 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909933924 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.84534836 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.84279455 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875433638 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050199102 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962607959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.844569625 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864877276 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053365157 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.964039118 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94844815 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.28796945 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.84075663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908328927 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844369881 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848649746 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842890905 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999229015 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939647824 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930604223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.844995438 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841037348 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841080888 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.507909171 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038331475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939757057 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.984253235 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993279183 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.047506121 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488230732 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.839959009 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.487623549 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004748889 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.055773336 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.048378789 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966514606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.844072507 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.994816948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84123721 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.842605017 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079386238 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984558379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943900518 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842061547 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841528906 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842600953 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085451345 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844424142 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939806306 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845958033 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.845237118 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942010245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.947236136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98379584 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056163326 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875936658 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.567461816 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.058687059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055966236 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91292419 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077457013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845684914 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843540248 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930066793 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.60081742 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043533978 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089869869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064371478 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879106154 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.44184262 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.842816299 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038676696 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027833753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.038081769 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991735246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.993764203 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.16507863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845653993 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.845874282 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.071633959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981972461 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845210611 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20896302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078564563 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.468564641 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866654505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139761414 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977321401 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.163245528 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.469686395 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847058794 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012726143 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884470696 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.848795733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845918634 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.037494534 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.652036729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845465338 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.57514202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91008377 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849897301 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049566541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.848784459 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055773773 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84662298 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082055368 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333831144 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882413224 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.018052269 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.995495268 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.640188228 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096115023 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088951992 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964672731 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117031821 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.577317731 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851863622 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122702384 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848541226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.847484304 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012501534 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848677407 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99484895 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.848462318 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076822652 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872627089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003084694 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849296481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.078649162 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.88374455 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900804172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84913161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972484111 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850342588 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728643794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003641107 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848039117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.849912988 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.24436753 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.848647741 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992796448 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077815544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872815704 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917303516 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.372728098 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849008826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936349589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875386577 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.445037443 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.848571769 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.058347776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.817367573 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.279358671 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.848038356 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087852382 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081545891 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849954086 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850094025 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.590287288 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.548717523 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849057708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008587963 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.39646754 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.502913659 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052706835 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853060962 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977065297 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.851348891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.92953925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196211055 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84957182 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.847624661 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.849126736 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.849796127 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851106175 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057601909 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882119925 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.348356885 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985104769 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065904435 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159488797 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.070866376 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896416124 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852266152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097034843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854093267 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.915063248 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.853626745 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874327641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083009515 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854367158 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084550092 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104684112 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7503193 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901345659 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.852319349 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852026292 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.849359195 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.997560055 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941914738 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853297655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.851845843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962438038 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97193357 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043210127 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.447653766 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.972569078 seconds)
  done (took 893.641384435 seconds)
done (took 1210.380705848 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.850609073 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854257162 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.845537946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856068721 seconds)
  done (took 29.195400436 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.865348903 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.858043228 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.859829911 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.858194919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.862213487 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.85748119 seconds)
  done (took 12.949729068 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.88961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85341898 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855855237 seconds)
  done (took 21.388799874 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927104431 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255697473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.969575736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291345451 seconds)
  done (took 10.233860767 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.860266617 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.858806328 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.859627754 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.864639464 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.870678595 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86625987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.863900935 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.86376879 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.86597093 seconds)
  done (took 18.564340892 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.244369437 seconds)
done (took 98.364532616 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.216147666 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.367765312 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.999380678 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.993755822 seconds)
    (5/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.128879345 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.870221118 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.8794273 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.844219542 seconds)
    (9/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.155742264 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.862899948 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.448794475 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.985493114 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.157334186 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.747777833 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.258122728 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.896013527 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.172259214 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.883186877 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.141931043 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.883864563 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869630253 seconds)
    (22/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129806314 seconds)
    (23/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050970739 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 6.858349501 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.943016048 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.852279558 seconds)
    (27/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.805426272 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.281350853 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031235866 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85725761 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.64559382 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.851704156 seconds)
    (33/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.007083608 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.227361053 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.857719322 seconds)
    (36/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.992000859 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.973297838 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.675817086 seconds)
    (39/309) benchmarking ("sort", Int8, false)...
    done (took 4.852424509 seconds)
    (40/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.437041663 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.887252159 seconds)
    (42/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.857364993 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.936489038 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960248131 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.856025445 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.232146708 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.965446006 seconds)
    (48/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961855819 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.016031037 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.157434868 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.088004925 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.857661333 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.643111799 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.965744356 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.989747298 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.9309828 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.213775224 seconds)
    (58/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.06439756 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.883744321 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.939114769 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967892773 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.858696205 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.891689272 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.119635695 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.504635794 seconds)
    (66/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853487193 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.776535227 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.862838688 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.007558201 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.98377798 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.857813354 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.896101908 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883227739 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.23725192 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.855618841 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.917024918 seconds)
    (77/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.001283531 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.02857991 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.644438275 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.24454471 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.956695074 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.886225561 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952802842 seconds)
    (84/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0049414 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.208877767 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.5209261 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.754015248 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169873032 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.87106311 seconds)
    (90/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.025601764 seconds)
    (91/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.998401379 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.569029821 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947496231 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.859377768 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.881253819 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 5.633814222 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.864548184 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.115280369 seconds)
    (99/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420115226 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.923783343 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.858694445 seconds)
    (102/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966223365 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.997411787 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.126734073 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.106914283 seconds)
    (106/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997995131 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.851157998 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.300385645 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.048050708 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.278960212 seconds)
    (111/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.927597206 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.05167892 seconds)
    (113/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.231461755 seconds)
    (114/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.386067721 seconds)
    (115/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.485503302 seconds)
    (116/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.03517768 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.07018106 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184588884 seconds)
    (119/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.166933054 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.853533 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.783796661 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.865159995 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.45069377 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.058376617 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.055480162 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.947696693 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.872156108 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.311169075 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885634198 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.945555932 seconds)
    (131/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.252435377 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.051504871 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123781205 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.154056207 seconds)
    (135/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.210308099 seconds)
    (136/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.387372752 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.875489361 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075877418 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.122468781 seconds)
    (140/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.114773246 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.897896329 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168272417 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.919296177 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.185465025 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.154819413 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.969330114 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871201936 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163308521 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.763098656 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.27138976 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.950141467 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.946392391 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.368513876 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924431463 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.098664017 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.868662105 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.904302028 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.977414972 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.196071732 seconds)
    (160/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.311925903 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.613743233 seconds)
    (162/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794662507 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.243310942 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209707774 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.680945459 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.112601317 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.888280426 seconds)
    (168/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.156310429 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249342875 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.988066226 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.046095315 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.932052963 seconds)
    (173/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.938348222 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.971172514 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.856762807 seconds)
    (176/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.976760361 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.263348253 seconds)
    (178/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.03999829 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.869312765 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.555307186 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.069474075 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.082730849 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.763045447 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.859577403 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136967828 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20340323 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.413559293 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.893520186 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.867560043 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.878267753 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.045404798 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.860985998 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.841281375 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.929721508 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.026027114 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.76017167 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081255079 seconds)
    (198/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.477774832 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.977037097 seconds)
    (200/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372992167 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.013898045 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.893467538 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.136082027 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.544852901 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.560298443 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.87528577 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936554044 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.924547386 seconds)
    (209/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.205548408 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.899820723 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.945811541 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.253237191 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.854178378 seconds)
    (214/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.865818311 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.319569987 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.175351377 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861515679 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.985445455 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.869766951 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.869897478 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.87888499 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.084014126 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.955043818 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.059501024 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95309685 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.862412706 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.256298265 seconds)
    (228/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.298247646 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.894907143 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.869362264 seconds)
    (231/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.058719348 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.926265133 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.872796318 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.163350796 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.975885575 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.376486231 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.465443936 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.911024722 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.868887965 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.925852324 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.170822133 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.974765729 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.167210818 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.970230444 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.07900461 seconds)
    (246/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.376556462 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.760827305 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874210271 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.5185371 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902193031 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.87271574 seconds)
    (252/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.994630469 seconds)
    (253/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.055278951 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902613128 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.95398193 seconds)
    (256/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.475326754 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.271489696 seconds)
    (258/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.075313657 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.159069871 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.324598418 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.874037921 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.768878009 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.943400072 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.920967014 seconds)
    (265/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.863965254 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.018441301 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.26092523 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.553691686 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.913785887 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.232196871 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.457534083 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.052258867 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.897747595 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.89858223 seconds)
    (275/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.77093458 seconds)
    (276/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.479268656 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.17062131 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.265927697 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.741855578 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.118751976 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.008127854 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.249663806 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.022896119 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.957669065 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.109969336 seconds)
    (286/309) benchmarking ("sort", Float32, false)...
    done (took 5.630870281 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08870228 seconds)
    (288/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.899836387 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.312448258 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065038156 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.98449955 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.064272623 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265517003 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.959413256 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939052399 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.044721952 seconds)
    (297/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.989896954 seconds)
    (298/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.956269748 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.953436533 seconds)
    (300/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.986407814 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875561264 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.204079217 seconds)
    (303/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.031483553 seconds)
    (304/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.87435393 seconds)
    (305/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915974329 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.933809978 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.022827688 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.903411165 seconds)
    (309/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938786362 seconds)
  done (took 1020.503228439 seconds)
done (took 1022.367372808 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908538043 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90298368 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.886119857 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.908454035 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997587729 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915235083 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.897828962 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.888830038 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.936563705 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.936389399 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.884492615 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.914385784 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.888233341 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.887293849 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.886835977 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901155744 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.188171401 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907282781 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.904245338 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.897115014 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902955586 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.885902222 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.935972715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.914573588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891584288 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.890493499 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.890425015 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.906650933 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.000000508 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.891088433 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.891248474 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89866947 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.190291276 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.90713852 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.883624653 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.907743322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.899898923 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.898824253 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891649357 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.920387711 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.317430156 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.893995928 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.889630876 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.889060856 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.889645521 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.893626088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88937227 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.895622099 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902299245 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903197689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.314528039 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.908108813 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.892522762 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.8891871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.900821265 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.889022059 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.892274545 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904800697 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.908331284 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904946238 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178882317 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914778094 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.891667411 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906008519 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.896904427 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.352816471 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.890373694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.894163942 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.317445647 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.900083596 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.35161053 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.902760675 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.891567082 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.90412174 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.921101966 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.190672067 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.906577882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.889285896 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.899138041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.888882307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.902200503 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903274942 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.895117199 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.891170327 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904155321 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.920467116 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900757055 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.891337046 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.900016766 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.910427768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.899123852 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.903473742 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.895054316 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.886847962 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.901220928 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895051958 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.894079815 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.894354576 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.895496037 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902643272 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.31602302 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913552671 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.888033329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.888079546 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.891099749 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90559751 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.317563815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.897697102 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.914103265 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.939883515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.89317455 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.182282702 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.915523288 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908622009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.902593607 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.895405998 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.888489046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.182862013 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337152666 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.911976508 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.894731367 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.892142496 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909319555 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.894416284 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.889095621 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192564684 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.915589048 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906845464 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.013154541 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.904053774 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.924203753 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.891328615 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.895884824 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.92539722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908956973 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.925785626 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.897272281 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910656552 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.909584792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.890154466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904637921 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.905966811 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.895691301 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.901396793 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.889784694 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.92278363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907609149 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907081023 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.917056328 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.019423598 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.89219316 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.183406121 seconds)
done (took 296.926944275 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.960165241 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.889591753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.988754641 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889794866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.973577222 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.974173264 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.888919118 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.888904214 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.886979662 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.270570312 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.888103461 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.890063135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.89006506 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.886586885 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.973512516 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.890633739 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.887560238 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.233328449 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.892585419 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.962149497 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.88763256 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.889509117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.89027262 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.271033151 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.890067759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.885467273 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.961629244 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.893626902 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.23591978 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.88984966 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888320128 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.236146917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980962411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.909703339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.902098954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.898228214 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.976294095 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.896568857 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972714419 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972610445 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996005788 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.932674059 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.885318463 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.891477407 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.894126682 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.893236672 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.889656674 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.921688177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.88918235 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.891049355 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236671317 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90264007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.901120346 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.890989866 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.890508866 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.916886012 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.891069054 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.895044743 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982429297 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.894454701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.955466432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.27305423 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.27277685 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.893966235 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.888324619 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.89066161 seconds)
  done (took 185.816392931 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.960250497 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.967333962 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.95984351 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.895906791 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.944883816 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.373086769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.895999867 seconds)
  done (took 15.820637374 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.899538351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.895156992 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943025731 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.942959015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.894489481 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.044122944 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894519119 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.904878256 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.892079327 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.947494982 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898132663 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894022074 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.901154313 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.893376251 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.941554981 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.906223802 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.009123315 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.895235232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895712266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050671349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892068908 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.902441645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.948614366 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.904876228 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.898296928 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.900848834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.478022158 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895230121 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892563569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.896433282 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893571752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937565354 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894935912 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.89103685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.893465802 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.011516004 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.896172433 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894353958 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896362676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.889411506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.895785916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.896043227 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.895227298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.893487884 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.895871082 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.919081883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.895433253 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.897101523 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.895769971 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.895697157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.947001347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.896371509 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.893334777 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.893467862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.952725454 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903489784 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897979819 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.893691465 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897296634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.894229759 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052702204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.945701172 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.897924094 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944487143 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.895515387 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.896541315 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.896285943 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.896956392 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.951749196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.896869505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945511261 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.895169928 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.057455227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.921180985 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.8982272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.900118956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899916842 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8977438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.898770151 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.904625608 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.895059242 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.8990941 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.903595442 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89560861 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896573866 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010179054 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006929719 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.896259109 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911764573 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904757473 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.895859862 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.951582554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.897669713 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.895751606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94880657 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.011857864 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.9534843 seconds)
  done (took 208.39502433 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.902833481 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.906109913 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898754469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.915219443 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.899230898 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.898762088 seconds)
  done (took 13.248236083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900081899 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.899083478 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.898355355 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.897965788 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.899454024 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.902441001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.899552526 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900271956 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901683581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.898946906 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.901856802 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899883151 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.902987712 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.900473095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.901350508 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.899026883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.899834454 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897201011 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.899827012 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900091812 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.051851983 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.900317369 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900358998 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.89931777 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.905148796 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.900326792 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906888274 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.898764975 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.900590238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.904488308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.902985744 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.90241235 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.900392962 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906318379 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903176725 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.900511736 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902000098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.899891137 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896485947 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.900955001 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.898142479 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897806443 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.897553781 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.898820046 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.896370976 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.899258278 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898912421 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901877575 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.896171966 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.894384773 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.894025765 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.893016792 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.897246629 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.895535343 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.89878415 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896011713 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896396408 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.893785271 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.892852034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.893302378 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.893526932 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.895206018 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893041694 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.895552439 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.899263056 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.89294856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.893462848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.89527708 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893040755 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.892429174 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.89298342 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.890767349 seconds)
  done (took 139.672190096 seconds)
done (took 564.783183044 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.141806001 seconds)
  done (took 8.96518283 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.932153412 seconds)
  done (took 8.861406454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.25243803 seconds)
  done (took 10.083329876 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901874637 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.899177947 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.906594536 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.900969682 seconds)
  done (took 29.448352942 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.952329665 seconds)
  done (took 8.782925266 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907297272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.895411555 seconds)
  done (took 15.668227256 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.926506993 seconds)
  done (took 8.758874283 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.959312836 seconds)
  done (took 8.792981616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.91400637 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.903147394 seconds)
  done (took 15.661836477 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887527566 seconds)
  done (took 8.719492557 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.560293379 seconds)
  done (took 11.399215927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.902477341 seconds)
  done (took 8.744277336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.939971036 seconds)
  done (took 8.771354721 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.88565055 seconds)
  done (took 9.717739191 seconds)
done (took 164.198058636 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.897319707 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896714454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894101024 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.896534755 seconds)
  done (took 29.416606885 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.935137527 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.935330331 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.937568528 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.947366192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.939141799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.937082867 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.928307237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.927327206 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.94660924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.93962743 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.938439913 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939283212 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.93613042 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.930038351 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939874533 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.93910954 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.947774375 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.938237405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.930257064 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.940017985 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.904598347 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.948693468 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.939969282 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.904288137 seconds)
  done (took 48.28225402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098795889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.974256613 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056857928 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.957843117 seconds)
  done (took 9.920510849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.955495626 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.957041862 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.969661059 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.007292553 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.033957719 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.9666145 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.931400439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.925623353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.912614295 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.956981241 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.032325343 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.973384767 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.067028322 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.904388307 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.102657355 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.904422362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.904579155 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.956363539 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.00968268 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.027651477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.905743824 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.958046191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.961375449 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.975611822 seconds)
  done (took 49.133283364 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.903811686 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.913164911 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.910341571 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.904998173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.904712963 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.905734732 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.911871769 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.906137582 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.926380484 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.906585284 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905005522 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.905040036 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.904881338 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.906328421 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.905163574 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.917531272 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.918993132 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.906050183 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908407176 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.911657595 seconds)
  done (took 40.018013814 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898421221 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.752810162 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.250241028 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.154704051 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.898716437 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.901571996 seconds)
  done (took 31.692609497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917104235 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.909132149 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905151871 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.959535018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.039393732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.911336554 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.905914665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.916087903 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.948100411 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966861836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.925821017 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.930291944 seconds)
  done (took 25.070239358 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.900704882 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.902379671 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.900919986 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.919752998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.916379722 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.913279756 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.913362844 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899728609 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.919684963 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.922696302 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.912370074 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.916642234 seconds)
  done (took 44.776856829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989088137 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.944463564 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.959851678 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585413422 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279899553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113720221 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.508474273 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.249825379 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.905763751 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176459333 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94678267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00454953 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158852891 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262274965 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928806322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.376441702 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197437639 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114613462 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931391021 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579162332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9653537 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.958051248 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.648081572 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959911952 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115776944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.037421359 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.16424112 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903822763 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040966887 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943073671 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914762823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904557892 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178807004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293316249 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009472419 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914701173 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523359573 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.616204238 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.901428123 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.661399347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.624228843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.025311072 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915437842 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904891371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839774832 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922644695 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275738163 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.911266533 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615712625 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906159484 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915974621 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999569792 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.909482268 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.720536918 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851272137 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.90757963 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.903435193 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91108332 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480239352 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.016833168 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.979326138 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.87104456 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.995622951 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6606203 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298084435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.053355908 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.910086566 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910670834 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839448674 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.659298792 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961793908 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235179634 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.928104371 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556255134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203395276 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.985825306 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848903568 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184533391 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301059339 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.873297606 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134648925 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90700234 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842444251 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.850341297 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840748136 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171902614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943203155 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.689361926 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945873404 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243910392 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919158867 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923788601 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931641315 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131446508 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.800494888 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908215782 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.700266726 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058877128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929121213 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243198326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842613328 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.911697886 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165613326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.119717856 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.849207579 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.405117161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067591218 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338085496 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.954111477 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.935313347 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94926655 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.177002746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964824604 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.025992543 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961634198 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908240429 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206449157 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36451195 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.038992919 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.936932835 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.034886339 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238354652 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936360393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992718039 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919770401 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909373633 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674260501 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460688647 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.910809198 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.918649694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851533321 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.949391919 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.911501368 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859065386 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.528876233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95832591 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.924638269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134053151 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.352032094 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214931171 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844535333 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239472174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965857647 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.133014977 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.55895381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.986702094 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170790291 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854075466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.876054073 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951475096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930209072 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009249305 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934598276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.923504708 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197277614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915994415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.915205464 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.689349848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.946585269 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913048512 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.917359458 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.662222511 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183011547 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933719497 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917478766 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.80119847 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926241436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977304949 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918313655 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921839078 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.447313913 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623042118 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.918307684 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.495037809 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137164772 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923429521 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.643549752 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025882258 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.000268425 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183142488 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97227634 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.847038802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.623961181 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.605448269 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914815833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848683455 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913497442 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922918208 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924254617 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.109604223 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184942315 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957624501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.589485739 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.954467943 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925422309 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.919107929 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915134519 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.420894483 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.028190983 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965413431 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95215594 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05786725 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.927558636 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848457646 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.917451745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918876527 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913712185 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.914383657 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948389108 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.594289772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289068723 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175604509 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567274204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927768063 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.666386779 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.972875003 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.915751625 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.583101567 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085417711 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.949244705 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926559758 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.926318289 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.598878286 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.610033194 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491730447 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222445064 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214486622 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353711495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.989923332 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.938788689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257412802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849245987 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472706613 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973164512 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260309396 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860074635 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00964776 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.564100768 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259163869 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93166079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144235058 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304242855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.623780395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052087292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127098339 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951015089 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934645642 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871855622 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.209219313 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05951802 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595913792 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116494755 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258916005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567315703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.036939863 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.916968539 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.596615187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001701233 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.626155552 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.089044176 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.975818987 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855418792 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398679045 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92349472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152729487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268227888 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.950288277 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.035767291 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853324601 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929135049 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928264894 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.925717655 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910701782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.798696501 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.171389999 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929934143 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852356503 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.896409286 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201898507 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.821622492 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.924171375 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918992097 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21789223 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.324563099 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082364117 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.884328491 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.430586155 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926297185 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852282005 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853294489 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.612027784 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921413919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893407517 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127524795 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.020960977 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828527035 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.864872187 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994579995 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.17608544 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.933776411 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189273785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193218951 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618156265 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94462942 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.020355517 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.571638864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.031540432 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920085255 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157836222 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677222783 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14790783 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.985192494 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.887993794 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919948727 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134095741 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922703521 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814833189 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146098981 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.645558176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.942645152 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223778572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992261211 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.826473089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960214338 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010921644 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929522711 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001297738 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931373508 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.931151475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931793496 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968602844 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.84517518 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.041375981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.935182041 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015602401 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04531871 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442791439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.927157576 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194422851 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277080425 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241074551 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980293759 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922706694 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923661806 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856023558 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071248898 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147699027 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195535649 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053563323 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.038466562 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947218516 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563554342 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.98758869 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157773802 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197394991 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.817217285 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300530149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.958188622 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.923566663 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933167278 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.135343002 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134319295 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22439089 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068288604 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.869123873 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284867183 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197848463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.924174947 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924318381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513440326 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.964094429 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608890236 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.963871787 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850991461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19444071 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933661378 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314044202 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946179142 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.083680687 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.697045355 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601592646 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2148351 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.912077238 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986342151 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193496976 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303251651 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238161155 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991632458 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935717604 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.032684011 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070753234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.802649536 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925506791 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926107343 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974531529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.635917916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936538087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200071183 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234695062 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.922775389 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.803619897 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94887513 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.935441027 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149602853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192046629 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176628101 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936276248 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928356597 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.741339369 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197925313 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985156103 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861089813 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.930469977 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025578326 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17443265 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946923095 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.378871898 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.637182412 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200964658 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.927788998 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94891759 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.94661587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282154734 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247408288 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.460593398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136194933 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.515569992 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377459602 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223144039 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.932624641 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.950831957 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225320898 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.930925353 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.868585718 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960949896 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.194008487 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237961 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.984795073 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612732323 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.898930593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269652231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.488978288 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865002153 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928191653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.994800281 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928331369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057362295 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938702062 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.815844512 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951104701 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.703030567 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21425242 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.933885239 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.928305769 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.665825481 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.07083698 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958718281 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072175372 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929169128 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.600991956 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.282452626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.185233469 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.879998254 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939856912 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.932886906 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929530871 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916747979 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.128616518 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.124720122 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206874169 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.907732212 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.961255098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933200714 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146804087 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14041123 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.826053105 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061790068 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876316716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967650568 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.848733884 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431551286 seconds)
  done (took 1691.35191967 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963147774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.970524521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.99315376 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.980655158 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966020821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029293148 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.995692709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01676418 seconds)
  done (took 57.780708446 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.93151514 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129189363 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.939439625 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.93018675 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939387633 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.931067678 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.094073342 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.952293209 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.939497618 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.940242784 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.929877596 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.930214822 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.242660509 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.951036658 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.938371664 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.925860985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.938927622 seconds)
  done (took 75.470961684 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.931840026 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.993593915 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.951654396 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946113977 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.885377898 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.935182259 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.70329206 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.942593027 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.933419177 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.155053648 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.569654873 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.940385853 seconds)
  done (took 90.755262997 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.9406279 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.9367333 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.938402241 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936938802 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.937958398 seconds)
  done (took 11.559822162 seconds)
done (took 2207.083603709 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.471936774 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.149256765 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.162476867 seconds)
  done (took 6.178609011 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.081533375 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.130300514 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.251575762 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.254856789 seconds)
  done (took 10.589970025 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.223805145 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.316161793 seconds)
  done (took 6.408592123 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.327100062 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.947303023 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.31047045 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.936477285 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.936032161 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.934815742 seconds)
  done (took 22.681923507 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.940375697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.940590926 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.938382271 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.941707457 seconds)
  done (took 9.629735348 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.926239544 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.637543479 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.927649971 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.940952938 seconds)
  done (took 21.302246823 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.686288425 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.69676323 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.681710105 seconds)
  done (took 9.934615426 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.459784998 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.821586443 seconds)
  done (took 9.151492849 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202525135 seconds)
  done (took 4.07154103 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.069891439 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.246030658 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410770252 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.431006519 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.518789274 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.589438366 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.238685312 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169134344 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336483608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.353273527 seconds)
  done (took 25.232915709 seconds)
done (took 141.105483696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.309802048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.170860047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.13618737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.26771213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.161865423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.138438582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.158624348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.248775596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.775988714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.775643541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.267797067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.159140827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.10620166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.170375706 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.105753644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.169762728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.15457414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.31890797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.967946121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.163266926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.161355824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.907104769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.114382776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.923337488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.15603963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.088040971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.485825798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.173084935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.121145628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.498214935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.089860907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.31869725 seconds)
  done (took 174.636238545 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.705665598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.937046169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.937054351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937637275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303768115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938987708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.937484303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.937306549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.17077075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.155632671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938749832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.274338129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.937734919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938550379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939101272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938657494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.281286437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.718697208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938852559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945654263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950588964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.193293948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952041238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.235457321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.317950677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958460031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.93831918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958052326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938839291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.918932044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947403412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.939327123 seconds)
  done (took 209.936183984 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.939015263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93984847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.93905687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940820013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.940277266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.940372291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.943484493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.940195373 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.501406555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.506464365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.95022302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.944556248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946676303 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939834234 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958895111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.939971499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.946216505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.948419996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946816702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961732522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965279351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.763835686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967280018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.764258685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954857681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943269352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.941126296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952357594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956288015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957775501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956547062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941850567 seconds)
  done (took 222.965600631 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.149433223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.953782535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.955305599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.906554621 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.954798907 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.953471228 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946473871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.150732163 seconds)
  done (took 20.372364497 seconds)
done (took 629.790839151 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.545503852 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.309555471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.135095485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.977835189 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.233348004 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.015800976 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.972514571 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.043528344 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710667442 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.044308608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623945663 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.991191105 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.703103491 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.998697094 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102907508 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.031335719 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.533722934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.624106915 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.155057187 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.047721905 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.148705204 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.976147638 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.051151769 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.729873074 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.725625208 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.98695879 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171621543 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545787725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.984693152 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.139200779 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.746140885 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.383076131 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.987534642 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.971521019 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.026116242 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.007450188 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.328579794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.986118098 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.099753287 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.747792256 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.052843623 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.587510152 seconds)
  done (took 107.066497441 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.951760201 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.949359848 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.948216556 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.949892737 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.951136716 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.951261323 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.949868616 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949387471 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.949473219 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.94883665 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.948911679 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.951960356 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.94998953 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.950759111 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.950033856 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.949027256 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.950695717 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.952599871 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.949987053 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.949738645 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950447925 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.949901665 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.951075397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.949806271 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.950488892 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.951159867 seconds)
  done (took 52.601023278 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.957430805 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.101948187 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182154793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976856179 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957292931 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.959346358 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.976227779 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.962615317 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.958629281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.958796857 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.052707491 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962847371 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975550235 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.182232374 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.971928224 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.956205275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.955779259 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.955794627 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.106083574 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972798355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.978034842 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.962646392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.975803059 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970150075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.956714281 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955424284 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.958706153 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.394548419 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.965037178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052495617 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.050816656 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.9783483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.355806381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.189731094 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.030398607 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.963412546 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.957300296 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054738573 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.961955686 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956634086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.974586608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.960991013 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.180043038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.450386471 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.970648921 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.956857787 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.40383952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.064113074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.997905524 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968353036 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184911737 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.975167324 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.958064664 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.957492107 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.993657732 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.96735518 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.957360527 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271497519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.969567326 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.975805822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.963981067 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.958246047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.112546454 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.967069024 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.102559401 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.967085107 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.964944654 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.959614297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181984701 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.973830615 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449703455 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.972027112 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.958989291 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.053242358 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.107084347 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.430959087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.970718204 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.1173788 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.37211433 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.982960714 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.965275883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.382073153 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.986232984 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.965852217 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.960703287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.96053959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.95949849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.004495879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.974962457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.399519575 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.456015994 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.285643327 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.98628863 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.974870038 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.9610925 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272458219 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.968818638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.960461037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.176436624 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.468251267 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.973644935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.967264135 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437979772 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.975947648 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.979462958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.969426448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.188775926 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.97596516 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.002760956 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.959721366 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.966277143 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.962879166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.979370553 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.967565219 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.961174744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.432429214 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.072945518 seconds)
  done (took 242.190193045 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.956742188 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.955126887 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.955463984 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955055639 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.953805908 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.960075822 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.953282563 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.954324454 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.960091391 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.953475145 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955627459 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.955601481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.956324754 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.96215766 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.007045062 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.962742727 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.5684014 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.955939613 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.955126551 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.964938409 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.604221828 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.961259018 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.9560587 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.97218986 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.95810289 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.955798964 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.964471257 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.99770518 seconds)
  done (took 170.063479789 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.963492864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078725595 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.980585027 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.991194289 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.97191502 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.961797752 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.986235475 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.978818087 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.967625597 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.962175751 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.962284602 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.023979791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.975273962 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067217312 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.996863043 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.994672122 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.069234019 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.972577173 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.961434948 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.961660353 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.991408384 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.96592845 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.023718591 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.090058524 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.983717101 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.082129729 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.976980874 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.965300878 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.963194373 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.082262269 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.979817791 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.023670197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.991190529 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.982254601 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.08792374 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.083806163 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07741805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.999632585 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.967888149 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.963108772 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.96237563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.959555935 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.081739987 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.986332139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.965104086 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079285641 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.985813809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.966407504 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.973637086 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.96386856 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.978105652 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.981606962 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.031138931 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094899831 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.001602074 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.990349398 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.989653972 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.264429216 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.976168848 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.067458801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.970463144 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.083137799 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991363414 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.960693434 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.964844014 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.970111713 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.994791215 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.996940717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.072834621 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.977829711 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069431618 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005845943 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.97257447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.965595972 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.968270425 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.083270247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.088392907 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.006192945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.002984757 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.99772201 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.968800597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.966496372 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.962037335 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.984561293 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.970744733 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.085199286 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.088124858 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.98037053 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.968655962 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.969148428 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.967944448 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.991655435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.092729614 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00615779 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.072623553 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039749874 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.04167953 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.981135752 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.97952648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.970786614 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.030512172 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.982134913 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.979477254 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.314590553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.037606032 seconds)
  done (took 212.87904235 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.433349299 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.025785718 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.02385744 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.259472331 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.388898057 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.755141568 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.01503654 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.016864002 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.041739965 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.178162055 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.077851766 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.029342301 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.004092485 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.989880443 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.018172305 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.036331749 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020118103 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.308708856 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.136191227 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.122972275 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.001088922 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299359712 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.337484894 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.398718494 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.050658623 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.336140115 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.68521717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.255609142 seconds)
  done (took 64.149624942 seconds)
done (took 850.831015866 seconds)
SAVING RESULT...
DONE!
