cset: moving following pidspec: 12773
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.915195462 seconds)
loading group "string"... done (took 0.589362542 seconds)
loading group "linalg"... done (took 9.244676147 seconds)
loading group "parallel"... done (took 0.180069045 seconds)
loading group "find"... done (took 1.493096249 seconds)
loading group "tuple"... done (took 2.194000535 seconds)
loading group "dates"... done (took 1.462334588 seconds)
loading group "micro"... done (took 0.233472039 seconds)
loading group "io"... done (took 0.618799118 seconds)
loading group "scalar"... done (took 45.709259981 seconds)
loading group "sparse"... done (took 14.34445246 seconds)
loading group "broadcast"... done (took 1.128632255 seconds)
loading group "union"... done (took 13.248307039 seconds)
loading group "simd"... done (took 2.845309577 seconds)
loading group "random"... done (took 10.988640636 seconds)
loading group "problem"... done (took 1833.749701757 seconds)
loading group "array"... done (took 26.331263435 seconds)
loading group "misc"... done (took 1.146194209 seconds)
loading group "sort"... done (took 3.882990178 seconds)
loading group "collection"... done (took 19.33125583 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.042077138 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.840361154 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.511610443 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.130827749 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159827627 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149596779 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.310764111 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160557817 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.124632182 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.082515189 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170931116 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360082459 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.478731088 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.938419414 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08203799 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126053818 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.085056129 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698405639 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083802558 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129698673 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521846949 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116518461 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117739279 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137963805 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191291894 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128828625 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161967943 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094391196 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665412065 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104361061 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184764139 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097678155 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159175633 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.239627444 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096920834 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.094872877 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672411006 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.179279061 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.115087111 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099875209 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675312931 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08349687 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.196409783 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107492857 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111775553 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188955764 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115026823 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079899327 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102173912 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092201073 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159254804 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.510269546 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10700625 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.15214672 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10629069 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.676165535 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100739659 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157033585 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14124769 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099244397 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09657294 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106250442 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151574312 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109754581 seconds)
  done (took 20.043771794 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.135286434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1388137 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093463199 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139486834 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13800017 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095254865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082995864 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094783849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125613387 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18448908 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120089154 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141122295 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089530298 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.098231217 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118773813 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249396698 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105900745 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121577366 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097377833 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091509821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14108791 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111260342 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09484397 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11047886 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169945819 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205836361 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110438332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121237997 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094242741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100610098 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143066386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.16172616 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076497132 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094797483 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.184807559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122015132 seconds)
  done (took 5.14626787 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195322412 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114709167 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188001506 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172749579 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143337602 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160677525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115886028 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263719944 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181570835 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.165758406 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176069278 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116396102 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113019064 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080461365 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097303885 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079510614 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683587757 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177280062 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168337182 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124154261 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10370537 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096291883 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373764111 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085570985 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094990211 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085514953 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087222983 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174533835 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099344998 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.291101027 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.0981396 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108240642 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129828281 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190843115 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130580901 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124599641 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101348468 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080260106 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227750703 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106163477 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078427914 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124822238 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130600299 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11577599 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098236829 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108246059 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222347647 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09763879 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117441332 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.086320687 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199017512 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098457433 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098996176 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.354696168 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113955513 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084747625 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097381815 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.299687111 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133105222 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085000329 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081028649 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104359358 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094567702 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404942393 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089917663 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.345750676 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.113435286 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153061047 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095648891 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096795615 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088807312 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100037413 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084862711 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115697511 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079528385 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094243643 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079999888 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093785905 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08439884 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114464667 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098970683 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079448811 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156223116 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083074218 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114224965 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097824832 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12400774 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098109717 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078521584 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1271618 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094753743 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083241124 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.144501737 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100693581 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.097676673 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097958972 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09590313 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127503184 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094578972 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.198389183 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081974922 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124655927 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097894088 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112478107 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117530461 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095898975 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083283406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093553963 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079522717 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159198202 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080588814 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078966168 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098615802 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112110657 seconds)
  done (took 23.951215174 seconds)
done (took 49.784189395 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317533117 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20172252 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.117980259 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17695558 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08633955 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199975438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168397618 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117078738 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.195488766 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101195134 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175459756 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098903478 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087258963 seconds)
  done (took 2.74647262 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106724955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11692119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080970453 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107218326 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075089414 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107254972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091579312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.125331837 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091556287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101022878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075028948 seconds)
  done (took 1.751344442 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090863467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111729946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080981726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106617323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076840292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090593567 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107507741 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115556839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091679605 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102636214 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077298397 seconds)
  done (took 1.725549726 seconds)
done (took 6.901325832 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182203483 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098423198 seconds)
  done (took 0.94851003 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101830469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116434964 seconds)
  done (took 0.888955093 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108117855 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094436036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135244309 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111333691 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081101094 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09483445 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12850514 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08163478 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079275298 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096966635 seconds)
  done (took 1.686583568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085137661 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098682292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103525883 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117220274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107988556 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08398291 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10314229 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087278299 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103598738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080842549 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105053678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118985111 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090204536 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118908866 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102239853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089380582 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108166499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08651328 seconds)
  done (took 2.465182625 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079646342 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08146757 seconds)
  done (took 0.835729491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08363256 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093074112 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083289832 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097046886 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078521962 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096338908 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080668169 seconds)
  done (took 1.287629689 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.503762068 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26267122 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337775773 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11511347 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136516377 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.370814861 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137615673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115711718 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113576579 seconds)
  done (took 2.810287359 seconds)
done (took 11.597587101 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.142770616 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.113357042 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11194371 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.14132215 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09494692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.111244899 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127531247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.092707133 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093385323 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.077431072 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095550426 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081845913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161945925 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.077440486 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092413592 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.080871269 seconds)
  done (took 2.454788581 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206274398 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252093929 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112598362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.082060184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101831379 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082107357 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099854876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.086604394 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096546924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.093205216 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097642543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081367682 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.109343045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096954321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081840705 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080793579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108911167 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096530728 seconds)
  done (took 2.687001836 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102772396 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.127256367 seconds)
  done (took 0.909553786 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114947741 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170613794 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28353659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.147569611 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108017936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115947522 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152779182 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114539177 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18209272 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.117042864 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100897824 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103241754 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126856369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093078268 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.106576703 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086774071 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129292329 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.106498688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088913819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103434776 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10821322 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103837371 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106946999 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089785444 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171936197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117450957 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086805035 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104731577 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102254943 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088970024 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107727434 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117220339 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102385934 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173772052 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092336694 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17114908 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094613372 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101870472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.087481649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.103443143 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105564383 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090603108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.118757075 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.085566594 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10387851 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11010389 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088919916 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103127082 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094458646 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.113240068 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110233264 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092178753 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169859695 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095598115 seconds)
  done (took 6.94721613 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.803152272 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142516804 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099897161 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.903364777 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130552528 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113234025 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.795243407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104002163 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244634271 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.79712153 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.230785052 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114294804 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213155793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.243540136 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141431977 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320347649 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.676626582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113026289 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111647656 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143527349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106561388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126956329 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102325743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420702426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1000563 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099171528 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0893042 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110933699 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151432363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082317541 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10210676 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187718798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.257153476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171916597 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099410166 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.080642399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098565149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159156307 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253211636 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202584737 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163496898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079174483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097649981 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095331117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120143652 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094023385 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156821776 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166182466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165023494 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103254343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11202089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091543411 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110034358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153133958 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09627231 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32170593 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324000189 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082653541 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107233877 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100239389 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251798212 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098516464 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194480459 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126000328 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199584933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.081367211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774921441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15920194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098563815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10667104 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090893207 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105257687 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093594072 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157471195 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372937044 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114867259 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102915259 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082026777 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21298431 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082717193 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098687542 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156468215 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083025669 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108431383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115356162 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111270225 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164293566 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.241854258 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113778191 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089668438 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105849517 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113867747 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083786441 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.204718775 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203635308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1661136 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205007874 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111928555 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158468859 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.158876285 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110380474 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163838743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107308582 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10048639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113086291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200922542 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133821929 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082682125 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104482321 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105136662 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136045581 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08661621 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105572258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161899647 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448804333 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173458163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.079836774 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102573135 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091710922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152644561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106871684 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247406766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091101114 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176342313 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090289486 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097412814 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090657979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17366579 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096725023 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108752456 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112709804 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090846897 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259577087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189153086 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115911991 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223826705 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169830013 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093164228 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183107048 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091433875 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177524267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093166094 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111327624 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083614349 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768770132 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113929244 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10704761 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088927557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182529695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098187682 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084993402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081608509 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098459458 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797210328 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086546597 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096320352 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088554568 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111140942 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092305766 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109988245 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088711713 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174679211 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219946857 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096447008 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107510935 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081365767 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170912772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.084723398 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100657633 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085524346 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102626488 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095591964 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107942309 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087398328 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182783228 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151455376 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.206227393 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.519692368 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099981717 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084144604 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218832646 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09925464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276588644 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107877042 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.213197338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160081 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096821256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306148212 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178613674 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18359403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086326989 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.180128881 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081372956 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106464389 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157160258 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.081795817 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107817607 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.150652697 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118943651 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114705731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.120170966 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101285416 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219672126 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097061157 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16334515 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084495262 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113190019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296045995 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082676994 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120578748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153120595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105232626 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09845612 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698258266 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083133041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1117835 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110564736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210302317 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159410419 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107084183 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09107253 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113631146 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155862226 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205075204 seconds)
  done (took 41.905763629 seconds)
done (took 55.582168368 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282594711 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.24728124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302285744 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.202219489 seconds)
  done (took 1.853252579 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.14732698 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.081359797 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.079741819 seconds)
  done (took 1.014012024 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.460527047 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.352913232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.330168786 seconds)
  done (took 1.851025071 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24427775 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.26438504 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340917309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420787957 seconds)
  done (took 2.08508416 seconds)
done (took 7.512060906 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.186293243 seconds)
    (2/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.234889791 seconds)
    (3/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.212178769 seconds)
    (4/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13432816 seconds)
    (5/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.274307348 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122277641 seconds)
    (7/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.120038198 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.247673546 seconds)
    (9/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.180356134 seconds)
    (10/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083027444 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103618064 seconds)
    (12/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.115028593 seconds)
    (13/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.22470071 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129740777 seconds)
    (15/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.260045537 seconds)
    (16/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.122150828 seconds)
    (17/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.281973307 seconds)
    (18/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.281197018 seconds)
    (19/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101960401 seconds)
    (20/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13164454 seconds)
    (21/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097299042 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.159687706 seconds)
    (23/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.201154565 seconds)
    (24/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216572451 seconds)
    (25/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190225836 seconds)
    (26/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101120305 seconds)
    (27/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087113565 seconds)
    (28/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.194376828 seconds)
    (29/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.186571922 seconds)
    (30/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110256817 seconds)
    (31/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.093261715 seconds)
    (32/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068676026 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128532357 seconds)
    (34/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185169541 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114637725 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.11505546 seconds)
    (37/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215328337 seconds)
    (38/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17390399 seconds)
    (39/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182623587 seconds)
    (40/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170321498 seconds)
    (41/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101033629 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.133348476 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.14144944 seconds)
    (44/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.100803046 seconds)
    (45/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104010064 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067841229 seconds)
    (47/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.094063016 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.131820231 seconds)
    (49/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119649188 seconds)
    (50/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085921439 seconds)
    (51/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072173922 seconds)
    (52/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120327827 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180976443 seconds)
    (54/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.13967594 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.132267513 seconds)
    (56/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099372513 seconds)
    (57/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095599966 seconds)
    (58/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.111550706 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10351386 seconds)
    (60/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.153905515 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090422305 seconds)
    (62/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193990589 seconds)
    (63/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.122848885 seconds)
    (64/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.069976715 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.115574608 seconds)
    (66/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088108783 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09055943 seconds)
    (68/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194118027 seconds)
    (69/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073996266 seconds)
    (70/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13571985 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.199889403 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090006827 seconds)
    (73/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112510868 seconds)
    (74/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.195175505 seconds)
    (75/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.138386068 seconds)
    (76/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138270431 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.182249814 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.103875721 seconds)
    (79/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134369937 seconds)
    (80/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.177765675 seconds)
    (81/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104621833 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068900882 seconds)
    (83/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.116118751 seconds)
    (84/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.123445927 seconds)
    (85/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085251082 seconds)
    (86/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157605257 seconds)
    (87/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.173060419 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202323646 seconds)
    (89/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129290466 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174037191 seconds)
    (91/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.083058286 seconds)
    (92/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.086579901 seconds)
    (93/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.085952126 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104057872 seconds)
    (95/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093627798 seconds)
    (96/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086237247 seconds)
    (97/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082209506 seconds)
    (98/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180129392 seconds)
    (99/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084231777 seconds)
    (100/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084546082 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096103207 seconds)
    (102/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099642162 seconds)
    (103/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101249398 seconds)
    (104/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082662252 seconds)
    (105/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.111133675 seconds)
    (106/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.132730199 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.101356317 seconds)
    (108/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.099276521 seconds)
    (109/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.085050396 seconds)
    (110/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083837622 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182733145 seconds)
    (112/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.11011165 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.132096663 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106167168 seconds)
    (115/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068367636 seconds)
    (116/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086388187 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203027822 seconds)
    (118/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088722425 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113577406 seconds)
    (120/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.084013729 seconds)
    (121/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098529266 seconds)
    (122/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081434257 seconds)
    (123/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085393155 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086998075 seconds)
    (125/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100818624 seconds)
    (126/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067009533 seconds)
    (127/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.207708666 seconds)
    (128/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183931653 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105042097 seconds)
    (130/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06797503 seconds)
    (131/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.215239441 seconds)
    (132/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114795657 seconds)
    (133/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093756279 seconds)
    (134/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.150527167 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111942487 seconds)
    (136/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.188561437 seconds)
    (137/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.067971993 seconds)
    (138/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067804996 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.086371913 seconds)
    (140/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083135209 seconds)
    (141/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105294479 seconds)
    (142/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097520546 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105073147 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103300764 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089346618 seconds)
    (146/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068010033 seconds)
    (147/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.085807907 seconds)
    (148/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094615416 seconds)
    (149/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086979354 seconds)
    (150/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096526676 seconds)
    (151/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.129016506 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098006397 seconds)
    (153/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070109277 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086146328 seconds)
    (155/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108979237 seconds)
    (156/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.102018649 seconds)
    (157/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.070776062 seconds)
    (158/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158273747 seconds)
    (159/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117997234 seconds)
    (160/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068925714 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.116932284 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088135055 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112823848 seconds)
    (164/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069074317 seconds)
    (165/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086314939 seconds)
    (166/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06938922 seconds)
    (167/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.084167603 seconds)
    (168/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.109361816 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10427078 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068890783 seconds)
    (171/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083831467 seconds)
    (172/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070096284 seconds)
    (173/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07092376 seconds)
    (174/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105326146 seconds)
    (175/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072582591 seconds)
    (176/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104368914 seconds)
    (177/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.073072834 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112254646 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091673495 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101159451 seconds)
    (181/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09018748 seconds)
    (182/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103181027 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.101898466 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.088613171 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.088642735 seconds)
    (186/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.121223307 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073570073 seconds)
    (188/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104355582 seconds)
    (189/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.080044397 seconds)
    (190/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090207413 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090147555 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090460844 seconds)
    (193/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.134712811 seconds)
    (194/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090515872 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102074112 seconds)
    (196/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090590729 seconds)
    (197/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088098046 seconds)
    (198/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090432706 seconds)
    (199/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113676256 seconds)
    (200/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117596898 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096588786 seconds)
    (202/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090022012 seconds)
    (203/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07145959 seconds)
    (204/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10739613 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.103746029 seconds)
    (206/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109800108 seconds)
    (207/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.108530533 seconds)
    (208/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.180680677 seconds)
    (209/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.095860117 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.112698838 seconds)
    (211/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090846847 seconds)
    (212/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087664626 seconds)
    (213/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090276688 seconds)
    (214/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072984543 seconds)
    (215/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.096943241 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092746605 seconds)
    (217/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113243341 seconds)
    (218/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.080791432 seconds)
    (219/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070171942 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109676148 seconds)
    (221/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087736663 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111329995 seconds)
    (223/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.094175421 seconds)
    (224/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090848457 seconds)
  done (took 27.353375117 seconds)
done (took 28.067491418 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.381372326 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12686427 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109112131 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092825417 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129023681 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097834683 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.115056507 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.098543903 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114840984 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.103089718 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086666073 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.113609177 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096721614 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.131138999 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.097744103 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.107442156 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087705805 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115379311 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11377869 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099318167 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133676852 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089632763 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115083096 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.088425074 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134572904 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088858918 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113180253 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096071827 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113347684 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086466831 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114846913 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105434067 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.098327862 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11800233 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088441167 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106437749 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087924679 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09672537 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088654425 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107850806 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096185295 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106024375 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.098925822 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108111585 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090097323 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.105843175 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087141369 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117506667 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086043458 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.115266326 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089484514 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120811788 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10447237 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08726419 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103882032 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090180747 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114762866 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08865627 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.113949057 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087953272 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106011425 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088731504 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109542039 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088743038 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.106394982 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.090332076 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107470042 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091440754 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10443399 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090680017 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104187795 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090462504 seconds)
done (took 8.434203201 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090025875 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157267451 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130951511 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115192288 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.139714329 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117441765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0965156 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125025692 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110560269 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107980911 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.129152295 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.123128715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121891224 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.109549999 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116017403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.088374887 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110169745 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.096207962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.13611008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124547331 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132898425 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092624603 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13130138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.12269172 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091960215 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136901629 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.09256347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.106893686 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09088189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116375205 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124930295 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.092304953 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109884202 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104251563 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116395319 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.107683984 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.100746832 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.105786964 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089943931 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107397629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119634896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106842924 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110044865 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105002666 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111409884 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095904801 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115515315 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.111536654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095236709 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105214882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093771918 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130209849 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.107800675 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.093056276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107954218 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093768519 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10868211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092904258 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109891942 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109754116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090333361 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108042393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.093458057 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126719509 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108624662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092476715 seconds)
  done (took 8.013010543 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107664361 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141275952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.116017371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100246525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114121929 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.080770149 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099172936 seconds)
  done (took 1.519528461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083761915 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129902214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116324836 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134218404 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.121218042 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.119304837 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134255166 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117475246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106933941 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111846776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129052932 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137800986 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.102246334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112237478 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118525689 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100321779 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119988841 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101528033 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123973629 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11599158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106557998 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105559878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11568921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10090717 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105786467 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102401958 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.168060694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095427104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101549849 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090127192 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106715393 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.173228807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104847467 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.113499248 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.080459472 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130113809 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.122705294 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088462526 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127025003 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104809196 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.1053791 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.107947148 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092371537 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.108137346 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.090466193 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.117427813 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.112709353 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092905857 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.106847895 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112374514 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112724828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10547898 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.105164492 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087615958 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112874998 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107462687 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11563729 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.106889102 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111392634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110816915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127400578 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111282132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125089496 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.127533622 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101342522 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.124419247 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105263993 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124894202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108805513 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.10804124 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129647815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105566483 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.096343698 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.116068371 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092773181 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12951677 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.110109194 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106801005 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113726194 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088741887 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.104256949 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.099608716 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117222719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088911783 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103934792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101607056 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114180207 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08867638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10742831 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123860117 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088753749 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11406822 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.113140081 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088838033 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116589301 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112633358 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113224693 seconds)
  done (took 11.517932432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087019219 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084921075 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109352145 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.103718572 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.086672353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085544088 seconds)
  done (took 1.331861035 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.167288375 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091332571 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.121976406 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.093443715 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.163313177 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130283648 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130806802 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095122571 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.127012994 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.118728346 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111470987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.13018445 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.128456428 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095658886 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.130454964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094560994 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131668366 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106033219 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101332596 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107715574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101455604 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.113853733 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090198763 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.125166482 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.112218308 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094824569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112401185 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.100457421 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.11944709 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11251364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095806895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.112058252 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091864214 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113865229 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13124401 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09426306 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107383943 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096328375 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111751751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.112640071 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113123247 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108145183 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099611535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.116682606 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113046382 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.092517787 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11545635 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112082188 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114100004 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11522903 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097850454 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.113156149 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.112257879 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098522755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110320193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096001927 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.11595764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131094321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096379405 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111725359 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090895386 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.113516388 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113230667 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097661972 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110689521 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096037363 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111998704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11104063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090329954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.111312819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097544491 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.10963603 seconds)
  done (took 8.780411714 seconds)
done (took 31.917237888 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.37230858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187496618 seconds)
  done (took 1.331172629 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.480903435 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.559504517 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989035857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152837051 seconds)
  done (took 2.960612346 seconds)
done (took 5.067564006 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095283388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116807341 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.098989996 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.11323563 seconds)
  done (took 1.197850562 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099951367 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.109542262 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096073728 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.110656165 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100617489 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.111071094 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091358076 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116864403 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091731751 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.114003225 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.10957638 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093255966 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.111645411 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091748484 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.108194415 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093984774 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.114047426 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093005159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.110990132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092795374 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.111625723 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.111315102 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095785299 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.110896147 seconds)
  done (took 3.269140176 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109920423 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106281058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.092258414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.106613704 seconds)
  done (took 1.199423578 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101241474 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.125102847 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106503425 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.118226352 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126028363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106661447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.106862669 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089730747 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.1092012 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099239342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108638476 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10863951 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125753727 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.102264666 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102233925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100286838 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086208015 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.125228608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09930855 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.11932626 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088161874 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118464798 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096124781 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.123977919 seconds)
  done (took 3.37738579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16338858 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120808525 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.131460318 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155532015 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114364958 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.131575664 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.133005732 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.096188232 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.111330726 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.088765172 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.107742706 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161788698 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094121736 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109572078 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089151921 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.112663905 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113722582 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.09428432 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.108514566 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103153431 seconds)
  done (took 3.13095651 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096045849 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106097895 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.085557831 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.106266852 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.096098846 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.1092658 seconds)
  done (took 1.389314615 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085509447 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083286141 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102456814 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083438303 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106669723 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084873248 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100294048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084216604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.082527661 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102723701 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083224339 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10178724 seconds)
  done (took 1.887918 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203644971 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106145342 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.107932481 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089685267 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111151407 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088004909 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.121719139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.088542958 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.162475539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110459427 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.102503379 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.159262581 seconds)
  done (took 2.240392617 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198768961 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093754762 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246875298 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348533206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147449146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137258495 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274440136 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155475371 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178387741 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107269315 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205003411 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14662624 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124812723 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168674325 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130441228 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173625504 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164786731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190205063 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138855644 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196231437 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154972692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157064124 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170808989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142558201 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127872239 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148261746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.089215326 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118961852 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16313828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1598407 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162782332 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138143348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128024524 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190330608 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220368259 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168874758 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285944812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125102743 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174826613 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175604174 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248324976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111267114 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203897315 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124331434 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121553441 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170021078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146248617 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.168881771 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121849313 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130562837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175222801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165711997 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170423643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127093389 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279331734 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13594847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.135984646 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169309347 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179429099 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180387387 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156364334 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.112260497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175775435 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17159685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170020146 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134147161 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156802061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11512837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166214797 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185611381 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166057079 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158082985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.172010891 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123654856 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152326619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160013762 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142976898 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169639824 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149474189 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.090777642 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140094223 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125969359 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098644928 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174819767 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11155468 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195190122 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105040091 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.192329665 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194464017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147436947 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150363002 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153518687 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157365935 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116723921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108464034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136578912 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152341802 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147338498 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102032936 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147892965 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13611305 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.096666338 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142946012 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.113057802 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149763458 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104077452 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155757351 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153509471 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.118846634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153939313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1384065 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127834147 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17788918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175303989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102269186 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122244762 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184264886 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14792629 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125586232 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165526855 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17547229 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15440422 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106877831 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157872196 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204822505 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111764873 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178391064 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132020271 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123819463 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14017982 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148111726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146044504 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13915738 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11889967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.141658851 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182288308 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.118198519 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106223149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164043575 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117071192 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116485439 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114107596 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125972657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.130652938 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119609702 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129545489 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144930438 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14994304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143041235 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150928251 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131829819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182823985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122058073 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129966205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136320997 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.107091122 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169023159 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175032908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098665636 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196078146 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158128268 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186554721 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153354952 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119974644 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17199562 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100320069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.109379379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156563582 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15079922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151567461 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.172171104 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182243879 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156201448 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.142689059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138896499 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156818614 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164959891 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146976315 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.135485496 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131220619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176147127 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092674142 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113081349 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097261293 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130460142 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119763973 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103575619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169664768 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154083883 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198196086 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151595886 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109468326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172540535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.115689217 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155299929 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.161197159 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128773967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174845751 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171739225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15636761 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131418974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160154373 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089700589 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115504511 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102647633 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158893956 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123539785 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124457845 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113255924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172511691 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183475514 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118196798 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212380954 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159935 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183070819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.111268087 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133371165 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161007805 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147487072 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168765134 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104975135 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148661725 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167824685 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134927341 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181789163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152217949 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157646193 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211605079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146206684 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103061413 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139849494 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158104796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130597758 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152264323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115590989 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125393726 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143799059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.125495343 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09569517 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169669279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134229321 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168496742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148717863 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183546277 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096634865 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134669882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151169422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115040058 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108672799 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160205155 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178147909 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133394257 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14882778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165608377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12057747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.294246739 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180349212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173900101 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127258477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133731753 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150231802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1299581 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15369384 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172928849 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133743312 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171130488 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149479135 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133705738 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104251407 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138067749 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1412515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142071677 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.122951507 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.124483987 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132493003 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172771523 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135907211 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150079391 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155234964 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.137595778 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.12404041 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131199064 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191822633 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149226623 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167796813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146588272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157395853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177582678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114048104 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097691051 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.116804539 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.403803019 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102927552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14976457 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.173653328 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208454864 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15228207 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160029467 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106976255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115080518 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150028042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138036775 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188419379 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133402824 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105673073 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203218104 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119511919 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121512393 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154431262 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26551107 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13402604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16495766 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089965608 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261551666 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113937929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122518177 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130253681 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160276984 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.122674293 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167920489 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156035848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134833242 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130458285 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128126248 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180292139 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218907943 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161662909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165687517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133575947 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148136106 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153000588 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166649545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111817841 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.134670351 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153024618 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173373125 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175710613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122629478 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153200952 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15369802 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129018442 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185945802 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1039896 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178141163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121891942 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15655318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130174693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094097913 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14920649 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.173983332 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123990997 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166196393 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149372896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1223139 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095523457 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141552694 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149564689 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133352573 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099305466 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167724677 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118276802 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154368298 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170742486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099747906 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145282438 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13742259 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099061565 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132821551 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136525036 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124630332 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135066309 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170630141 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120747417 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166990071 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162177153 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155632918 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150227161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134608819 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631036464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.118449081 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17248001 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137430659 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178191114 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138758425 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156680609 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1511736 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118375292 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158048739 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140372247 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210909434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156477568 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148686125 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121352455 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113874321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136323171 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.121855426 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121009027 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153502567 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1315785 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126705195 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146934097 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11626462 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137407403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129747811 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176080232 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117182018 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195968204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176445717 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107858103 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156988749 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187594324 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099408452 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15184084 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161734242 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133959578 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141880248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100438961 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.126456397 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171202369 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093124936 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150608463 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151712123 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152861581 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154055546 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125607885 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151005695 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111823722 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15353342 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117485746 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145133249 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126620511 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122015943 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.117521946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125050418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15011999 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148472327 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117517669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137824272 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169364446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.115029071 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123130791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263357937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150274605 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18515079 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.144399207 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104595915 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135404003 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14537371 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143262576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129504961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099129374 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123366807 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100556924 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167887773 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145406261 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151790354 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175966427 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152900944 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181302814 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13689084 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232608877 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130499412 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147276934 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121656219 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098591501 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132717149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104661434 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136885613 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20298447 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149902364 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144548852 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137518702 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118546367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094791292 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124174373 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153084495 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123915235 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148824624 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134771774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108767076 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114189324 seconds)
  done (took 72.233520477 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165186085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131950448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.136951343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.305628326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158688189 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247096457 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.196631704 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217333395 seconds)
  done (took 2.432548846 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.191660413 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.125925588 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.134214869 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.116079745 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.173734907 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329050794 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129938572 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.114250765 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.173852359 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.125213812 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.111595541 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.566803935 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114499683 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.114696365 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.083984169 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.114472748 seconds)
  done (took 3.582748919 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.776161258 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.461973149 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.078586954 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.216157346 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.206105143 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.143904799 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610589956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.171469851 seconds)
  done (took 10.53876289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.124939752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133987743 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.250748721 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.163989729 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150685533 seconds)
  done (took 1.705177387 seconds)
done (took 108.972409968 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.105513782 seconds)
  done (took 0.973919789 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.464361784 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077137693 seconds)
  done (took 1.44998289 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100709222 seconds)
  done (took 0.980404397 seconds)
done (took 4.282643332 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.998784786 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.435444317 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 1.044164151 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.394396709 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.414464322 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 1.003147037 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997678419 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.375588918 seconds)
  done (took 6.531849662 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.100297761 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.160605204 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116819804 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.123793204 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.126701551 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.094279017 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129849271 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.090114434 seconds)
  done (took 1.823139867 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.175458357 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.165538951 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153970095 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.103345404 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.129367486 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.133675128 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109082515 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.112449171 seconds)
  done (took 1.964097541 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 0.097078818 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 0.127622781 seconds)
  done (took 1.103003962 seconds)
done (took 12.299254346 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.110068776 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12270014 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137384984 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.121309177 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.144911837 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.088038046 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.099114604 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.110067208 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097809109 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.126220262 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087643005 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.111162439 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1031747 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.115298865 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.103964567 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.118911482 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108409914 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.125705521 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.088777294 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120927019 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088893297 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.130550366 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094784406 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.111229777 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.11440821 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128056354 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.126720491 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094562352 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093049372 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112312534 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103256512 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117289068 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.089351649 seconds)
  done (took 4.558170707 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.117090568 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155235469 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.087188463 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.109519236 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.149445493 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.086889924 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.136605245 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.087541051 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.108544687 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.087661731 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.086192097 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.13599805 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.140697932 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119232464 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.156727291 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.144872994 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.11448325 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.148072018 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.131595013 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12596245 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.13801017 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.086358844 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.142510462 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150356434 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.086209507 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.108756073 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.130173308 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.139996537 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.153119171 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.141853459 seconds)
  done (took 4.595388328 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098522613 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.127132365 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116440523 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183572864 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152279983 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105745042 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.125098392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108125647 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140317029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.088893124 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.122564137 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.143257263 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106456614 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123024468 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09476277 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.125751179 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109864888 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.113066926 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09690296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130634322 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.10793896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.125334267 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103962268 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121792321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089121066 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120542646 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096649432 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124405894 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118384036 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.099926286 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114362521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.094285815 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113551191 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.099885347 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114997879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097660891 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13415323 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099378276 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127429136 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145171845 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099297811 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116012164 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.111495218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159010171 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091815314 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.118892628 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099536985 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122363984 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088068524 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130689433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104039177 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113207327 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127544144 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090378622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110713328 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.097931129 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112765134 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09414946 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.120306287 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095270103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.132668968 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098848761 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11999244 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.092298568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.118270148 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089242005 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111617633 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094914264 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136559477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09487832 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.143775124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090182869 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.117672683 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098320246 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.118370077 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120442953 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089853421 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.096854595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121340051 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116803603 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099066963 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113899455 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094833668 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129035198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.106474224 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120664035 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095355554 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.119015827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093847253 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113696642 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103361202 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115474682 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.092885978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.122018824 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.090571245 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114932247 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.097093477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.11732679 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088075696 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131713007 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094843467 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112395173 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107521672 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.113241085 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093226753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122175069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101613863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113179605 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094496069 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.119997493 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.08919103 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119315186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094295966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112175698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102069277 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125452905 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117429699 seconds)
  done (took 13.954098179 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233312161 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212705233 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184810405 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.291771188 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13646896 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117210645 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209566265 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164595698 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113189605 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.153288984 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169274408 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172977568 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089450979 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14617758 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211872369 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.295212861 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145309914 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.131509276 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.153757787 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136360693 seconds)
  done (took 4.363713467 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113537472 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152917991 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142606275 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116516274 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114963151 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103649344 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.1149292 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.129552725 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092258557 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.120325727 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.090223438 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.122607093 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09397993 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.116425311 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10774525 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131206735 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119552594 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096855302 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130644595 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095958255 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.114922214 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.135122323 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.100569314 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142454774 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.121657466 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105851017 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111601538 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097959631 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.10977312 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.090458527 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117775884 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10635062 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120196227 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.091079323 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.118848292 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090681041 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.109568232 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092635916 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115323772 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095421785 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12928666 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093808513 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.113424359 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090759488 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.121681998 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087252085 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.117747172 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097739888 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117823709 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099562009 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.11996815 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095920318 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120606315 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102709515 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.110850953 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101416636 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126180019 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118225629 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098056146 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112493416 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089732251 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094437166 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.11276239 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117883895 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.096934519 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.129927338 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100216991 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113948917 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096209689 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118186135 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094805415 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132175976 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134524444 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08954973 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.111029046 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114394802 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11140139 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079309524 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100414421 seconds)
  done (took 9.615199808 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.118986517 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.115041547 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.126237138 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151450076 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105503506 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.123570922 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090857489 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134687127 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.097381835 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.122734535 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09744619 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128345576 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.140931786 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104673395 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113955235 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105549295 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.118629443 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.131811025 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134029659 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144976385 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.102128209 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119446008 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.104272914 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125569713 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.12436364 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12740304 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147065008 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.096837084 seconds)
  done (took 4.267039236 seconds)
done (took 42.230948055 seconds)
RUNNING BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.972124681 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.22692873 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.234258166 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.987763846 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 1.971002885 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 1.981235222 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.957189926 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 1.9995765 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.970508504 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.95858934 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.894638501 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.237656775 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.964492742 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.389950385 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.959421071 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 1.982591879 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.966878516 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.288116155 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.969838875 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.002281793 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.954174656 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.963786098 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 1.99084421 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 1.986475002 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.069770784 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 1.980416156 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 1.976081386 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.955985767 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.229146946 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 1.990374033 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.001733192 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.971154865 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 1.981297704 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.969520826 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.060815607 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.988859059 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.204784081 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.064415627 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.957559695 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 1.967755428 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.198420293 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.298786986 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.970133524 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.962920701 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.968918684 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 1.987724476 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.962184509 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.63495601 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 1.976586716 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.957701189 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 1.980421562 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.391952567 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.98376583 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 1.985975345 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 1.977133121 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.255840762 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 1.973713121 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 1.995450118 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 1.997498548 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 1.97187932 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 1.970678725 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 1.972982815 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 1.981110672 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.982074248 seconds)
  done (took 128.42111166 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.970086665 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.976708001 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.973672902 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.03196906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 1.976739917 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.976352596 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.971121402 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.970754655 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.976569429 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.976283747 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.974184745 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.970264108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.976523186 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.945771892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.973054502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 1.990891526 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.974680688 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.971927376 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.985978218 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.970489597 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.971005629 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.9753637 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.981976817 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.971354053 seconds)
    (25/36) benchmarking "symm"...
    done (took 1.99399397 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.038762037 seconds)
    (27/36) benchmarking "syrk"...
    done (took 1.9968138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.001767702 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.982980312 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.970269738 seconds)
    (31/36) benchmarking "gemm"...
    done (took 1.989796154 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.983110007 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.433351094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.83254073 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 1.977542766 seconds)
    (36/36) benchmarking "trmm"...
    done (took 1.975040202 seconds)
  done (took 71.514177825 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.962979339 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.963303504 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.962561505 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.988383913 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.961974261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.379301311 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.381498998 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.689605424 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.081470058 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.960420579 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.896969223 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.100697946 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.954905489 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.038803917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.970133091 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.954844764 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.970198179 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.978706643 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.95461605 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.954783829 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.374999284 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.972774832 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.078469216 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.115615521 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.966301296 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.978250191 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.343272639 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.954304507 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.978992703 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.260214788 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.991534231 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.955918022 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.177541423 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.612042241 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.063812444 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.956213742 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.978630546 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.954374485 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.219565914 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.953822718 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.953899708 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.95655677 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.472250935 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.954497444 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.377639996 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.960329176 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.768608662 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.955082952 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.955328739 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.702183207 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.359372248 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.972634329 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.954838693 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.957145411 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.954496438 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.955867146 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.979447355 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.577689569 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.039856701 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.951297326 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.9553688 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.975244757 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.952030345 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.061907756 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.944216558 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.592018854 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.950560868 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.046635279 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.000904344 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.374130779 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.952552121 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.034325222 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.055491389 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.946376121 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.943855415 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.946158989 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.945816258 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.047831483 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.944979616 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.262460864 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.093034806 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.956557479 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.845204848 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.941546372 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.029607864 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.941004635 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.196752528 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.940519665 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.940740197 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549466468 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.027425649 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.938847478 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.938947455 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.938333443 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.255974417 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.938608598 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.363305234 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.04998484 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.94353402 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.215127253 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.94635754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.269227411 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.357839273 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515122251 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.942416295 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.045346744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.090406116 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.952717033 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.940097635 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.841876368 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.939340935 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.999127282 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.945001997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.328879069 seconds)
  done (took 332.747662848 seconds)
done (took 533.586651619 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.099781433 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.105318632 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.997153565 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.101671824 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.96911038 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.113212518 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.081282171 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.966771019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.034651382 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.012026532 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.03352847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.994123668 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.973905273 seconds)
  done (took 14.357555331 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.17825554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.945657235 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.021477325 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.154869882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.985408868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.18598709 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.210074613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.947439161 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.081088401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.958451865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.95890097 seconds)
  done (took 14.507118964 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.175472301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.946496525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.012624836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.155977936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.986430764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.17841169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.209752373 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.946305654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.08633228 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.959727452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.957890622 seconds)
  done (took 14.496779241 seconds)
done (took 44.235635557 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.947830012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.952559155 seconds)
  done (took 4.780499564 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.014354293 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.014154645 seconds)
  done (took 2.912236873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.95399097 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.954537568 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.954046138 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.953860547 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.953962069 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.953915387 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.95442589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.953474876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.954520051 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.954021289 seconds)
  done (took 10.422973665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.953924428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.955042565 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.952749938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.9542028 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.954121384 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.951764114 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.954912037 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.955480002 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.955827708 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.952804158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.955740184 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.953019618 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.954280674 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.952185414 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.956879393 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.952731279 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.952725058 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.952039395 seconds)
  done (took 18.053108444 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.968287609 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.976301424 seconds)
  done (took 2.825983707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.094500514 seconds)
    (2/7) benchmarking "second"...
    done (took 0.994981162 seconds)
    (3/7) benchmarking "month"...
    done (took 1.070762828 seconds)
    (4/7) benchmarking "year"...
    done (took 1.060263747 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.995645572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.976176567 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.994996796 seconds)
  done (took 8.069212954 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.956610975 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.152445759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.253727147 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.513325749 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.956959867 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.000446541 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.837983584 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.000472639 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.988935492 seconds)
  done (took 11.544556692 seconds)
done (took 59.487411929 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.119849094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.073597578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.954715225 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 1.9673205 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.95653733 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 1.977787063 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 1.965518853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.956333911 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.956206707 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.955394503 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.956012862 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.144731183 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 1.950670602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.956237801 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.956446291 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.051196013 seconds)
  done (took 20.783533268 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.980421316 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.963691755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.04701461 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.971610442 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.981462205 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.104126089 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.011883433 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.962792559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.085972241 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.978059559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.958455328 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.978947814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.962839076 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.821573015 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.982833287 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.106732103 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.16056876 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.958834524 seconds)
  done (took 21.902742045 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.285674915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 1.989819285 seconds)
  done (took 4.163348321 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.977442836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.962085293 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.963912177 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.960916385 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.95327235 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.953521198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.960727893 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 1.957150709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.967051083 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.060353619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.970804507 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.971202568 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.976034054 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.963119292 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.958297601 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.999386496 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.106292535 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.960235041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.956323953 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.966872608 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.960237535 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.042190315 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.000876458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.966530794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.054543881 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.967085215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.971696012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.969529658 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.093862581 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.961489456 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.965231513 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.961407826 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.965961297 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.787045755 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.36527335 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.975561509 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.983523239 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.971852099 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.959530075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.110267249 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.964818215 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.96905082 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.955464013 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.370293758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.110011762 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.065020468 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.970108245 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.972309167 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.964703444 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.021873171 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.96480835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.965583569 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.004182785 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.6968232 seconds)
  done (took 64.462425417 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.957277226 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.955714912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.132150194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.975016819 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.956846537 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964550971 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.976208951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.168312952 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 1.979670039 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956643256 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.25400948 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.44926489 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.97195042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.00062331 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.84349519 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.020309523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.958478584 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.968334418 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.9574022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 1.961241023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.454509843 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965778135 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.95797926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.097129357 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.991945734 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.39916892 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957397539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.958663683 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.967636527 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 1.958325885 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.405984237 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.990034319 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.039540715 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.958178166 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.193655998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.265480415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.222369845 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 1.96266114 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.979731564 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.962522045 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.967861172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.3857499 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.250262042 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957922689 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959064162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.418016054 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.966758409 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 1.95774131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.96511027 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.200323509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.964628788 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959993229 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.969678115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.960318318 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 1.959034674 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.081725714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.031485349 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.404771747 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966297477 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960371366 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.99824164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.960824584 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.960451764 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965559019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.975163289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.251110731 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.121335218 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.96769843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.247928814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.41078136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.989930162 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.463992982 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.979971539 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.961301111 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.170916497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970137733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.960052744 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.405736786 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.971163143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.961605413 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.234157076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.974509824 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.252069617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.973345454 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962208661 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.470798012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.972215351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.031982108 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.960844233 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961037554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.961557913 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9643097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.204087582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.009161535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.963101137 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 1.961936754 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 1.978242725 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962743529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.962724234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.964752929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.46494039 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.987820377 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.961037517 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9663171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962547224 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.969750151 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.964833897 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.965276336 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.222820479 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.968954969 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 1.967106564 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.96474059 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.962864857 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.970590305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.106391102 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 1.96925032 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.196629682 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.968777738 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962746455 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.966689809 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963266736 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.016935314 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963932041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.971490383 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.765848781 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.221472662 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.978436842 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 1.976309013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.965680078 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964005844 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964357502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.966011469 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 1.996806854 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.966045639 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.675182342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.986015034 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 1.969865346 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.965351638 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 1.976836354 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.966590349 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.971377306 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.964103622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.240987378 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.210976274 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.119598916 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965974467 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.96555987 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.64460739 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.024517475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.141722439 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.979836589 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.965792264 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.211282608 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.188362559 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.9668073 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 1.965540399 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 1.965929418 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.216379526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.96657258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.254433676 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.444746797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.986958235 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.975514826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679641191 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.631742307 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.972054893 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 1.969896639 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.262073704 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 1.989623773 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.965934929 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.966436311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.966801559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.9800371 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.984549317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.974487795 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.967400379 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 1.967246172 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.015147725 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.154626439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.979092835 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.973031355 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.402301375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.999433108 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96577528 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.980431913 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.969820025 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.965877969 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.024823465 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 1.971720776 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 1.998405632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 1.967947842 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.969080677 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.418097089 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.967619584 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.976976289 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.156180113 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.585348077 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.987274511 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.969411691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.981069884 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.859378038 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.458677946 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.000927893 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.203621574 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 1.973445899 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.004152704 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978755429 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.035916332 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.431879252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.969291819 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.980628203 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550088567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 1.984900275 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.493684384 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 1.97012581 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972551712 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.494707216 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.989835049 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 1.97172834 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.969303437 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976776285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.260962302 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 1.969629687 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 1.982944373 seconds)
  done (took 412.876314199 seconds)
done (took 525.071387356 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.969316355 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.970041272 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.964183879 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.978747428 seconds)
  done (took 8.784260048 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.976316324 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.976964677 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.978090066 seconds)
  done (took 3.834667693 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.969332571 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.97120289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.979664468 seconds)
  done (took 6.822221094 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.135249255 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.95218752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.228356918 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.000399552 seconds)
  done (took 7.219375234 seconds)
done (took 27.56075708 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 1.972160692 seconds)
    (2/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.068055568 seconds)
    (3/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.003651074 seconds)
    (4/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.998052377 seconds)
    (5/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.615511516 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.008359012 seconds)
    (7/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.044379614 seconds)
    (8/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 1.974730548 seconds)
    (9/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.061644625 seconds)
    (10/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.000460696 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.985418081 seconds)
    (12/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.995892243 seconds)
    (13/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.090387349 seconds)
    (14/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.133644895 seconds)
    (15/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.032587568 seconds)
    (16/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.028933452 seconds)
    (17/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.254141524 seconds)
    (18/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.090656933 seconds)
    (19/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.015458271 seconds)
    (20/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.982492613 seconds)
    (21/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.981328036 seconds)
    (22/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 1.958567036 seconds)
    (23/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.630417362 seconds)
    (24/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.685886 seconds)
    (25/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.068641695 seconds)
    (26/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.989529567 seconds)
    (27/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.98736314 seconds)
    (28/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.084498218 seconds)
    (29/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.047318472 seconds)
    (30/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.009671555 seconds)
    (31/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.018758272 seconds)
    (32/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.020541966 seconds)
    (33/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.004829113 seconds)
    (34/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.089373443 seconds)
    (35/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 1.998693034 seconds)
    (36/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.006832096 seconds)
    (37/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 1.959739077 seconds)
    (38/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.063076742 seconds)
    (39/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.617341117 seconds)
    (40/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.126328066 seconds)
    (41/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.003024831 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.05174465 seconds)
    (43/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.995417507 seconds)
    (44/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.076497121 seconds)
    (45/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.985579168 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.689816867 seconds)
    (47/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.034548697 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.038616498 seconds)
    (49/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 1.995793858 seconds)
    (50/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.085916098 seconds)
    (51/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.051920539 seconds)
    (52/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.987909299 seconds)
    (53/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.056077343 seconds)
    (54/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.036609178 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.025834797 seconds)
    (56/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.008642551 seconds)
    (57/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.987523261 seconds)
    (58/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.039773724 seconds)
    (59/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.170163814 seconds)
    (60/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.02757642 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.019953594 seconds)
    (62/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 1.963421903 seconds)
    (63/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.099487215 seconds)
    (64/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.001368528 seconds)
    (65/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 1.962381695 seconds)
    (66/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.000278213 seconds)
    (67/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.617448112 seconds)
    (68/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.018139936 seconds)
    (69/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.699889927 seconds)
    (70/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.007264878 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.098683134 seconds)
    (72/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 1.975384845 seconds)
    (73/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.009568176 seconds)
    (74/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.094560234 seconds)
    (75/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.010650692 seconds)
    (76/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 1.924895287 seconds)
    (77/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.668668594 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.02917255 seconds)
    (79/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.011733658 seconds)
    (80/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.762110996 seconds)
    (81/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.055964496 seconds)
    (82/224) benchmarking ("map", abs, BigInt, false)...
    done (took 1.96977827 seconds)
    (83/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.178224407 seconds)
    (84/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.005145202 seconds)
    (85/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 1.963219422 seconds)
    (86/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.703781762 seconds)
    (87/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 1.982598231 seconds)
    (88/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.797746462 seconds)
    (89/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.023538963 seconds)
    (90/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.687429951 seconds)
    (91/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.011699059 seconds)
    (92/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.046001217 seconds)
    (93/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.986559348 seconds)
    (94/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.04626147 seconds)
    (95/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.008658716 seconds)
    (96/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.658365911 seconds)
    (97/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.033797746 seconds)
    (98/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.778871884 seconds)
    (99/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.089240511 seconds)
    (100/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.120452085 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.068434856 seconds)
    (102/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.064800502 seconds)
    (103/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.993999914 seconds)
    (104/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.052072211 seconds)
    (105/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.987399459 seconds)
    (106/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.089992832 seconds)
    (107/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.130680475 seconds)
    (108/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.013344249 seconds)
    (109/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.692415679 seconds)
    (110/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.010608999 seconds)
    (111/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.692404796 seconds)
    (112/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.104921394 seconds)
    (113/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.189403083 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.054366377 seconds)
    (115/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.132037004 seconds)
    (116/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.131605286 seconds)
    (117/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.628902087 seconds)
    (118/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.040733892 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.082874112 seconds)
    (120/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.992975326 seconds)
    (121/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.049008188 seconds)
    (122/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.044642088 seconds)
    (123/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.089381611 seconds)
    (124/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.073427884 seconds)
    (125/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.992747922 seconds)
    (126/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 1.976016038 seconds)
    (127/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.143243735 seconds)
    (128/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 1.972551 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 1.987872151 seconds)
    (130/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.098235201 seconds)
    (131/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.078910981 seconds)
    (132/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.989071398 seconds)
    (133/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.219452084 seconds)
    (134/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.056127586 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.035782293 seconds)
    (136/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.00154659 seconds)
    (137/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.022242142 seconds)
    (138/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.770808127 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.110622599 seconds)
    (140/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.003532531 seconds)
    (141/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.09119775 seconds)
    (142/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.001906847 seconds)
    (143/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.014353553 seconds)
    (144/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.065512766 seconds)
    (145/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 1.998908917 seconds)
    (146/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.153073838 seconds)
    (147/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.04203312 seconds)
    (148/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.038806448 seconds)
    (149/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 1.977758666 seconds)
    (150/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.080733068 seconds)
    (151/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.004014564 seconds)
    (152/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.049162021 seconds)
    (153/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.625075358 seconds)
    (154/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 1.97897462 seconds)
    (155/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.081575565 seconds)
    (156/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.991346505 seconds)
    (157/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.68877389 seconds)
    (158/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.840733345 seconds)
    (159/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.032378587 seconds)
    (160/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.078868952 seconds)
    (161/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.149728929 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.02932668 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.066861062 seconds)
    (164/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 1.996603585 seconds)
    (165/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.106281676 seconds)
    (166/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.171421382 seconds)
    (167/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.114284758 seconds)
    (168/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.018414565 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.039875345 seconds)
    (170/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.05679782 seconds)
    (171/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 1.968676811 seconds)
    (172/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.08620314 seconds)
    (173/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.071209321 seconds)
    (174/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.995729068 seconds)
    (175/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 1.968465275 seconds)
    (176/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 1.984320121 seconds)
    (177/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 1.974951463 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.06866629 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.065242881 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.017066675 seconds)
    (181/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.004761261 seconds)
    (182/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.104287789 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.170579793 seconds)
    (184/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.168135212 seconds)
    (185/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.008497946 seconds)
    (186/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.153056788 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.813560364 seconds)
    (188/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.017481423 seconds)
    (189/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.024456643 seconds)
    (190/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.002722053 seconds)
    (191/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.63304964 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.028652773 seconds)
    (193/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.023905724 seconds)
    (194/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.128696713 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.136448118 seconds)
    (196/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 1.981933986 seconds)
    (197/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.995120307 seconds)
    (198/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.257118906 seconds)
    (199/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.004421878 seconds)
    (200/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.001727036 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.994831061 seconds)
    (202/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.111843001 seconds)
    (203/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.12688439 seconds)
    (204/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 1.996471498 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.131029605 seconds)
    (206/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.143503491 seconds)
    (207/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.287923361 seconds)
    (208/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.095234455 seconds)
    (209/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.100237825 seconds)
    (210/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.185879217 seconds)
    (211/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.061706115 seconds)
    (212/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.995483439 seconds)
    (213/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.631012392 seconds)
    (214/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.665879118 seconds)
    (215/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.077340149 seconds)
    (216/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.119933249 seconds)
    (217/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.159678091 seconds)
    (218/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.101066571 seconds)
    (219/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.099537856 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.081031186 seconds)
    (221/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.00327291 seconds)
    (222/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.034268359 seconds)
    (223/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.141239224 seconds)
    (224/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.673270093 seconds)
  done (took 286.436359655 seconds)
done (took 287.339777794 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.040993505 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.170189054 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.99336285 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.993932927 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.038746589 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.856378499 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.039846043 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.001439131 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.997432428 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.996488873 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.857542057 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.010135909 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.006905805 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.028783944 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.108180039 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.002309196 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.994809942 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.996085379 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.035399608 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.055131702 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.038577936 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.039254886 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.009055488 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.993369766 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.042304594 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.041642831 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.001556217 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.993538888 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.994892856 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.036021295 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.990397789 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.001692294 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.046283887 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.048152614 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.038894483 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.997597587 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.038657879 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.172950018 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.032703334 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.031841186 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.00132441 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.046446516 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.007771038 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.007565687 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.047002019 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.009803291 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.043209056 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.120259342 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.990785582 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.838919973 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.048163826 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.05871285 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.002528449 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.849478855 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.008066486 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.121221465 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.998627936 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.045565264 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.000742203 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.040559543 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.111613838 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.0455296 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.05992243 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.044987068 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.002266745 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.012090582 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.998947343 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.058929509 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.99983717 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.042773628 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.041769796 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.005224024 seconds)
done (took 82.443897125 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.124650649 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 1.995509545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.159441065 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.997262041 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.160066597 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.146846054 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.995140468 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.9964182 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.996162753 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.821150815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.995837502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.996249013 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 1.994196025 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.995202046 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.133341844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.99785378 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.994989479 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.712596097 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.000220903 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.140192158 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 1.998482571 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.995316562 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.998667541 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.826109608 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 1.9970808 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 1.992256648 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.141573183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.999310466 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717545805 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 1.993003473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 1.996318937 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717365886 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.142911721 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.015752356 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.008966014 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.006273274 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.162944249 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.012621435 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.129897447 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.129199318 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.161022931 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.038239719 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 1.994230566 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 1.995964153 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.002880592 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.002547166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.998778575 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.026648395 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 1.997837378 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.998687311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.715895154 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.010779305 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.007410942 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.999263192 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.998179509 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.021050949 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.000223895 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.001829972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.144629258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.003006175 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.129220954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.829351911 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.823211541 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.00140955 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 1.996235363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.000439394 seconds)
  done (took 86.156563477 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.065278216 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.077321288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.09981312 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.013966879 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.053180652 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.10748817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.022970289 seconds)
  done (took 8.3645223 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.008514722 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.003339547 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.053561433 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.051873636 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.003683199 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.216018465 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.004792596 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.01289882 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.000002537 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.07995976 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.005658179 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.004612466 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.010009608 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 1.9978518 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.051027278 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.013553457 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.117368109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.005696966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.004464723 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.15755224 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.00018242 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.010022443 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.082349248 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.0156052 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.003603983 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.010257103 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.960580946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.003845837 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.00225855 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.003328384 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.002275609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.112851981 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.005390937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.000728658 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.003257448 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.163249254 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.005621395 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.002376505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.003766434 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 1.997045464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.00439572 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.005078671 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.003850053 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.002423699 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.005782995 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.028729679 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.006041881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.005948223 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.004361697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.005628381 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.084878501 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.005442166 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.002360307 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.002398369 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.084099796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.012265416 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.007453412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.003455977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.007059492 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.003630451 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.159295754 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.0545313 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.005391998 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.053748647 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.007158511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.008366005 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.005416627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.007946526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.098351227 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.006974241 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.054056452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.004783746 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.230956993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.030768341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.009020764 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.009861734 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.009350082 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.009022961 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.00313866 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.013635854 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.00449331 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.008359304 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.014607163 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.005197732 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.004383598 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.191460275 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.163190106 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.005700856 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.021264678 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.015374294 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.005904699 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.088080598 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.009751703 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.005715801 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.060255181 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.124410874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.086109309 seconds)
  done (took 106.00261422 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.020643037 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.022650334 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.011742033 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.036045613 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.010671389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.009182349 seconds)
  done (took 7.041192574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.012047114 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.009814107 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.00747365 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.009757807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.009938473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.010734903 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.008852186 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.011616754 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.012944171 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.010188608 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.010498537 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.010247627 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.011804055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.010425067 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.011818795 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.008822175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.009506768 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.005831031 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.009343692 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.009649192 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.006860049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.010570497 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.010163842 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.011403882 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.013364924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.009865765 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.030699408 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.008574201 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.010185442 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.017383457 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.024900199 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.011521374 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.0114458 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.01536395 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.013790455 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.012561675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.013737032 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.010648234 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.00728557 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.011825624 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.012916262 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.010310447 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.011179771 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.012658027 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.013194003 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.014453414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.015505577 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.03200576 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.011294445 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.011557973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.013012265 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.010218871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.011625445 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.013226982 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.011312764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.028948107 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.015493571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.012086665 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.011899945 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.013482626 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.012826234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.013236731 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.015466115 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.01624943 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.009399302 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.013073673 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.01319234 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.01599064 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.013859623 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.013869667 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.013836486 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.010371642 seconds)
  done (took 74.846614602 seconds)
done (took 283.330529926 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.028325792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.019733282 seconds)
  done (took 4.983964621 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.076963532 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.047058616 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.042637607 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.011438581 seconds)
  done (took 9.113831104 seconds)
done (took 15.033041939 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.006699414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.017780182 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.015746369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.015008888 seconds)
  done (took 8.989164466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.064409615 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.065793178 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.068027005 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.064715237 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.066197198 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.063703132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.039099591 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.039906741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.064590301 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.064478887 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.067441945 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.066212121 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.066256542 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.039166321 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.065833718 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.064916004 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.066414605 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.071385829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.040676578 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.064897272 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.015091746 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.066065768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.065182077 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.014601193 seconds)
  done (took 26.310838093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.508420207 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.085556864 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.168715831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.066640051 seconds)
  done (took 5.765477503 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.091898979 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.092504273 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.106896441 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.144512448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.156470406 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.106468833 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.041650546 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.035615291 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.023229234 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.092791935 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.14363196 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.08596429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.169700024 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.016117693 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.222456565 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.014855264 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.015485229 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.092354817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.145647279 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.15828301 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.01668446 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.094049108 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.09355774 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.085929869 seconds)
  done (took 27.183651232 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.022783925 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.029124115 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.01625254 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.031681282 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.015531533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.015742869 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.016285725 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.025381421 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.022551628 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.015396744 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.015268715 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.029003233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.01991044 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.015532094 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.023471939 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.016995526 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.022103365 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.017549412 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.016836879 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.022247152 seconds)
  done (took 21.349427422 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.009401667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.010459357 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.362162076 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.266261083 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.010736201 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.010565536 seconds)
  done (took 11.609114605 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.070570667 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.211106072 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.017716498 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.286561366 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.366771053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.019422822 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.019269028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.219707103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.456698957 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.417505638 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.07356369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.087544078 seconds)
  done (took 15.186686554 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.02005587 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.021437454 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.029925614 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.036129109 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.061016661 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.043554689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.024888718 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.010722344 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.070055612 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.087295968 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.044466283 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.062837143 seconds)
  done (took 17.453741852 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108307912 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014253296 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012026008 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067920793 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023678626 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856674012 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060852473 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690155605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.041404149 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288237416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022812704 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.124810785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.271827205 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014647256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040017529 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.85951656 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.255354091 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426672891 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018517781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01752726 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.059841598 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021210139 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027861508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.199762707 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028679106 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016959189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.279754439 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015939871 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.243104842 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.040794243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.02937835 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018215119 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.291747309 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601644607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.141337995 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.187498278 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040645874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029510098 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.03115857 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.028440959 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030906231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030591875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.029943965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017906566 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01793573 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017265842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707603038 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.050061278 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.01682339 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.01815101 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.222666934 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.125678959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.023776007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019146676 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103717372 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027935477 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.023147874 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.109717512 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611511054 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025929146 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041982772 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.030434072 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027152718 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032929013 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557553065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.027048921 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.024444033 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.025275009 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019570423 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018932879 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.046968793 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019930874 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.04339359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021150966 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648392573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030695868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032460837 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491921958 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033242699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.031139701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.252468176 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019811516 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020264098 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.020953786 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021840642 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623718405 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.041920534 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.006101143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.052896082 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.693764203 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.218283985 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.054013931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.052212936 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.245640066 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.006314162 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021485416 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.028615154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033877478 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045137355 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685045364 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04694179 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.026442533 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280704249 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.232540592 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031291906 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.893543671 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446755829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056660192 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.047626208 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031781698 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.203119402 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.532079156 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.040265006 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021558371 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05258281 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023858038 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663336786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045644948 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.135045982 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024055927 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274995336 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.72010858 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036264155 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.09295784 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028951107 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024110188 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027870865 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03674799 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024631108 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.187435082 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055679307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.046305173 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.026009854 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025260059 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.026487307 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037114939 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.038876632 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.249001171 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034637902 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31097961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025364303 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026799008 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026200601 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.24817248 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.023727708 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.374727312 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2877138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032013946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039311107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.048148322 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.047664481 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.130359949 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.05072707 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.034547408 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.294622395 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.031304246 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.031805072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032166267 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038365226 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033818054 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.034618662 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041360322 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54296538 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006458232 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034157585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916486359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.041321419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.095921719 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.03240282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.199270369 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.038936953 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046009635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.034591005 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.028952243 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.264590382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.039543586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.033633188 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.117944795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.439699006 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559996202 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.043501752 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.0296791 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.026719631 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.026460846 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028112479 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028109104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029237015 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.19959895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.051296354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036446095 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53780813 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030855337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.030288354 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.044836649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.043762204 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.035393311 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029850331 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.026958639 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052242286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041573867 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.064607687 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.175357469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.044415036 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.029016558 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.547347365 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.035842913 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028830296 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030699265 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.065162386 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033540107 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84433454 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30181921 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045709991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.23814697 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034437161 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.058511375 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.029264546 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040423948 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043730954 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.062439232 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.063814174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.042807379 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030038187 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04365009 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611421456 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683523191 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490150664 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034232058 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.042189523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056971483 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701400031 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057444722 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031084122 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235442897 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.720127936 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059120501 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451289179 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.058077602 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674489203 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.247287499 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275845688 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033446273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.054060847 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250499024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.256441548 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.067896524 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032530751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044650773 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.020272422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541237259 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062045347 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.125027767 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717121147 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070738064 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046084504 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.072226073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044955862 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377367804 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061213725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032989207 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03525284 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056896851 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853824684 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051450515 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03541364 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567966886 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039413809 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.459913798 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059124444 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.208738354 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.056338297 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.038152566 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.034433654 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.050897323 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.300297639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242175922 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036718416 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039278321 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508118351 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.906030815 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.041240838 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036460755 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676345638 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046556363 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280044417 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.050100643 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.052380703 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051198324 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03516894 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035969485 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.03338569 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041160057 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011579675 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451193249 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.038307569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055671427 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037994504 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046960347 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.289578167 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.050342003 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544902365 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266161142 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042146908 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.073502161 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.040074318 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036807929 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.03495249 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035524315 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036766379 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122265884 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285713492 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03651775 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.03406013 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092933993 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273009754 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035614859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035978281 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265306948 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.038144725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.040568941 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699637807 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.070857342 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03942959 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063608372 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03724497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.069369164 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.108999768 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.212279182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.062351205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.051223139 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373013357 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070613599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052047528 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.052766979 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.134236721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040927895 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.049001678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.835980303 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553021199 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687654505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554393465 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.247583637 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05284022 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040023704 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041056187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.202324647 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040819323 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315016301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039542573 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.044707959 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.064160138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039457086 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053649085 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.262314112 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316687783 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040419252 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040647418 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050561536 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.038641301 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.051871137 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.251872111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456566414 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518484895 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044145932 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041500038 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.725278812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343659946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042208741 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041965771 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041676122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.046312839 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056665289 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.058284272 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044604405 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.196646077 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.249485074 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637235615 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.079185066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.071583328 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.560487869 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041969988 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.322524951 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044557721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.217773774 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571295306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.665373652 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311022905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.113961415 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.217583739 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.050403958 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.205904437 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.05084059 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042886441 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044554906 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045305741 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.041050198 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.054417717 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562499622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310280516 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.048098761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.050313845 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.074573107 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.054261548 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.267367718 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659244662 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281400451 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.053212722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053989183 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043667688 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562037145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.252879005 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057661605 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.048397128 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.246058192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056474575 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.067777936 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.563447669 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.042487593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519281954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.01538048 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.068311672 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046314747 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674569597 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570680501 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.044775103 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478036924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046074617 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044924642 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331208722 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.051192544 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045178461 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33455979 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.04960532 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046362526 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233663654 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.565589873 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687531834 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.049717174 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059171691 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.062057021 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047226868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10176217 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07313514 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049161502 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.395880329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07443706 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048159178 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.058912112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.053342092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05740692 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.055907455 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047581789 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.054129591 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.070082112 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.056227156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060756637 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.151327669 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565248683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069300228 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.719809463 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.374886829 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.30312827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047904452 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.044610326 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.052750997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049618457 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049255612 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048819642 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051028947 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533485161 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.050695039 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.07149429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.053139136 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.049611411 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.260134667 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048587683 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237326369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06169485 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.075388402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.035913063 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050791834 seconds)
  done (took 807.713380185 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.064806856 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.055528407 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.074750589 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.110781922 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.080349722 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.097205438 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.122223815 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.091877833 seconds)
  done (took 17.673089997 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.049123751 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.071288933 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.060169146 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.070377038 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.056886514 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.464459256 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.082087557 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.06144264 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.068512188 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.063509949 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.064325686 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.039021722 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.074147717 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.060471144 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.056142134 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.073434775 seconds)
  done (took 27.39197491 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.641769044 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.354624787 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.171258547 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.108325234 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.097227741 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.061296456 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.067132469 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.062764035 seconds)
  done (took 22.542759379 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.061520431 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.063417893 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.062654165 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.063442608 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.064526783 seconds)
  done (took 6.29280343 seconds)
done (took 1016.396403651 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 2.038201686 seconds)
  done (took 3.014288307 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.617001317 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.60028375 seconds)
  done (took 4.197122889 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.338289751 seconds)
  done (took 2.31471962 seconds)
done (took 10.502931271 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.787820783 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.20964298 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.8366524 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.197901447 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.197673284 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.840324875 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.789635339 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.209487921 seconds)
  done (took 21.046356544 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.052866413 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.053848884 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.053266747 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.055124162 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.054712189 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.054883192 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.052975095 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.053508755 seconds)
  done (took 17.409089216 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.055702977 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.053972858 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.052227878 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.054873992 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.054276398 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.057862832 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.054777551 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.053506864 seconds)
  done (took 17.415866184 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 1.061376919 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 1.061381547 seconds)
  done (took 3.101744208 seconds)
done (took 59.952407143 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.06056513 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.499538061 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.099638808 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.063672842 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.089415899 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.084022886 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.252154444 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.097048049 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.25494353 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.079944041 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.100981518 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.055125723 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.717542525 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.201507144 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 1.834578043 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 1.93912516 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.781648632 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.072840536 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.575590251 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.310136313 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.092334462 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.056152942 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.84226189 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.80678557 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.054118689 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.137171636 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.146239917 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.260010741 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.205420352 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.130708912 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.509351009 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.071073926 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.061905221 seconds)
  done (took 52.524786708 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.062453055 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.177267255 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.064032257 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.063762922 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.182480512 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.063430312 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.062238498 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.063656624 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.064836769 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.064137016 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.064056715 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.065531548 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.067335173 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.110346165 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.188329748 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.07560782 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.064836129 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.177209459 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.063250517 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.057914231 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.107216112 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.063885037 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.066920161 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.10717557 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.064843561 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.064966865 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.179599387 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.066846574 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.062450957 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.180786176 seconds)
  done (took 33.751274965 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.065915793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.566655501 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.691766823 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.084511936 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.065095762 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.071820553 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.288960262 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.066023263 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.069937428 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.070269583 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.473448388 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.076116369 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.099141601 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.703958548 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.07881976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.066929157 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.066405583 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.068482921 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.578385921 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.090294449 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.307577884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.079601457 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.290819045 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.088600468 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.087642605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.068701307 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.073843762 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.836538972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.077060318 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.469739292 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.642467656 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.299545406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.776388675 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.704363896 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.654283125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.079232531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.067157241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.477163029 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.075600726 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.069772481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.291898632 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.078542362 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.692921945 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.735678821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.09515782 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.067211518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.835996735 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.479035884 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.271153566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.088900367 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.71261908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.083730604 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.070528322 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.069689337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.258666777 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.084641569 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.067660143 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.843126368 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.074767221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.29345237 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.084247134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.070656178 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.576991088 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.070994237 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.570560279 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.082217783 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.078894999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.088051692 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.694792731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.087560105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.743891021 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.088905058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.069460333 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.476229837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.581914958 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894194682 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.072769337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.581315838 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.812837418 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.292892478 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.087852711 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.812312508 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.302994537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.083388943 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.075067213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.073046532 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.072154367 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.149481502 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.292462724 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.686181788 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.752438856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.884684513 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.308030746 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.091344383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.073951419 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.857867025 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.083080949 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.073460039 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.690604773 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.758363106 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.100045626 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.081088536 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.745030747 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.101914736 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.299928072 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.087023278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.704012573 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.086147519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.150187579 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.072026497 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.080293229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.092744652 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.299041628 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.089298481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.074167488 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.729468239 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.511225249 seconds)
  done (took 153.285541876 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.070015153 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.066175248 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.067821716 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.066806414 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.067372926 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.074217128 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.066392313 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.066015991 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.07421739 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.066367808 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.067346445 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.077458038 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.074399233 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.06621016 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.066817872 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.066380406 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.066666678 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.080102316 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.068561531 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.06649187 seconds)
  done (took 38.378829671 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.073917876 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.522423883 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49978052 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.084992944 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.073078057 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.074752622 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.117917656 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.073389364 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.073094927 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.314467823 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.219704394 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.0884408 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.072865561 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.073955057 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486332954 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.074001806 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.314949604 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.530149752 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.08680094 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.521434238 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.074531319 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.077711415 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.074018281 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.521250825 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.321650352 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.299808805 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.126854099 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.520608541 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.079237126 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.074969542 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.519975897 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.078763621 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.076073672 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.511410391 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.091520915 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.090961951 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.073662325 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.121787973 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.12267804 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.317306523 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.601385103 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.313140599 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.100129732 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.235716846 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.08186029 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.06569753 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.525820484 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.102297929 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.066154506 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.077401447 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.081879577 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.492841067 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.10689677 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.493922568 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.102482114 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.079483665 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.529329567 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.503702214 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.518017315 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.219534176 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.092559476 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.303336995 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.088268873 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.528141165 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.106582103 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.079835158 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.080597881 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.215922691 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.544025416 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.314854638 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.328151027 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.327717117 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.091708985 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.124999446 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.090640346 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.375829054 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.133592624 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.460437083 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.331739729 seconds)
  done (took 98.463497547 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.307923636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.184418317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.419258873 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.639687492 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.073709655 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.18549511 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.170443937 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.302199951 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.052675228 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.178024457 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.599001042 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.154909864 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 1.761205619 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.149787271 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.158493071 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.216232018 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.405093517 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 1.981284779 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.683960845 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.587566137 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.078712379 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.175320682 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.605827333 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.258966842 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.093792757 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.611662805 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 1.885166839 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.657741862 seconds)
  done (took 43.575942993 seconds)
done (took 420.958307831 seconds)
SAVING RESULT...
DONE!
