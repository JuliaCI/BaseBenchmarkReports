cset: moving following pidspec: 16379
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.920717961 seconds)
loading group "string"... done (took 0.583428264 seconds)
loading group "linalg"... done (took 9.23480763 seconds)
loading group "parallel"... done (took 0.180537635 seconds)
loading group "find"... done (took 1.485823258 seconds)
loading group "tuple"... done (took 2.189718123 seconds)
loading group "dates"... done (took 1.459569342 seconds)
loading group "micro"... done (took 0.232742516 seconds)
loading group "io"... done (took 0.625056106 seconds)
loading group "scalar"... done (took 45.881319672 seconds)
loading group "sparse"... done (took 14.035570348 seconds)
loading group "broadcast"... done (took 1.124782443 seconds)
loading group "union"... done (took 12.531483799 seconds)
loading group "simd"... done (took 2.631283244 seconds)
loading group "random"... done (took 10.692720122 seconds)
loading group "problem"... done (took 1837.810686422 seconds)
loading group "array"... done (took 25.65128822 seconds)
loading group "misc"... done (took 1.116999367 seconds)
loading group "sort"... done (took 3.789918297 seconds)
loading group "collection"... done (took 18.83978212 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.033932515 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.845320812 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508457038 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126025307 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157949964 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.146145997 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.302181732 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158663081 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128607156 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084816798 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171754634 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360821644 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.467801732 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.934091399 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.082056507 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124934541 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084060114 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.723665835 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083220967 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127815562 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513055069 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.110253683 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116361798 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137444295 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18938365 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127753259 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161196051 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.09277948 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.727151215 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103916984 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185699374 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098145918 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159243489 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.233906108 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.092732587 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09175485 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.740389228 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181059137 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113346975 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101370664 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.747723516 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082007781 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193872318 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103461657 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10704538 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.190996637 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118279534 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080079557 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101393965 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089555343 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167761827 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.505499524 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104411325 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146097501 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.103637307 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.756516512 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098096958 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159160479 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139978242 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098736728 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.101796553 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104656792 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166491387 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112563436 seconds)
  done (took 20.274201756 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.136699514 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137578515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092325956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137396129 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138017132 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093977779 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082099329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091882824 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121563808 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181479222 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119895402 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138378136 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088734305 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095859722 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114840295 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243994644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103396956 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1178996 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09437372 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088294793 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137077901 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10746828 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091640453 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106978219 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166932108 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202739053 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109748631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12085735 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091090609 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097464617 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14031159 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158029039 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075368649 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091594708 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178636913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119395027 seconds)
  done (took 5.0451921 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196755073 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112587601 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185203565 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.162684247 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171959749 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141855776 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160614529 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128442983 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247960386 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.173248477 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178462748 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112874728 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109243956 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077499143 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093979558 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.1118295 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077876199 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.618720458 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.175221789 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165180584 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122296981 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099791962 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081200658 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.747381133 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09882615 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079953618 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099138022 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071523592 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170079322 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100224841 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.2624553 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116874426 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08781717 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132000972 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211010229 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115880446 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137750273 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099869889 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081172224 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222306213 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091322013 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093310719 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109336889 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132126109 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132190491 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09720404 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092238321 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.235068157 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084326529 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095846347 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101155987 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.063708801 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196928951 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097763564 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098133955 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.353544039 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116436583 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086492793 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099943919 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280883492 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133757544 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082958772 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077948911 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103207478 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093836264 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.768465676 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091203127 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.206167085 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093102048 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152378795 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096499341 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102242242 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084012247 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09916223 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098787738 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097173868 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079465076 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095226479 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079642419 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095547224 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084371333 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113795337 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098817698 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078160222 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158233992 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101008375 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114490229 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122495506 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083307152 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092873313 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112103288 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094548913 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080965948 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.14247201 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101370199 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111057493 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096934483 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126992966 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09793697 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181249052 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081533852 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123689021 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097331699 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112406597 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117445585 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09506121 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083175332 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094246632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079227805 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159108069 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07909252 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078729975 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097927835 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110364163 seconds)
  done (took 24.286412637 seconds)
done (took 50.23712053 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314699482 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199383233 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116886556 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176175512 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085740598 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197743979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168107682 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115687318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.193488701 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10014468 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.172396453 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097867218 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085692714 seconds)
  done (took 2.71572378 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10921718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117956177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079651612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107576467 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074126725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106071039 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089975767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123426807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090038236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09988805 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074453979 seconds)
  done (took 1.731162112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092314493 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112509204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0816181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104002207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074496728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087898446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104102672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111756546 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088868881 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10007986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074517935 seconds)
  done (took 1.691545186 seconds)
done (took 6.801484545 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.181670999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096969459 seconds)
  done (took 0.936648161 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103085997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116275293 seconds)
  done (took 0.875275135 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106851105 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094059999 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132400254 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110868396 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081031613 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093326356 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126098818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080587503 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078585644 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096114357 seconds)
  done (took 1.660394555 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086689072 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100929991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104414043 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118996017 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106999251 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082438517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099217478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083244762 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100476063 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078282895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102405414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11546086 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087017355 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115427026 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098708057 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086315669 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104251708 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083050451 seconds)
  done (took 2.4164558 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082427423 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081995071 seconds)
  done (took 0.827510295 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084065985 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094654026 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083997088 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098337931 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080310289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096281992 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079019454 seconds)
  done (took 1.281039514 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.501237854 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259799407 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330596819 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111576137 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.132548541 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.361019279 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132274757 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112220194 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109963294 seconds)
  done (took 2.755344525 seconds)
done (took 11.413695961 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.144800248 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.113921696 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.110593939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.140346354 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094221319 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.110700944 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127505834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.091678847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092458522 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.076072797 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.091642893 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.078507526 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158102939 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.076438105 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091838897 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.080261048 seconds)
  done (took 2.42945507 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207257498 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.248926667 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111761522 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.081426559 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099841142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079363985 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09606313 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082987832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093126545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089071401 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.094247663 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07922881 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105250649 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093508296 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079013255 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078465894 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104728817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093768459 seconds)
  done (took 2.628572607 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105112262 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.130014907 seconds)
  done (took 0.90007279 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11636583 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170632673 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282643297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.147702682 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106282064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115051557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14821628 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110838713 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178006511 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.112492218 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.097548056 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098972001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121814109 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.089017622 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.102624437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.083215788 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125047622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.103299702 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.086841252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100485697 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103647458 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100955388 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104310693 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.086762928 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.167798084 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.112861973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084324292 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101097576 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099865587 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08602762 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105291263 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112510352 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096729019 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169213443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08902527 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.165124314 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.091388354 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097958723 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.084813864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099441959 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102669542 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.088339209 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1142086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082641222 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100493375 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106938267 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084800549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100328615 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091337734 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108997404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106736323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.089099209 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164125494 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092519416 seconds)
  done (took 6.759476459 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801907998 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140786278 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09897679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.89846949 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130097988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112465993 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793577328 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103218294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243563339 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.800323948 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115695683 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.225295028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194528398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256871575 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.122171297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316855219 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.677557148 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112090047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110571759 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139988857 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104879882 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126447775 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101602815 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416492822 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10077541 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082829966 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.104325915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110367895 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149696957 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081302122 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102255316 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169699612 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27069014 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168561034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099383587 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.080224827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09780157 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.157563881 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249911832 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199537979 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16307123 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079370685 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097771435 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094956025 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11903928 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077937942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170818734 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163647011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.162237025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102683903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110115495 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091135476 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110460473 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150837654 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096075786 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31752109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305454082 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098703537 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10609671 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099755503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246090835 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09790541 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190360397 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125520394 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19400878 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.081060054 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770398644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15578121 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098105974 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090681855 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10667297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104332695 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092444916 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157116955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371677479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113048516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100879876 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081783175 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227141307 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082500209 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096917803 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154296682 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.082889975 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106709572 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11450389 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094522902 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177677191 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240187645 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113197624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090274781 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103663944 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112869936 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083881714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.203830067 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200765591 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146824023 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.221231909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094497139 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172687438 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155512616 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110598893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.161881458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106365371 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100253854 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111370808 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197902587 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132958555 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08216871 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10437847 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088107386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135651452 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102645153 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105064497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.159680387 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448122189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171624931 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080240036 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085849717 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107871315 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.151409491 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106762289 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246948592 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091475572 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.174389078 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089414631 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096560779 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090387601 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171308715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096053922 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108964069 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111340601 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090199026 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255707402 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187218744 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114651001 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221011 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.167526799 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092561882 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179963637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091109407 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15889773 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109019339 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111035494 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08340776 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765565677 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112806209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090073879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104475729 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182714423 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081327263 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100854079 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08175831 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096265385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77533788 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102168458 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07902594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103375891 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090617351 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10728834 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105610107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087623211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167734204 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198222825 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112144362 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107039597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081017786 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15052012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101306777 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081051419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099127914 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081611094 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108146157 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103755144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083945609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162239511 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165934972 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.202074943 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.514163324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098906917 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082567217 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213378551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080678334 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287441032 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106405857 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207641507 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159016019 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07866685 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321243941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175413164 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181106401 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085085955 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.162256918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096909256 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.087384735 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168089758 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.081746278 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107384813 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147777333 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117263212 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095603153 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.131737637 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099614705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219423269 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07800852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.178021658 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.083595331 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111293254 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296877503 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08144891 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120415025 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151901243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103398661 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0822239 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717537203 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082270802 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110912864 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108024264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187946627 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173706165 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089075597 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107701893 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111945911 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155770975 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203530208 seconds)
  done (took 41.530540371 seconds)
done (took 54.910025393 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282570306 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.244315955 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.296015901 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.199359841 seconds)
  done (took 1.83313479 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.148470749 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.080472158 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.078936022 seconds)
  done (took 0.997248046 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.454921227 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.346068753 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.323732728 seconds)
  done (took 1.817695553 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244287269 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.262241885 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.338056045 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413632354 seconds)
  done (took 2.048997998 seconds)
done (took 7.38369386 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.135982459 seconds)
    (2/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.215869316 seconds)
    (3/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.138152581 seconds)
    (4/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.230737102 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.292078159 seconds)
    (6/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.223384058 seconds)
    (7/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.157903758 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116914233 seconds)
    (9/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.265601875 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.083006987 seconds)
    (11/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181831488 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.124324571 seconds)
    (13/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196991735 seconds)
    (14/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077869039 seconds)
    (15/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.15572828 seconds)
    (16/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.184320622 seconds)
    (17/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.082401606 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.189624162 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.154310124 seconds)
    (20/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.220424836 seconds)
    (21/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067755317 seconds)
    (22/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.206793091 seconds)
    (23/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.188929702 seconds)
    (24/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.19926072 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095378874 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11262485 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13210517 seconds)
    (28/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.106383873 seconds)
    (29/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.092919686 seconds)
    (30/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.229042813 seconds)
    (31/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.220960779 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099959517 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.114411383 seconds)
    (34/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.149926738 seconds)
    (35/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214277373 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126309409 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.067056124 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.083873448 seconds)
    (39/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.166546311 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100848872 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13672482 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.115428054 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.145605566 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199941088 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.126791121 seconds)
    (46/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136371941 seconds)
    (47/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097862474 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.144743972 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099417278 seconds)
    (50/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10919886 seconds)
    (51/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106390545 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129756783 seconds)
    (53/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.085123773 seconds)
    (54/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175842844 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.0676686 seconds)
    (56/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.124058472 seconds)
    (57/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184114215 seconds)
    (58/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217678417 seconds)
    (59/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184782061 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086155919 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103552486 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08589587 seconds)
    (63/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.150713859 seconds)
    (64/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066464791 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103448368 seconds)
    (66/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182835484 seconds)
    (67/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079600288 seconds)
    (68/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153750463 seconds)
    (69/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075346979 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.177457109 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103720792 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127783384 seconds)
    (73/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097492632 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10274543 seconds)
    (75/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.125522788 seconds)
    (76/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188836747 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104651942 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09228107 seconds)
    (79/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.13807973 seconds)
    (80/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11651786 seconds)
    (81/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.190257542 seconds)
    (82/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096945641 seconds)
    (83/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099659897 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068062867 seconds)
    (85/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066794195 seconds)
    (86/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.085150469 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068135681 seconds)
    (88/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141185548 seconds)
    (89/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.098547194 seconds)
    (90/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178641012 seconds)
    (91/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084052481 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087528541 seconds)
    (93/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083705136 seconds)
    (94/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.093052736 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.110784381 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.109323986 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103463964 seconds)
    (98/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160657892 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.085757086 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.109952956 seconds)
    (101/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.106734979 seconds)
    (102/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112487667 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11146591 seconds)
    (104/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.087225008 seconds)
    (105/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185834933 seconds)
    (106/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174952286 seconds)
    (107/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.187609181 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086279436 seconds)
    (109/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184522145 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096269676 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.08403073 seconds)
    (112/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100280313 seconds)
    (113/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067115038 seconds)
    (114/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.135925821 seconds)
    (115/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086891736 seconds)
    (116/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.22106746 seconds)
    (117/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173542244 seconds)
    (118/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090309292 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094135499 seconds)
    (120/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.129035386 seconds)
    (121/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066509863 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096190419 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06891797 seconds)
    (124/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.188929576 seconds)
    (125/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084375217 seconds)
    (126/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.123139958 seconds)
    (127/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.137553282 seconds)
    (128/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170121312 seconds)
    (129/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067277764 seconds)
    (130/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066204001 seconds)
    (131/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108281714 seconds)
    (132/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066665356 seconds)
    (133/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170060829 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109186422 seconds)
    (135/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066052583 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084581456 seconds)
    (137/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.129066115 seconds)
    (138/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.116417863 seconds)
    (139/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.066291316 seconds)
    (140/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085097538 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085747601 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100771026 seconds)
    (143/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.075191165 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.124740716 seconds)
    (145/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.089378295 seconds)
    (146/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.091988031 seconds)
    (147/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171904223 seconds)
    (148/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068157425 seconds)
    (149/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.129715778 seconds)
    (150/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0769493 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09661326 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112558012 seconds)
    (153/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.092493887 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095950285 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103623682 seconds)
    (156/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.147429071 seconds)
    (157/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068141203 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066746382 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103425197 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09947317 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093459815 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.112118 seconds)
    (163/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066488551 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106328722 seconds)
    (165/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079920689 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099094176 seconds)
    (167/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.083219945 seconds)
    (168/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.122150701 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067250774 seconds)
    (170/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.097099375 seconds)
    (171/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068022048 seconds)
    (172/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.090668089 seconds)
    (173/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.083444077 seconds)
    (174/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098760661 seconds)
    (175/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.12985055 seconds)
    (176/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099516996 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086858258 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085240783 seconds)
    (179/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068160869 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108856858 seconds)
    (181/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067384433 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.085026194 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067381124 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101809092 seconds)
    (185/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068998245 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107882129 seconds)
    (187/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06855852 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.078591758 seconds)
    (189/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.08522305 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068122979 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096659809 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.082996767 seconds)
    (193/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100394246 seconds)
    (194/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068236228 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104423716 seconds)
    (196/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067522169 seconds)
    (197/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084258763 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068077222 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.110761294 seconds)
    (200/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.086467609 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117575086 seconds)
    (202/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067201266 seconds)
    (203/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101394562 seconds)
    (204/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.076530364 seconds)
    (205/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.083424916 seconds)
    (206/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068577919 seconds)
    (207/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082172042 seconds)
    (208/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100034489 seconds)
    (209/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.09876152 seconds)
    (210/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085713708 seconds)
    (211/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082827733 seconds)
    (212/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.133040593 seconds)
    (213/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.091542259 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124718637 seconds)
    (215/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.066110117 seconds)
    (216/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086684571 seconds)
    (217/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.084455674 seconds)
    (218/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105314443 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11297723 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087133258 seconds)
    (221/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084372421 seconds)
    (222/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078799335 seconds)
    (223/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067264993 seconds)
    (224/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.086266476 seconds)
  done (took 26.72208818 seconds)
done (took 27.419087966 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.37585296 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12416388 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10824815 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.091032966 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127918114 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.092761258 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110649506 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092551984 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.107617242 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099689841 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082163841 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.108448543 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.091201367 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.125558292 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091827102 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102052387 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082092034 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.10972551 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090617585 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.110700353 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126654584 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083804626 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109160688 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.083410212 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128190819 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0839934 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108552913 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.089986334 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.108194001 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.082003991 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108707016 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09963521 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092864788 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112077499 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082123964 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.102186623 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083024326 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09188231 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.083534051 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102313072 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.090706089 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.100817348 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092951528 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102559275 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085447389 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.100106317 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.081606617 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112253424 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.080983422 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109723871 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083805636 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114467122 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.099363038 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.082913623 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098051896 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085319177 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10950477 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082542177 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109383199 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082740949 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101602829 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082982716 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104461491 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082996991 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10138297 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085999342 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.101971412 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085505589 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.099614709 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085125312 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098943909 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085364652 seconds)
done (took 8.044046936 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091606623 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.155220641 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130539649 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.113673523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.138511645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.116102025 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.095425154 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124305013 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110036298 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107853106 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.127943608 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.121480914 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119246453 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.108117647 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115763848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086848237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110198974 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.095216497 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135116198 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124236305 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131340178 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090039826 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129264996 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121673453 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090163608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126870578 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090555054 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.105244942 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.088710509 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123860814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124274522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09030765 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107443655 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101943023 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115279307 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.106426044 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.099216411 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.105015108 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087634517 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105913887 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11744626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101934907 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105058226 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.097867885 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.105197658 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090760442 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.10900483 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.106609347 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092657023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.102868013 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092439966 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128243609 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.106670891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091346867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107817133 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091545757 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107851577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091369562 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108622807 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10770025 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088688149 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106736057 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.092595263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125521805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107831259 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091216464 seconds)
  done (took 7.879627205 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106720308 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13895628 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.115659195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.098732902 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112400905 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.079810067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.097893345 seconds)
  done (took 1.491022135 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083117822 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129450192 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114694154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13224789 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.12090998 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11932504 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132415505 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116411705 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105668335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110538444 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127210371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135837652 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.101347679 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.110680634 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.116258931 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101564271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117659733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.100812727 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123306699 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114865686 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106013397 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104336776 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113986053 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100564361 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104572562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101778665 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167227429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094224369 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100704783 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089077042 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10618803 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.171704397 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104168198 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.111704396 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.080219342 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129736414 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.121685193 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087226806 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125433975 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104447853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104776168 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.107331316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089992074 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107234888 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.089178046 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.115339006 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111326031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092051878 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.106814056 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110927813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112092782 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103512298 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.103495479 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086148791 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111925972 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106167302 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1130695 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.106269663 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11040906 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109582725 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.126244448 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.108521067 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.122403821 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.126919643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100295 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.122985895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.121817885 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.104458464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108467866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.106763057 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.127882314 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104423776 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09333802 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.118150557 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091384357 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.128186037 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.109524489 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107022692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113159516 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087541396 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103548173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09755897 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115983949 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08657287 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103782437 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100358853 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113112012 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.105511187 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08737487 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123629569 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087379678 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113059616 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112876197 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088284747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115944497 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109984826 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11322332 seconds)
  done (took 11.386067134 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088661256 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085902442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10990524 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.102265658 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.087160521 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084367046 seconds)
  done (took 1.309637804 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.168351429 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.090291586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.120334782 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.091634785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162219602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128545931 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13016783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093117593 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.12583368 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.119525827 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109650049 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.13033044 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.107843317 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095764049 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.129608659 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093740514 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131342798 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106350427 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1000055 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10716663 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09977136 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.112757472 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088589778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.124910263 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.111572001 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.093867255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111774819 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.099457378 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.118924034 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111598656 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094838321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.111332417 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090505449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112964787 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129935359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093292709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106460639 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095114194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111697641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.111995188 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111421494 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107349952 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.098353566 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.114754539 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111937377 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091416142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.114357739 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110888326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.112917867 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113387005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095216837 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.112118228 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.112366784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096469803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108999246 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093614751 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.114719201 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130679303 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095151823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110183438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089793264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.113495843 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111942034 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096435014 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109683951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095324226 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111933191 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110043704 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089576004 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.110626783 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09637793 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108623235 seconds)
  done (took 8.68521531 seconds)
done (took 31.484015364 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365451366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186478993 seconds)
  done (took 1.302702727 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.477494155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.558770153 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986869263 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152283051 seconds)
  done (took 2.929691239 seconds)
done (took 4.986846527 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094397872 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115873596 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.097780535 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.113004915 seconds)
  done (took 1.176134173 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098832667 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.110457238 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.095697168 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.109707655 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099812406 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.110087523 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091388555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116803032 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091480767 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.11265953 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.109876782 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092574751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.111922345 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.090592083 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.108423921 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.092746939 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.113246697 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091270775 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.110661146 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092198662 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.109844552 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.11054498 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094946734 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.110372715 seconds)
  done (took 3.235862711 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108599666 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106313885 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.091813374 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.105705736 seconds)
  done (took 1.174119285 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100734989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.124610433 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105124051 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.117406181 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125220481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105788406 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.107166018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087968065 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.108548697 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100026071 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.107864254 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.107536007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125121599 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101884938 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100828369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100384816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084972846 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.124310131 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098786756 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.118842501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08721864 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118188232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095349112 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.122943609 seconds)
  done (took 3.338592609 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.163131142 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120715436 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.130068016 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154872391 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.113197514 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.130522198 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.132150086 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.094952919 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.110265311 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.087423622 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.106177007 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161346742 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.092480638 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108595782 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.087254629 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113253436 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.094295752 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.11190986 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.107843949 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100382604 seconds)
  done (took 3.087724827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09509646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.105645881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.084287223 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.104974725 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.094832934 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108425589 seconds)
  done (took 1.363553617 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08435246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083088285 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102001275 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.082416341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106586519 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.082958293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100201283 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.083498539 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08232668 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102247664 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.082806471 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10085424 seconds)
  done (took 1.859702946 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202306923 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106793599 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.10731781 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088003399 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110855719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086092726 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.121223956 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086382219 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.160979367 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110086359 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.102236507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.158379759 seconds)
  done (took 2.20802489 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197209324 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092360892 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244838272 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344358404 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127358571 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153436406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270770719 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154252033 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176695888 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106480679 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202417823 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126250024 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142880734 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167290952 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129498924 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.172413277 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163539699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188719852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137235702 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193983508 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152367602 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155778725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169707468 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140908286 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12744922 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146122282 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.088859069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11691576 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161807961 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157643618 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160977823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137779126 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127059016 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188636002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201581103 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183942464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281304856 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12471085 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16693153 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175448338 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229437962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129543892 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182160147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142477388 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121382282 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168732889 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145039143 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.166749686 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100573035 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129947233 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190023576 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163551055 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169385996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106019441 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295233191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135786262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115012183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168094835 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196687423 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18016354 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155155741 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09214416 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193495561 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168239782 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113899538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154279659 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116924726 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163443027 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184021589 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164055344 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15322088 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192128619 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121124871 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13142945 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158301292 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141799765 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168849499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148413748 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.110137947 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118090611 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124855897 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116389101 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15403911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112923504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191839549 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124482313 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.171365123 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193121532 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147577079 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1487019 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152613114 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155104937 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135413157 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087766244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134556172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15036799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145171835 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119143926 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127609916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133187202 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.115095388 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141350233 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092803126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147801432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123858758 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154873423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151037882 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.097617246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153595062 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138061294 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147140552 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15827424 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173962783 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120154426 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101336556 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181571689 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146657409 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125681669 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163944356 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175567842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.154237778 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12475874 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15702267 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183600679 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130690717 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178174104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111358976 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123081949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137761299 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147239495 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145453859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158314513 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097942116 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.140703667 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180516653 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.117605419 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104778651 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180911892 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09598192 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116165772 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112086941 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125745738 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131315503 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1374339 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106958367 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14300654 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1482435 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142971589 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148373435 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130559699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180855256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121776118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.128155401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135880822 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.107650983 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166779801 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173807475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09736478 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194528336 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15574484 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184909546 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151483157 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118667982 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168941147 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098393659 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.109003544 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154951808 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149007417 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149193883 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.170641043 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180240077 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156037512 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.142459808 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138581484 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155286628 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164631941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146108447 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112756928 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151014308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152698219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.112139586 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090640678 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115859735 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129025384 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098218789 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121994622 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168305711 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152153183 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195586673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129609547 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127627035 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170956425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.115501763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153093745 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160693045 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105609478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194332562 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171097939 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15439277 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111326073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158503182 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.109991339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093706564 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121894353 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156912663 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122886066 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102294804 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132176376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171777038 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16218421 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138007048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211101115 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157226352 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18314545 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.089531281 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.154273366 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159613031 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146179234 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16450764 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103017549 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147877175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167690557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132499463 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179923839 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15029561 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15631892 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186624826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14556952 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122429284 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138183207 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15525589 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107390594 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152731114 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135491634 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123448192 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121100441 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.125479565 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115884485 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167186262 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132548137 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167356877 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147213599 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162216174 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115160497 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111166989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149272522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135523996 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085202929 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179223804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176357262 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132772022 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146810412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163401261 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09838701 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.293900162 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175609139 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194194603 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104965423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130678854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151831253 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149882166 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152270923 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171869418 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132512114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170451465 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147174477 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113080847 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124622474 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136647862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117856256 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139718872 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.12257473 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145262578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110412214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192588999 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111223879 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148099831 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152034582 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.136744139 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14410561 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107003793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211140195 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125545958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164683898 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145628355 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156079212 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176614665 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114934162 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09539312 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.116525899 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171809123 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121359543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125990851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.439561317 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186769568 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150502736 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156874247 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127758207 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091666102 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148756428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138446481 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187163376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130602049 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.125960518 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179333988 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139450826 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099108176 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153809328 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264946974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132254212 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162644923 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107888942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254706701 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09580189 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121903325 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150206592 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160427368 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.099043579 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165501859 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153120231 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134267428 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150150119 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10576585 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19934198 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19639257 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159148668 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163861622 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132904314 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147557283 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151387055 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165100024 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109894151 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.136017405 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152868171 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171848724 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.173210562 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12217608 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151953208 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152321954 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126512713 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186612563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101344084 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174889708 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120922793 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154600509 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128946372 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09116565 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146069992 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.172812976 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122028003 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165046151 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146704315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120082263 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094101435 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14063499 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148446069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132661099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.097194505 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165587492 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.118154168 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151704821 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170048492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097962013 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144450592 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136253159 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098712646 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130906481 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135200972 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123611333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.133560677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169303362 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120463666 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164852446 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160877949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151947629 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147752203 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133248129 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.629826552 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.117894102 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171316372 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136799621 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176656323 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138025384 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154091497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128203797 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13813915 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156776119 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13934824 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209995067 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15521084 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147897527 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099077209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133686465 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135262769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097963444 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140500862 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150661065 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130915816 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.103546589 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14561346 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135644419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136279679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106213471 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195653787 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115416567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169687255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172196016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129207519 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155615001 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163252657 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118923505 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149781832 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16132105 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131452408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117231947 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.12066084 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.125091101 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169292826 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092837648 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149706171 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149352738 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151780457 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150980226 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102108191 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149287285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131819803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152505963 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094146761 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14353007 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147390832 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121587514 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.094915316 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145669917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14665116 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148273762 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093057322 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.156886499 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17047027 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.113692947 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100608143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262982196 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1451732 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181077173 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141063084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125591452 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110381018 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144373527 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142174651 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149115264 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.118892533 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099329897 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.122025353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164671341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144261539 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1461453 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150360388 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148931409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176273739 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134910224 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252956363 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128081226 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122438097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120342535 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.118623007 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107229837 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12446679 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135420543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178949979 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167713873 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143185922 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132958313 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094811556 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.113866986 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09934572 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152290086 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143700395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147020125 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130763659 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085915526 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132817081 seconds)
  done (took 71.434543283 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145781367 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132097913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.136373606 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.303461332 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157812485 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245204331 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.195686661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217066385 seconds)
  done (took 2.384815859 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.190668704 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.124855844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.132173318 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.11482945 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.171720873 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.324927835 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128741075 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113543941 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.172245829 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.123856898 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.111507563 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561254962 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113529301 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.112886246 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.082548478 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112758482 seconds)
  done (took 3.537711112 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.88057207 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.479408674 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.323259475 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.218514281 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.205736083 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.142582006 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.642874191 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.170967061 seconds)
  done (took 10.919727298 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.123891908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.132862157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.246761642 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16189492 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149233445 seconds)
  done (took 1.674701269 seconds)
done (took 108.162418701 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.104044803 seconds)
  done (took 0.95362418 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.457177623 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075325086 seconds)
  done (took 1.423944824 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.09889746 seconds)
  done (took 0.963280244 seconds)
done (took 4.201368192 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 1.013534368 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.434048048 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024465722 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.391285694 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.414074775 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.983655973 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013589742 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.374794797 seconds)
  done (took 6.500173645 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.098465797 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.159081952 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115115177 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.122349219 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.126090817 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.092214807 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.128981373 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.087863288 seconds)
  done (took 1.793371445 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 0.173121526 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 0.164325827 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152363921 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 0.10124726 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 0.128783339 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 0.132801084 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106683002 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 0.111413308 seconds)
  done (took 1.934225614 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 0.095595149 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 0.125820318 seconds)
  done (took 1.083002841 seconds)
done (took 12.17225923 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.108251703 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.122189909 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135863904 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.120678525 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143794714 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.086503635 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.098239745 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.109408994 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.095779695 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.125154411 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.085804986 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.110328969 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101364064 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.115312152 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.10239313 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.118962531 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.107142369 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.12532098 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.08733594 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120467219 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087476233 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.129414917 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.092523644 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11037388 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.111945688 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127030344 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.125326296 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092193835 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.090655582 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11209026 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.101323739 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.116157468 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087969196 seconds)
  done (took 4.500572751 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.114328949 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153192781 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.085152683 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.10731798 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.148056153 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.085126021 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.135713743 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.084706621 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.106993755 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.085605383 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.084259336 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.134752468 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.139582889 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116936258 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.15565113 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.142885951 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.111304544 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.145549205 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.130380072 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12276451 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.136740394 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.084625595 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.141647698 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147658936 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.084351223 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.10797025 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.127454222 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.138119833 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151126182 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117390002 seconds)
  done (took 4.496361067 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095850514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.125519209 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113377069 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181490943 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150604398 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102725215 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.123251022 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.106107786 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138684163 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086604593 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.121475924 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14216048 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105029561 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120913181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093497286 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.125188746 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.107632934 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.112095172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.094545527 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129448883 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105509344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.123736596 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102388826 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120547631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.086615106 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11940006 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.0945751 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.123733574 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11628126 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097290784 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113486984 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092053937 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113576656 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.098653646 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113730944 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095595324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.132929531 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096858566 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127101635 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146254537 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098632551 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11531575 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109561265 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158304778 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090042429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.118147519 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098822203 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.121617935 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.086820729 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130112973 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10259631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111869012 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126463987 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.088240892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109692902 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.09596241 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111927243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.090815334 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.119139654 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092255342 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.131167399 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096781919 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118829944 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.090145016 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.117306876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.087459628 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109744227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092432206 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.135049218 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093077117 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142988158 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088490212 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.116825379 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095659163 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.117366366 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120179681 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088554126 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094812237 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119784079 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115427244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.097211568 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113415207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092472203 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128508102 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.103546273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119027348 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093628613 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.118287535 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091267749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.112865974 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102313473 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11408677 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.091535486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.120552644 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.088199104 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.114144114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094807429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.116412094 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086447575 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131210718 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092348922 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111280868 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105482898 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11145753 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091452681 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121215333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.100902021 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111545777 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093558149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.118784989 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087353735 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.11789327 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092226353 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112036069 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10046389 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123625192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.115932282 seconds)
  done (took 13.763430157 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231323907 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.210007941 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181699952 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.287552044 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134602291 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1142347 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.206702722 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.162740142 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112482352 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.150908116 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165853551 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171177469 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.087847817 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144524106 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.20946672 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292463271 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144119908 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.129437443 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15180792 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133841521 seconds)
  done (took 4.300703167 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110704732 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151136321 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140454538 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114630937 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114572811 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101480202 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113652073 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127334687 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089839599 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.118492641 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.087895122 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121381573 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091713102 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.115853808 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106919815 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.129105684 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118008864 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.095424807 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129496775 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09396253 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.113098672 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13392476 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097918182 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141127147 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.119984991 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104216554 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.109911112 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095722411 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.108339386 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.08870732 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116388373 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.103547964 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.118970985 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089368226 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.117316447 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089248404 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.108708995 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090386542 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.114143535 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.092385047 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128070424 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091803426 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.112673614 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088303957 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.12004922 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084970167 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.116347528 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.095248597 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116912323 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.097731071 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.118664739 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093085693 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120304423 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10054679 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.109642692 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098972414 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124781326 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117134032 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095599214 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11168519 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087465002 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092159161 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.111319406 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.116877399 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094750457 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.129649512 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098013602 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112910385 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094835878 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116483992 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092970213 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130835031 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.132234599 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087900898 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.110038856 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111650861 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.109749914 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077727104 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.098057479 seconds)
  done (took 9.463419328 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117142116 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.113177224 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.126170984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149874934 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10316195 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122092947 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.089733224 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134038514 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095518704 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.123018146 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095692885 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128323567 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.139800495 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102665237 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113035663 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104438232 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.117457774 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.129716642 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.132826515 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143594298 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099621957 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118090015 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.102095446 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124130961 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.12130964 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126343289 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146901711 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.095094656 seconds)
  done (took 4.21094583 seconds)
done (took 41.59519226 seconds)
RUNNING BENCHMARKS...
(1/13) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.003292074 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.147656054 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.213318048 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.969591591 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 1.953653466 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 1.966699431 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.94620726 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 1.967293644 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.957488044 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.942334542 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.91944002 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.232017683 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.950268401 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.332357453 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.941189712 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 1.969779936 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.94715918 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.178829571 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.949280501 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 1.987553326 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.936756864 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.946239211 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 1.974187111 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 1.971616202 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.053053118 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 1.949052115 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 1.971180377 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.944241356 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.141962003 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 1.969587712 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 1.989820288 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.953196959 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 1.991562242 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.960069052 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.045858107 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.982375505 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.146349219 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 1.93959173 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.941206078 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 1.952306253 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.132168954 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.302861108 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.955098654 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.938991217 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.956595754 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 1.967484537 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.942165738 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.628792379 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 1.956825272 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.94455254 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 1.973941194 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.330467275 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.956700355 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 1.952094695 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 1.96827048 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.186315607 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 1.958273758 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 1.967393149 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 1.980091087 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 1.966145076 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 1.950575799 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 1.951687378 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 1.97345228 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.950932832 seconds)
  done (took 126.911088077 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.950309922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.955587087 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.954632709 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.014486231 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 1.956320679 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.955808559 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.95155532 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.951527783 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.957901148 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.954851536 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.958269806 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.958813349 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.954892539 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.920522068 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.953244072 seconds)
    (16/36) benchmarking "herk!"...
    done (took 1.973206845 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.957716758 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.95709274 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.960435945 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.951075351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.950137052 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.95725569 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.970102963 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.957791869 seconds)
    (25/36) benchmarking "symm"...
    done (took 1.983667372 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.031115487 seconds)
    (27/36) benchmarking "syrk"...
    done (took 1.997387277 seconds)
    (28/36) benchmarking "trsm"...
    done (took 1.960446989 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.960812309 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.953888047 seconds)
    (31/36) benchmarking "gemm"...
    done (took 1.977058254 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.974842078 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.458918167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.8118734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 1.960777747 seconds)
    (36/36) benchmarking "trmm"...
    done (took 1.978356042 seconds)
  done (took 70.919869516 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.953067226 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.955019626 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.950365243 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.952236687 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.980064634 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.955315199 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.422608239 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.429086455 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.672691686 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.968205159 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.998358388 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.146099551 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.958876867 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.041900497 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.966929085 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.954804801 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.953244311 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.970699956 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.979266067 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.959275253 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.954226705 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.421959905 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.971268279 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.048122873 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.12953272 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.967500963 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.980697133 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.348401134 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.954960952 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.981271535 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.271778547 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.995275014 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.952219879 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.235487452 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.897053239 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.065322215 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.95669246 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.980715494 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.958839202 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.224967237 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.955441271 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.956423802 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.958508452 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5349423 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.960622389 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.426384767 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.962653061 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.803474932 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.956140106 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.956044799 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.956586041 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.69935536 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.448664382 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.977390006 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.956573783 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.959057069 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.956751055 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.95679606 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.983618001 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.683085147 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.04968891 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.958547135 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.960518246 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.984448997 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.958252551 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.019071871 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.975663821 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.143953351 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.018995891 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.06428136 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.429336852 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.963959738 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.049053419 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.071357214 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.957546582 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.958782364 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.957450724 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.958476917 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.957425037 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.063627827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.958575957 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.305592946 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116895459 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.973176827 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.001920439 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.055788985 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.958107922 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.241060567 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.964441856 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.957800266 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.592706849 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.049959056 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.959174723 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.957713021 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.958424005 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.307797441 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.429705462 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.094920904 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.96546786 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.099349282 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.964901192 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.317659304 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.413791932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544816164 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.965005718 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.065915541 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.117350863 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.975073644 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.960409688 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.999510197 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.966797008 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.015776073 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.965492971 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.351672422 seconds)
  done (took 334.478919404 seconds)
done (took 533.197344115 seconds)
(2/13) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.12968648 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.128854509 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.014820392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.13251926 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.990701487 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.149579066 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.116024871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.985672074 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.056541688 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.030590651 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.060309221 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.007707931 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.99853679 seconds)
  done (took 14.694851207 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.198236149 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961943679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.038279776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.181845235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.001511757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.208480655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.234326507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96221339 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.107748222 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.97460608 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.974644471 seconds)
  done (took 14.738237561 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.204189246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962146356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.026278579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.194912843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.003021629 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.202280018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.241194667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.964641408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.123712656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.97668841 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.975883718 seconds)
  done (took 14.770273906 seconds)
done (took 45.096714538 seconds)
(3/13) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.962644706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.968059061 seconds)
  done (took 4.826289604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.032030484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.032737541 seconds)
  done (took 2.963054604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.971330033 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.971018818 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.973676156 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.971626311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.970810505 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.971908303 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.97115518 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.969679044 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.971361544 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.972427975 seconds)
  done (took 10.610825008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.971694808 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.971861071 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.96782396 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.971689175 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.972169586 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.968889499 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.971224883 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.971409852 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.971329737 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.969919521 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.97239285 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.969133919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.971567315 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.968672466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.969994677 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.968630389 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.969312413 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.969670206 seconds)
  done (took 18.364635116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.985387736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.992374506 seconds)
  done (took 2.876224948 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.109686068 seconds)
    (2/7) benchmarking "second"...
    done (took 1.01220992 seconds)
    (3/7) benchmarking "month"...
    done (took 1.08791078 seconds)
    (4/7) benchmarking "year"...
    done (took 1.077250056 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.010870825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.989598625 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.012393948 seconds)
  done (took 8.19758247 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.97419756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.175656627 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.278673399 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.53720562 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.974105271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.017270502 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.837054234 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.018467265 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.007949277 seconds)
  done (took 11.719015741 seconds)
done (took 60.453890581 seconds)
(4/13) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.137409097 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.089925939 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.971291461 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 1.9844997 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.973312702 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 1.996976969 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 1.988382488 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.973876295 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.974493371 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.974605096 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.973722601 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.161148063 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 1.965619376 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.973428569 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.971800758 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.068943506 seconds)
  done (took 21.080723167 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.998348844 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.979233528 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.073201724 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.994821024 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.998228433 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.130468074 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.030650172 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.978462022 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.115837985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.995833074 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.971754171 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.002282356 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.97586558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.929289113 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.0012033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.132236286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.190994508 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.978181912 seconds)
  done (took 22.377081416 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.33828704 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 1.985325199 seconds)
  done (took 4.221426322 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.996904401 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.976816635 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.979168912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.977536248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.968878159 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.985953289 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.977159263 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 1.973004651 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.968273656 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.085893508 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.984607492 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.98876587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.991449209 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.980047178 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.976534966 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.017208531 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.123265791 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.975078683 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.975017584 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.983882358 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.977954313 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.06255482 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.01262458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.983329099 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.080592486 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.974633647 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.986243171 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.985816974 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.112592196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.978407029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.977826395 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.977219287 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.980094229 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.833181263 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.381630546 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.984296195 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.009748395 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.982166996 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.971466655 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.123500152 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.976313346 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.980888694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.971284281 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.382615747 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.118596914 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.085080823 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.98462654 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.000163771 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.981271829 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.039955498 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.977094396 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.980221465 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.021235251 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.744054154 seconds)
  done (took 65.41004333 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.975212681 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.973612674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.151560421 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.992147512 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972837114 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978168734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.976046457 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.205373005 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.002758371 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971999673 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.279893722 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.490151143 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.998391438 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.030045735 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.832451365 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.037935656 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975455632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.98345019 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.990101483 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 1.976374155 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.482003146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979186866 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971203639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.104090117 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.00718969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.446133472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978328903 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.976497412 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.979962883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 1.969592983 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.444317962 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.982913972 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.028233457 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.974425791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.220384616 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.306431961 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.272987588 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 1.978382745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 1.991475356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.976187283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.983939084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.420302368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.279805244 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.975153591 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.975351861 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.444891929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.972280851 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 1.98621084 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.982864642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.218472787 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97548473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.979845004 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988187445 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.980283801 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 1.972778996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.98011406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.0472558 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.437912472 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973624871 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978873195 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.02327278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.978630741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.981248552 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978931468 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.989458634 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.279609876 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.125746905 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.983436 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.280182392 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.436387012 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.984720068 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.52051865 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.988744829 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.006374726 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.188763462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976264627 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.979499152 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.443441233 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.997795843 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.974907888 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.274555358 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.98365995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.2839309 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994804477 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983949877 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.506941977 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.988442963 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.057503909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98028087 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982693503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.992142536 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979694988 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.231253617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.031185297 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.978598026 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 1.977718898 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 1.988987382 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977010148 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.980519233 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.984163389 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.505394803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.998910852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.978006688 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.981743884 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977878303 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.982075887 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.977825543 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.979172121 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.246476841 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.979987192 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 1.987115124 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.980652093 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.977136638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.986640711 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.125397973 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 1.985200779 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.242198917 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.988742018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979213745 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.992913349 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977249414 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.034408397 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979063154 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.984778183 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.795829157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.237461295 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000799958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 1.994510723 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.97924869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981615889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984438726 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993791571 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.010315747 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.982959425 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.718568857 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.034977425 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 1.983868504 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.98149715 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 1.991769199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981409985 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.9922542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.982334701 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.266451107 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.23456841 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.134331916 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981828864 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.982370282 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.687650362 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.032927264 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.161821361 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.002531841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.981524844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.228547892 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.203326051 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.98416412 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 1.983610533 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 1.982135424 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.238197139 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.993963284 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.276703757 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.481175955 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.999634407 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.983530403 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721865337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.659964874 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.987414286 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 1.983723033 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.285394028 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 1.99732043 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.981695851 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.982479062 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.984161891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99808543 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.996966282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.992294167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.984034423 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 1.983981781 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.03207815 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.172921578 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.99974244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.99187251 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.440707007 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.989980111 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984312968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.996013907 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.984603135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.985008008 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.040986687 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 1.985988648 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.020248134 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 1.985194484 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.986807606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.464043076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.988026993 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.992233227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.173964372 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.630957449 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.004544392 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986660303 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.002913048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.873191567 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.496018779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.028688288 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.241567104 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 1.996478822 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.022363537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986396538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.013957451 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.468076582 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989689326 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.001323974 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.586355097 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.002227389 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.525690516 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 1.983459774 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98530812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.535802628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.000210095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 1.988473865 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.993003205 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985716671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.291461501 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 1.989098228 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.004252918 seconds)
  done (took 417.25269248 seconds)
done (took 531.241894605 seconds)
(5/13) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.985855766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.994031405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.979924787 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.992903208 seconds)
  done (took 8.869140862 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.995142459 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.992046881 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.991968724 seconds)
  done (took 3.897420978 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.987464841 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.993044248 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.992650999 seconds)
  done (took 6.891287385 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.16354316 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.00789303 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.26337196 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.013793749 seconds)
  done (took 7.367906335 seconds)
done (took 27.942464107 seconds)
(6/13) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.062981189 seconds)
    (2/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.172197758 seconds)
    (3/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.012035209 seconds)
    (4/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.046553127 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.167031315 seconds)
    (6/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.788220756 seconds)
    (7/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.170008217 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.029144678 seconds)
    (9/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.103265577 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.007025682 seconds)
    (11/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.152506238 seconds)
    (12/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.176550538 seconds)
    (13/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 1.981002897 seconds)
    (14/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.073455193 seconds)
    (15/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.00608449 seconds)
    (16/224) benchmarking ("map", abs, BigInt, false)...
    done (took 1.991639332 seconds)
    (17/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.007723026 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.014384599 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 1.98981489 seconds)
    (20/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 1.987410073 seconds)
    (21/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.104807751 seconds)
    (22/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.062587257 seconds)
    (23/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 1.991411745 seconds)
    (24/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.720509056 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.17304343 seconds)
    (26/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.007035035 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.00482441 seconds)
    (28/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.179282663 seconds)
    (29/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.122234982 seconds)
    (30/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.634892861 seconds)
    (31/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.638973698 seconds)
    (32/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.003243865 seconds)
    (33/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 1.989374677 seconds)
    (34/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.078855499 seconds)
    (35/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.085494383 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.01628945 seconds)
    (37/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.038040635 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 1.981494722 seconds)
    (39/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 1.981520279 seconds)
    (40/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.000407288 seconds)
    (41/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.035596463 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.013899972 seconds)
    (43/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.128122002 seconds)
    (44/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.631117338 seconds)
    (45/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.117384645 seconds)
    (46/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.080511491 seconds)
    (47/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.015014748 seconds)
    (48/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.071976037 seconds)
    (49/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.998456438 seconds)
    (50/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.046807297 seconds)
    (51/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.066460358 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.072042336 seconds)
    (53/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.006753873 seconds)
    (54/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.639371914 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.013807701 seconds)
    (56/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.015687057 seconds)
    (57/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 1.994548483 seconds)
    (58/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.077802393 seconds)
    (59/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.730402208 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.100487792 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.043690601 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.030548615 seconds)
    (63/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.076706438 seconds)
    (64/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.137304979 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.070869401 seconds)
    (66/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 1.991912388 seconds)
    (67/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.062243806 seconds)
    (68/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 1.981801859 seconds)
    (69/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.120692923 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.080654136 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.006892467 seconds)
    (72/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.107777964 seconds)
    (73/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.00573345 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.043405073 seconds)
    (75/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.053723307 seconds)
    (76/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.132556321 seconds)
    (77/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.008206859 seconds)
    (78/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.040255853 seconds)
    (79/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.030911357 seconds)
    (80/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.020349149 seconds)
    (81/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.014763661 seconds)
    (82/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.148680422 seconds)
    (83/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.026689699 seconds)
    (84/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.107989394 seconds)
    (85/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 1.990486126 seconds)
    (86/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 1.993587691 seconds)
    (87/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 1.990986762 seconds)
    (88/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.095986171 seconds)
    (89/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.295502289 seconds)
    (90/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.729165715 seconds)
    (91/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.65130949 seconds)
    (92/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.067876828 seconds)
    (93/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.646469279 seconds)
    (94/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.077798385 seconds)
    (95/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.023410518 seconds)
    (96/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.095465732 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.086956355 seconds)
    (98/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.157069239 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.088604787 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.029383551 seconds)
    (101/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.019421821 seconds)
    (102/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.00518715 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.04035377 seconds)
    (104/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.013944219 seconds)
    (105/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.104130888 seconds)
    (106/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.131544816 seconds)
    (107/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.08585338 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.134134519 seconds)
    (109/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.684321468 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.077986134 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.011194315 seconds)
    (112/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.14519922 seconds)
    (113/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.810567549 seconds)
    (114/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.015871947 seconds)
    (115/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 1.997368812 seconds)
    (116/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.087929721 seconds)
    (117/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.112961335 seconds)
    (118/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.215058941 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.0115091 seconds)
    (120/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.319310607 seconds)
    (121/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 1.988402067 seconds)
    (122/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.061815581 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.643203002 seconds)
    (124/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.82569042 seconds)
    (125/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.138191016 seconds)
    (126/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.023575624 seconds)
    (127/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.058562586 seconds)
    (128/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.110503788 seconds)
    (129/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.137470134 seconds)
    (130/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.149451196 seconds)
    (131/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.276199809 seconds)
    (132/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.105581548 seconds)
    (133/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.078174703 seconds)
    (134/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.010767781 seconds)
    (135/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.117782373 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.209752219 seconds)
    (137/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.122688388 seconds)
    (138/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.1988156 seconds)
    (139/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.058396358 seconds)
    (140/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 1.996373366 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.050610262 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.014650784 seconds)
    (143/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.124704042 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.044644247 seconds)
    (145/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.108299267 seconds)
    (146/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.1407482 seconds)
    (147/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.104906321 seconds)
    (148/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.290632386 seconds)
    (149/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.028060332 seconds)
    (150/224) benchmarking ("map", abs, BigInt, true)...
    done (took 1.988758266 seconds)
    (151/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.08147481 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.093044682 seconds)
    (153/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.050279292 seconds)
    (154/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.081361898 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.057015127 seconds)
    (156/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.042968684 seconds)
    (157/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.090499136 seconds)
    (158/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.009898181 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.06761991 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.001399007 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.08317014 seconds)
    (162/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.092872575 seconds)
    (163/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.727686143 seconds)
    (164/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.18369145 seconds)
    (165/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.040576821 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.00889464 seconds)
    (167/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.013153397 seconds)
    (168/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 1.998379352 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.729432266 seconds)
    (170/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.129445322 seconds)
    (171/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.078832153 seconds)
    (172/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.044964817 seconds)
    (173/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.016037454 seconds)
    (174/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.008999483 seconds)
    (175/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.04586878 seconds)
    (176/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.018111881 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.148114731 seconds)
    (178/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.836708972 seconds)
    (179/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.035310723 seconds)
    (180/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.016025733 seconds)
    (181/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.649667392 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.686414111 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.733823636 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.115406958 seconds)
    (185/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.058774681 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.013441192 seconds)
    (187/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.0446346 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.036601343 seconds)
    (189/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.022342758 seconds)
    (190/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 1.989498408 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.081269337 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.018025414 seconds)
    (193/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.016149618 seconds)
    (194/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.731087375 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.066442738 seconds)
    (196/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.133726848 seconds)
    (197/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.172459921 seconds)
    (198/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.13177353 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.055789398 seconds)
    (200/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.010699291 seconds)
    (201/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.010564901 seconds)
    (202/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.80727083 seconds)
    (203/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.020894945 seconds)
    (204/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.125675724 seconds)
    (205/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.034113732 seconds)
    (206/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.689134824 seconds)
    (207/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.015149681 seconds)
    (208/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.013480336 seconds)
    (209/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.101507002 seconds)
    (210/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.082267102 seconds)
    (211/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.018076767 seconds)
    (212/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.078947363 seconds)
    (213/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.185997213 seconds)
    (214/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.183854561 seconds)
    (215/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.049292655 seconds)
    (216/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.114624356 seconds)
    (217/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.013322157 seconds)
    (218/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.002567103 seconds)
    (219/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.189210669 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.09532277 seconds)
    (221/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.73364808 seconds)
    (222/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.872150508 seconds)
    (223/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.745471328 seconds)
    (224/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.007613978 seconds)
  done (took 290.936454128 seconds)
done (took 291.853394018 seconds)
(7/13) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.069295972 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.187462997 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.012535974 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.011677893 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.056318755 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.91458831 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.048510883 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.022021553 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.015853943 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.017204969 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.914913435 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.020608621 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.028266046 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.048492513 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.129176059 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.023036966 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.015218577 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.016954858 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.056592094 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.074091417 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.058028942 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.057773262 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.028836044 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.013753787 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.061197959 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.063101273 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.022469996 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.006887461 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.015217194 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.057047145 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.007877334 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.022041341 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.064011544 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.065592296 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.059361296 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.016883344 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.057870562 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.189077155 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.050575308 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.048687979 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.017989238 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.064428146 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.027053252 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.027103092 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.064728203 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.027325932 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.061342681 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.136011923 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.004621975 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.903150867 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.063935873 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.07764482 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.019470485 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.904799591 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.015402247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.144609415 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.018359072 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.062929153 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.019513649 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.057590925 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.129725374 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.062267299 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.078047947 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.063387099 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.017233758 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.027967619 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.018401377 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.074346741 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.016441027 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.061103952 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.061001756 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.023361072 seconds)
done (took 83.982412101 seconds)
(8/13) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.144680108 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.01398983 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.176421585 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.015908333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.18035233 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.163957418 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.014603969 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.014584489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.014384706 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.835718601 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.014423028 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.013122046 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.015188033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.013794655 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.150130405 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.017509447 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.014607773 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.725848376 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.01808984 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.163839927 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.016316716 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.015193628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.017429846 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.846368022 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.017247506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.012046837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.16191262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.018635352 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.736568503 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.012759214 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.015148583 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.737677924 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.164397149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.035336564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.02705354 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.02522308 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.182120115 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.032581471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.147512734 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.148736902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.177455853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.057394124 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.013945619 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.015129516 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.019953395 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.019676562 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.016607569 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.044932534 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.016177392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.015371008 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.728724565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.028836741 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.026409057 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.016964605 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.017276322 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.038462926 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.018348007 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.020789843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.167193836 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.01995644 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.146746324 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.848382317 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.835694273 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.019111109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.016146679 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.01924586 seconds)
  done (took 87.396196802 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.08591705 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.095937033 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.121908133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.0324679 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.072369916 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.127632635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.033848862 seconds)
  done (took 8.510714789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.02680697 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.021137593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.069928961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.069172425 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.021930207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.234593262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.020789248 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.031588761 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.018559377 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.097155457 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.022031389 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.021240024 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.027414235 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.017731733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.06948314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.032087209 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.135781668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.021698295 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.021606267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.176863357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.018478181 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.027910392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.098771473 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.034126949 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.023236351 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.02832351 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.973165668 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.021183362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.020683864 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.023426773 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.019390576 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.12968338 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.021917401 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.017109146 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.019235792 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.181267494 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.019982815 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.020197457 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.021049598 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.022215273 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.023092518 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.021698762 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.022218149 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.019428268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.020878241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.044252341 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.023230277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.022073942 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.022016768 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.023175197 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.099215157 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.022884393 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.020182178 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.020898083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.100022156 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.03108979 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.026002844 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.021889144 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.024557173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.021100093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.176705643 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.070903073 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.023647045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.07001028 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.023468274 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.02545039 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.022759799 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.023627037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.114484561 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.023012406 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.071326128 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.020841088 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.249792658 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.049134075 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.027219967 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.026264169 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.025979068 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.023624915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.021497207 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.031274927 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.021270813 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.026593977 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.029353606 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.022853651 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.022144378 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.206283651 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.18109501 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.021723143 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.037314473 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.031698814 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.023111472 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.100726406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.025340801 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.023309502 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.077195794 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.140411976 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.101850083 seconds)
  done (took 107.689040436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.038461183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.038377653 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.029200991 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.053389008 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.02695646 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.027161623 seconds)
  done (took 7.159288371 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.027407742 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.026543206 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.024509398 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.025778433 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.025800759 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.027024558 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.027058262 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.029737353 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.029053191 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.025363313 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.026287941 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.027667637 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.028918788 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.027522383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.028928257 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.027887664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.028067264 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.026581654 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.027241685 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.027251621 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.026433864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.02880084 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.027836897 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.028973532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.032106303 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.028634295 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.048856776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.028807811 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.029103205 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.037056178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.045290531 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.029687832 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.028973338 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.035407103 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.032787412 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.030108383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.032508899 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.028308198 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.02801772 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.029660386 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.030821546 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.030638412 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.030712798 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.03113505 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.031592739 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.034502858 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.033838873 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.051195063 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.030809959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.031415458 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.031618089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.028601357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.030742565 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.032157207 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.031276355 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.047572352 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.033849438 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.030964266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.03113197 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.032646937 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.030897888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.031345636 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.033102655 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.03420414 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.027440389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.031541059 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.033212814 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.034477442 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.032233004 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.032695117 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.031786617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.028360858 seconds)
  done (took 76.179211588 seconds)
done (took 287.870374918 seconds)
(9/13) benchmarking "problem"...
  (1/2) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.052519986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.038758386 seconds)
  done (took 5.041542514 seconds)
  (2/2) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.08630152 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.023461371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.037826234 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.028377899 seconds)
  done (took 9.128621106 seconds)
done (took 15.121305883 seconds)
(10/13) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.023868005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.025844763 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.025170811 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.023948448 seconds)
  done (took 9.050543547 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.083922929 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.082858856 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.083938296 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.083037612 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.083940949 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.083131067 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.057117848 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.057498844 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.083224327 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.082286843 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.085368897 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.083658049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.084637152 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.058225293 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.083906824 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.086871851 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.083974083 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.084180419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.059533611 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.083858517 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.033437158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.084613072 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.083683965 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.033770533 seconds)
  done (took 26.763908781 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.526975172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.104120125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.185905751 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.085559354 seconds)
  done (took 5.855417575 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.110948334 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.111455475 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.125683305 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.16159141 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.17601483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.125033127 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.05959492 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.055035886 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.040823287 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.113053025 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.162393564 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.100999595 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.187836922 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.034525964 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.239821047 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.033657577 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.034506396 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.113304762 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.163660653 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.175562903 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.0343941 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.112633943 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.112512543 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.101855134 seconds)
  done (took 27.641022177 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.041839287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.048397103 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.033400836 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.049312352 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.034579687 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.034866285 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.033792624 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.040713335 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.032641265 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.034375227 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.033671993 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.048019953 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.038231422 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.032766224 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.042538394 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.035557926 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.040660562 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.037469418 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.034056048 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.042538696 seconds)
  done (took 21.723635749 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.028299165 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.027672102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.381064322 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.288345658 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.029978735 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.029635086 seconds)
  done (took 11.740550885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.09518218 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.241977642 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.042510514 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.337133589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.419129618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.038624988 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.038083039 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.255327649 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.517649913 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.47783013 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.089748903 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.100893413 seconds)
  done (took 15.610264454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.039948241 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.038936571 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.043454811 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.054326578 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.083569978 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.054080462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.043615718 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.030317633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.088873207 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.102424288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.056714147 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.0845344 seconds)
  done (took 17.67958076 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.12843444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031974539 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036367344 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097620628 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037389048 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88174756 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077698717 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.692112656 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.052212077 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305521581 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04343673 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.134996159 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.290098616 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032025669 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036861106 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.935824817 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.268846304 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479769236 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04061067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04379893 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.07018375 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033977048 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.044925133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.224118183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039181769 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034129731 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.294167863 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033692515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277744389 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.055393474 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.044554096 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034971647 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307927925 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642196045 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.15298666 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.217602439 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058103752 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041722389 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.021488467 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.040367733 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05061156 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042711967 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.046571919 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035294986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.03512991 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034982114 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709361818 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.056621371 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.033319436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033687509 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.254982751 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.142431462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.040946894 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03526432 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073852617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043484841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.04099066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.126127991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623364919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036220449 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056429461 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.043551633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052474148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042435536 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628652694 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.052123063 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.041357095 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.04139793 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038345572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.048461512 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.060375239 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03740764 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.060020656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036306697 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749554951 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046438953 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052714367 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550515205 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045709367 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.043606276 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27262774 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038251003 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038331926 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.036812132 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037837549 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68450578 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.055466733 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.030276261 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.065479516 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.69693969 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.239425382 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.06613299 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.070597314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.264570569 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.025302252 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039375891 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.040483467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064139526 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.062496974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701232602 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054676933 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.045130079 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300343334 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.251114042 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052490801 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.95735738 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474457902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055258814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.062971367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039575076 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.249956404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.587351594 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.064662435 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051085314 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.065034055 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041163331 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72442151 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04973981 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.149168781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054620976 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29813903 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.77966357 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049321588 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.110687547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046428961 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.043071017 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042602746 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051609439 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042623995 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.217377776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064261132 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.070989688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.042242524 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041345544 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.045444887 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047212808 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.051434473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.267550939 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043649548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322987499 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042015755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043208889 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043034869 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.268365511 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.045214674 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.380623141 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307815455 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054320869 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060559197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.058983953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.06180639 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.147796172 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.064614368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.054175474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.309562387 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.048693502 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.047533072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043158046 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050202175 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050100308 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.050876556 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053104303 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588732977 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021217924 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051736824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938958485 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.057757153 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.112208254 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.051563152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.229958163 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.053923318 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057091418 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.051023258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.043302458 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292835549 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.055198555 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.050692872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.123591029 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.4704289 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603635899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.064812684 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.046093354 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.042273279 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.043343047 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04531737 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045198083 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.046185724 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.230981409 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.061933771 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06259773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594857702 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053222126 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052302882 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.053808143 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.059352091 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.053489401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047094114 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.044797437 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066030994 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06566529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.065732232 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.192068176 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.062101501 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046394053 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.566370195 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.053414287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046729807 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047490546 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.082976822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054197341 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816874706 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311226345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048506117 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282832294 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058774283 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.062348299 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.045725712 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049042541 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050783429 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.068147031 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.057233904 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.058633256 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05188489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050073581 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628538857 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790906531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539953189 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050633138 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.064940292 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054823038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.715563335 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064991858 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048989478 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.262965308 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.728745719 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064400163 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480666631 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.071919049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734716998 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273138518 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288964232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050330835 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.067336889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273036793 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.26611239 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.084315882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052698359 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056261169 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.036061587 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563455225 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065566856 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.132010776 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718428045 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067583923 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052596042 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.062217654 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054451614 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412927529 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070951549 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050068293 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052399397 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05649295 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820542937 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057583344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051576833 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61136121 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059411837 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.482338396 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067384566 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.237597277 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.064066668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.05547502 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.048771467 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.054260878 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.316777382 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273680689 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060567801 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054430078 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552165259 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.932643687 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.058670984 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050257469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734155683 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069262938 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306493812 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.058353967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.05751099 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060695691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051000485 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052948631 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.049536079 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061094292 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024078179 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503912085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.071548803 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055641059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06240148 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059693478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.312286488 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.068334538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60054316 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290803242 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065856794 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.080400334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.057020925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056771789 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.04425854 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052198009 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055188537 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074703234 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.28331462 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066410809 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.044730404 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059489323 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.272622585 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052740302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064146396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273639584 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.051020455 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.066355548 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796620839 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.09159524 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052763137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062587908 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.063879082 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.07757046 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.125489916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241665189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.066249217 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.064879736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412801456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07377583 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07473601 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.069680918 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.152054778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056014963 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.076747433 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.836877484 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607871153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78962017 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613552888 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284241544 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062012428 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066142027 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056174881 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.220028267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057517725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329395919 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056831832 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.062665908 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.079911421 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059673784 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064576648 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272359987 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333904594 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057424908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064995679 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061600797 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.056465017 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.06700765 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.268976772 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512652599 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581618401 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062724715 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057254421 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738172404 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347143183 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059682526 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057968976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057581365 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.065070591 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058464241 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.071043232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060656857 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.209654851 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280870741 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671261836 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.085297811 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.086681086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.575551725 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059302066 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.319735322 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056500512 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.247915279 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611485447 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.725349515 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3313691 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.131309707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.248369527 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.060246884 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.221745985 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.067906655 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065503467 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061504608 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061543163 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.059154479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.071126069 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616744746 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332667922 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.066130665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.057805928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.09554119 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.070203162 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.284763391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715057498 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.288440483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.070372007 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065781736 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061916289 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615743354 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290614797 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067615132 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.065168385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273143447 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063561612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.084504317 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.578843142 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.058350087 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575317359 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.04006427 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.084210107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062194703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729644894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622579868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.07279584 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523025865 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067804387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067463913 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340179967 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.066688152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063218055 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34180428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.065892006 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064321261 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.254989441 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.61255855 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759334839 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.078230937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067781235 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.069167681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063234771 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121425035 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084121421 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064372318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.439102125 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083206547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064098722 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.076611258 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.061784263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072395778 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.06560262 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064323696 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.071017059 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.068334409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.067808926 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.068033484 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.159820419 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585964196 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091134787 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.743583663 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.390615837 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.322554572 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068112922 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.055322374 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.067991178 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063935551 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064580572 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070875011 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582958273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.071193731 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.080709905 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.068240236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.066969106 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278040977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067184492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26136922 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066792879 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.085658083 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.051347934 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065792003 seconds)
  done (took 817.036585622 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.097418952 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.078008096 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.082090389 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.113820244 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.109154115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.148711803 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.112268016 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.151117221 seconds)
  done (took 17.882312055 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.076417557 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.080539958 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.076389794 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.079838557 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.078386199 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.4965787 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.084833272 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.076589649 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.082967853 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.071164397 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.072526375 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.051517157 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.080102733 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.079230674 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.060749569 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.083645725 seconds)
  done (took 27.622911622 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.838151777 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.11088657 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.527405048 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.138551401 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.078129531 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.06966552 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.180324302 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.082456678 seconds)
  done (took 23.016604536 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.079192317 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.079858238 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.080933726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.082053022 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.08055192 seconds)
  done (took 6.395652856 seconds)
done (took 1028.970696756 seconds)
(11/13) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 2.056538967 seconds)
  done (took 3.048270003 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.677990989 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.640848054 seconds)
  done (took 4.311679957 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.364067037 seconds)
  done (took 2.355499516 seconds)
done (took 10.707871627 seconds)
(12/13) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.852047946 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.224855446 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.831806843 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.213346659 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.212516654 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.829383176 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.850982372 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.223598068 seconds)
  done (took 21.229529539 seconds)
  (2/4) benchmarking "quicksort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.071241458 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.069449041 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.068889942 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.069681702 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.072217774 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.070088998 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.069446396 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.069161092 seconds)
  done (took 17.551134574 seconds)
  (3/4) benchmarking "mergesort"...
    (1/8) benchmarking ("sortperm forwards", "random")...
    done (took 2.068831579 seconds)
    (2/8) benchmarking ("sort forwards", "random")...
    done (took 2.069091269 seconds)
    (3/8) benchmarking ("sortperm! reverse", "random")...
    done (took 2.072485132 seconds)
    (4/8) benchmarking ("sort! reverse", "random")...
    done (took 2.071006043 seconds)
    (5/8) benchmarking ("sort reverse", "random")...
    done (took 2.069493689 seconds)
    (6/8) benchmarking ("sortperm reverse", "random")...
    done (took 2.070383458 seconds)
    (7/8) benchmarking ("sortperm! forwards", "random")...
    done (took 2.069419152 seconds)
    (8/8) benchmarking ("sort! forwards", "random")...
    done (took 2.070413163 seconds)
  done (took 17.554800543 seconds)
  (4/4) benchmarking "issorted"...
    (1/2) benchmarking ("forwards", "random")...
    done (took 1.075519918 seconds)
    (2/2) benchmarking ("reverse", "random")...
    done (took 1.078637074 seconds)
  done (took 3.146663202 seconds)
done (took 60.47533989 seconds)
(13/13) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.069100854 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.538311807 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.115765923 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.072916591 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.096893103 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.098082764 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.279563001 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.113279698 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.278539266 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.0882141 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.115718127 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.07355829 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.781974559 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.219102326 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 1.888380941 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 1.987302288 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.865542075 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.08947302 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.606924597 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.333983626 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.101209439 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.071565455 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.872302519 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 1.882749883 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.065914108 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.14938062 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.170560095 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.284946489 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.227684117 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.153662122 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.559043857 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.082978539 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.070411861 seconds)
  done (took 53.399550744 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.078225567 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.192855043 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.076661389 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.080689388 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.198501448 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.079554924 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.078255095 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.078701012 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.078687676 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.079580843 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.078661218 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.081200794 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.080638673 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.124618895 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.203257757 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.090437214 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.077747598 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.193064137 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.079387751 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.071652174 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.122818428 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.082340419 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.080694672 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.125756491 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.080570473 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.080236944 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.197944338 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.081493197 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.075388254 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.192300609 seconds)
  done (took 34.217418961 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.080168135 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623759892 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.742855671 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.091612865 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.081916325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.084661035 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.328732919 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.086207679 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.085512404 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.085167179 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.548323521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.089862634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.113646709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.756417269 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.084166753 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.081424949 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.081846422 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.082632811 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.630296546 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.091826223 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.342782228 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.083415101 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.325876991 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.093615075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.10260987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.084544349 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.088015858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.888085951 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.083954137 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.546839842 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.706618183 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.331320015 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.831317096 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.750067496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.711066535 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.088352274 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.083792835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547522895 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.084986494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.083584309 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.32967986 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.087102066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.750121099 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.755712292 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.100396539 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.083597457 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.89603819 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.550367849 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.298470258 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.097601329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.771542225 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.092555123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.087000831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.087319553 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.293450321 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.090654224 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.086647129 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.919225911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.093990027 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.332365523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.091234174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.086082198 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.633890587 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.089295579 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.631384519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.091873562 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.094216229 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.103493713 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.757644946 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.094519667 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.778143244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.105150614 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.085780934 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.551155704 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.634725564 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950838872 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.088986363 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.640767049 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879627193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.334160293 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.094428802 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.880898351 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.341231929 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.094332141 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.087780215 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.089336294 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.088157964 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.165960627 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.330775933 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.704997028 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.772473494 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.940402518 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.340938262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.09931989 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.088116701 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.922958346 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.092107019 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.088123842 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.750515596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.780119787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.107210786 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.097159059 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.786720355 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.110082668 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.33971212 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.09928846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.765296042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.094346594 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.167210367 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.089275722 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.096427425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.108528103 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.339334089 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.100308958 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.090334577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.761392181 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.588111628 seconds)
  done (took 156.732310964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.080749174 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.083984605 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.084665165 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.098784384 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.082462951 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.090147817 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.082686318 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.08264195 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.088918828 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.081947048 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.083456872 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.091565495 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.090650402 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.081966251 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.09038114 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.082398423 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.082725709 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.096616375 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.084481471 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.082608479 seconds)
  done (took 38.728862764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.090702391 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.571258249 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.547380713 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.095100303 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.088892793 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.091804248 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.138366933 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.089656816 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.08791556 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.353995308 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.240992218 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.111015084 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.088691507 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.087960544 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.547102254 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.085343826 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.357978968 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.588334731 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.096212632 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.585451381 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.08548034 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.093308993 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.090792885 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.585539132 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.363935498 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.344013106 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.145133631 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.587097387 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.09285211 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.089537178 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.587159829 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.097050966 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.093141957 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.578034722 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.110701614 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.104807137 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.090190575 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.141784871 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.142835309 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.356668607 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.657911836 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.342658954 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.108215627 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.261282346 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.09306009 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.081138267 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.589779136 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.113055652 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.082495533 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.093332736 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.097479505 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.551342729 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.114654122 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.550494652 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.110289612 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.093580117 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.592224533 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.556453627 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.571191 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.243694795 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.111786314 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.339734567 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.095634869 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.594967557 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.112886111 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.095114086 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.095113954 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.240733069 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.611338904 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.345441987 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.365067822 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.365346775 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.100253819 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.143719626 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.107240707 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.418812589 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.146054401 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.498261592 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.364294154 seconds)
  done (took 100.789834222 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.33510161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.196578002 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.462189961 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.67585651 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.093485593 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.203930055 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.192226194 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.333378641 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.094607697 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.170534511 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.676154726 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.177874546 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 1.791012163 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.155132502 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.180242019 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.237045349 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.45450493 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.032953346 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.706466811 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.659362172 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.093378003 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.192322943 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.628390979 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.30025497 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.098652935 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.606120972 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 1.949317692 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.707865212 seconds)
  done (took 44.416162674 seconds)
done (took 429.276461776 seconds)
SAVING RESULT...
DONE!
