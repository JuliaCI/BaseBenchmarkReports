cset: moving following pidspec: 20977
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.910416026 seconds)
loading group "string"... done (took 0.561270046 seconds)
loading group "linalg"... done (took 9.178749231 seconds)
loading group "parallel"... done (took 0.178665529 seconds)
loading group "find"... done (took 1.495840101 seconds)
loading group "tuple"... done (took 2.164736071 seconds)
loading group "dates"... done (took 1.458819891 seconds)
loading group "micro"... done (took 0.230777781 seconds)
loading group "io"... done (took 0.639286967 seconds)
loading group "scalar"... done (took 46.086171893 seconds)
loading group "sparse"... done (took 14.182055424 seconds)
loading group "broadcast"... done (took 1.229112101 seconds)
loading group "union"... done (took 15.654290984 seconds)
loading group "simd"... done (took 5.605072451 seconds)
loading group "random"... done (took 10.846499973 seconds)
loading group "problem"... done (took 2.238778866 seconds)
loading group "array"... done (took 26.967349544 seconds)
loading group "misc"... done (took 1.156034818 seconds)
loading group "sort"... done (took 3.859008052 seconds)
loading group "collection"... done (took 22.706984194 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.678825032 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137655978 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.156935313 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.201189124 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209003804 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147153161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170394173 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.57262781 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.045201608 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225126899 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151044999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.564238362 seconds)
done (took 5.983362288 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241520879 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.445954975 seconds)
    (2/2) benchmarking "String"...
    done (took 0.134984274 seconds)
  done (took 1.250059489 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079349325 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179413818 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096238274 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113076848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112846958 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113700605 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110925479 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096574516 seconds)
  done (took 1.496145455 seconds)
done (took 3.745992775 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502490482 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.862128871 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.500248087 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14069182 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.165193637 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.159209404 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335384949 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.175302364 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132544376 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.123993683 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.18662483 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.350386142 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.527639736 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962508398 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.11904126 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132939357 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.08857356 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700569572 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085442216 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151883609 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.550778145 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.120107593 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.132742481 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142458979 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.206318637 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122032616 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.184144129 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.121165338 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675113807 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106900162 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.191349537 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.104929126 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171240796 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.264701594 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.10201166 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09726472 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67977408 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192161063 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116019188 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097559313 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673096433 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08547471 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.214890445 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.111244098 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.118130742 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19543138 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118523446 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079936607 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105077489 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104309338 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160630094 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448688016 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107635611 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.148372671 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110031079 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684734635 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098151892 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15550627 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142582944 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099403648 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09960813 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116730697 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158415251 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114305981 seconds)
  done (took 19.948902499 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.122486577 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145158831 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09827077 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.146100663 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145221369 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098547364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085183998 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098807249 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133979895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.191158871 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138893947 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134768358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09451694 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082275488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12456082 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.257188379 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125547331 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.112707628 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101539547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096826752 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147264146 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113339698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098430488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.119027854 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175480194 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211492624 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126661519 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127932772 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083849663 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12143006 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146554729 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.170527034 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.080340597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098114664 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190616043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124668609 seconds)
  done (took 5.357723326 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203124197 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122795799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.200992576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.182707844 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149611642 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186860838 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119876824 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.26238677 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.317261788 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190493111 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129518003 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098366336 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097225531 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081980519 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098009359 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.838416332 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191566754 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159931449 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132746805 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108275806 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087747358 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384629193 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106845016 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08424609 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104489769 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074031733 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1974084 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087131807 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.36587788 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122361933 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109197597 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132502868 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20037678 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133707777 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129528644 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104292128 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098359734 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224172279 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111413862 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079565682 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124048174 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13331855 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11917304 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101863805 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112280177 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.234249578 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099913086 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122625933 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.118795039 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.205515244 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.152284066 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084319739 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.402308801 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104380361 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114787643 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.085860596 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.326329777 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140656003 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.103176546 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.136705693 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082347952 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108664833 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082328746 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.424558228 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115678134 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.991876546 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085047457 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.180391779 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10720952 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112082439 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089369851 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105969773 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123924394 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084892602 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099873189 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084669504 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098644987 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08908544 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121872487 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10618104 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083182395 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163759053 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108042086 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123084229 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129402174 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09367689 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100985739 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117344374 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101685166 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086703854 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154127955 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112137227 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122028197 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103635911 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13055549 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102086361 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.213512407 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084211424 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102155021 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113915739 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107101482 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133428729 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122597962 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083115586 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106484725 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104087398 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085668513 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09949443 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084153691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166419271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085896004 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082736814 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10584516 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.118179895 seconds)
  done (took 24.782608087 seconds)
done (took 50.762111651 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.446609236 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097648805 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11455869 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120125503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120195704 seconds)
  done (took 1.65119775 seconds)
done (took 2.381380652 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.381605444 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193617942 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123939126 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.203762726 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106931888 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.207667534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184065933 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122603785 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216824256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10288423 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192767344 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10294069 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106300305 seconds)
  done (took 3.000719135 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094543837 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118779845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081985776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116118483 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078037891 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115290911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096361305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.139977806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094426795 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106823598 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078768413 seconds)
  done (took 1.841123805 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090744948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117055101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083712984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112381034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077670031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112762964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094517831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122207257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095239092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107940038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078383813 seconds)
  done (took 1.821125861 seconds)
done (took 7.383112013 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.092843126 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.545705773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120827419 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172537575 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.366009956 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.223053753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.544651245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139651379 seconds)
  done (took 12.141130447 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.132295452 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100237242 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100612629 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086687276 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104576508 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087965516 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101893436 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084922634 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102573377 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084760685 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103200894 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08518631 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103399207 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086425347 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102801153 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083910644 seconds)
  done (took 2.340301233 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117961416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120123871 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107245555 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11340801 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08896845 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108599709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090799957 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107335018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088412372 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10539686 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112132794 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094893392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110066222 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.103817908 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091244201 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115121267 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088101647 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107348219 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107774532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091427087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.113584522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.088594026 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109906212 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111480563 seconds)
  done (took 3.34922689 seconds)
done (took 18.560063138 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.169863025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084833389 seconds)
  done (took 0.982155864 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102522845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120769863 seconds)
  done (took 0.957082535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106509917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097409547 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137736688 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118326548 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08556444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101193115 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133359276 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.085504796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101231919 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085296874 seconds)
  done (took 1.789025004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084472249 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101316945 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093112882 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123698547 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112765737 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086572949 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105869684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088025247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107195528 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082324717 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108591816 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11999514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091350766 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120985246 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106635089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091194219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111461115 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105757089 seconds)
  done (took 2.579473848 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080781115 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083088751 seconds)
  done (took 0.900805894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08357492 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09647442 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086707213 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103384345 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082369354 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098758785 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082798212 seconds)
  done (took 1.372440348 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.545471486 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.245440694 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348647228 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1187335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14240433 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386583468 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.161412387 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100422604 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117992997 seconds)
  done (took 2.951930147 seconds)
done (took 12.266553381 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091198187 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.19096256 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.677755392 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119483718 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.079171815 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162579174 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.274583675 seconds)
done (took 2.335456552 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354291798 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125666841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089541707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082637992 seconds)
  done (took 1.386818144 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079657984 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102359009 seconds)
  done (took 0.926858296 seconds)
done (took 3.063269866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078967387 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129985526 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079177912 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096736205 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081318567 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09789105 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079624417 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099433788 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082695421 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.08101246 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099315204 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081227978 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095706741 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079471199 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097800617 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078769694 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095499021 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079282345 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098295446 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08013008 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079010404 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098411558 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079039803 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096927341 seconds)
  done (took 2.920902223 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099715197 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100188058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08782886 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10570705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104279147 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088233638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104966433 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082651859 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105998191 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08503747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103541294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102622549 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085764047 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104229422 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084785384 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104303826 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088546569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100180294 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084162762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104202541 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104929464 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08374412 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103812193 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088074426 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10382033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086675057 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102664888 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083085769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106616897 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103532468 seconds)
  done (took 3.6386703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087629541 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076006498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093493779 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106188178 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077460504 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081125385 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093302888 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077358375 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098996919 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079693949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100422314 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080391318 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097939873 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081772183 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098894655 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086858752 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117227462 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080906191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097543407 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080398699 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.104319734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080095834 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100571955 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080613106 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080741972 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096868062 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080712724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.098020763 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080666672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098018554 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08554922 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.104569315 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079480491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.111656024 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087367857 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097083367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.089185217 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09863252 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080917603 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097821292 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080093611 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097337252 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080136617 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109520726 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083618692 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098253194 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080142829 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081708342 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099054531 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083446621 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097971978 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079961326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099966456 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081695979 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10357774 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08002594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09946696 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079828413 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098993084 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080236257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097181396 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08096039 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104646581 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080895331 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1221243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092377446 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098704635 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082531078 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101867311 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088518132 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099692059 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10009266 seconds)
  done (took 7.318130928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08235137 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105873691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080537533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099834808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078721379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098936925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087879696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098690916 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082909227 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11826052 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081371123 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10000116 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082441341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102917951 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080861675 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100922473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091669948 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096598462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081130072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102425827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081417387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105411854 seconds)
  done (took 2.795796277 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221686799 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106500746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145846221 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118107904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100670784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115092371 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106809031 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089757998 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106251833 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091201532 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108525947 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10711868 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10136179 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10884107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109737755 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092024394 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10616239 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091945176 seconds)
  done (took 2.781560026 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095942881 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098162928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108014041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103023389 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084300281 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104733917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108157624 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.099860307 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104563351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083942551 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112976658 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086596448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103833471 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083686435 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104939486 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084376529 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104397575 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10199296 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09467398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10889305 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090234559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112250211 seconds)
  done (took 2.937411239 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096626189 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101906823 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115697458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106957076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097323835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083139253 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109250656 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084332344 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110754667 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085155274 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102370654 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082371779 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109418628 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083738609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108481511 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084065828 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105490723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083568433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104591877 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080546795 seconds)
  done (took 2.694932245 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122981638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114400464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098685103 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129529274 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118101731 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099471475 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12737824 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118247732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10010312 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131067594 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117326936 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101094794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129295561 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125194421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100162702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128015247 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12953324 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110506396 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118821874 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117843534 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114403004 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117622044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128714878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09976683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121095381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099512681 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11818769 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126043507 seconds)
  done (took 4.024177667 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081099836 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080330375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098196794 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081004875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099801293 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080664123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099652038 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082133004 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101973581 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081814395 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083825161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103019854 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083566735 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102113089 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083511341 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102186419 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083363335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099874499 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081864654 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099308763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083999252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083834992 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102673049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081182853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099714921 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084219489 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100079653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081740332 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102229529 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081148197 seconds)
  done (took 3.469075838 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091671214 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105436565 seconds)
  done (took 0.960560561 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078009552 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115309982 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079094162 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10605848 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09109279 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105207804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094950015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109248018 seconds)
  done (took 1.537030047 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105903045 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120129508 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090284081 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117043596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.106715348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.124611706 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170479046 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.109360449 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092682257 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.105017087 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.107283922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.10398159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094846726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109324786 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093923633 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120760872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082691592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11428071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093404102 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107224197 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090672305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121280743 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114579356 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09252753 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10848366 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097124123 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118292938 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.115063221 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091010384 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117203878 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092532499 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097437332 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08982557 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.109828952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083131736 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.125442133 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104973446 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110132443 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113870152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090771183 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113885089 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08104579 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115347845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092376716 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117164083 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090744773 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.110242389 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080401425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105495631 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090672125 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099910599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089507285 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098305635 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094763419 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114549062 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124036021 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087945541 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109429741 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090759989 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107549597 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093981381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109003226 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098072189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.108156839 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096215735 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.115431989 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112948558 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081401416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097953564 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08423714 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113924641 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111556293 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116963347 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091594418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110697161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083786498 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110111679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093285022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112272211 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116669983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090848354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112436008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098425303 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108794841 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090098754 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111451249 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088934844 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109107556 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087358484 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126534433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.107683065 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083668887 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104757924 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097752726 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109787851 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090321537 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10554376 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096732628 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.098581085 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.0913233 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111019218 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093736551 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.117967883 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091864262 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110409526 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113671298 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09970383 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110388894 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090076949 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101673589 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092348501 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106836753 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094811406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098719501 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092224286 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10925267 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.092279474 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116418432 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088120429 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110590859 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097802746 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116523198 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.089589131 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101546706 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090679552 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.110336175 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114452533 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099136033 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10858227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081306654 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100586842 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095633157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109870689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092904911 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110653832 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092152678 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099837453 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084393462 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110444417 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097965688 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108932692 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.122220086 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096891 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112674773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090217907 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.116910355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089925653 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105854803 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097846248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110043704 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081470287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114877043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090883147 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108992934 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091399843 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115546426 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110860708 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091847402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108193651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091591338 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11127328 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087081339 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110802356 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088987446 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118873931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0912713 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101136636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084136801 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112687161 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088067668 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.110151444 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086447407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.112038209 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092735577 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10396738 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089628966 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110903095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1032078 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118832896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092705833 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113169113 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117261369 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091206907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113022683 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090867738 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11207491 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091899401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115483632 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094488683 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111667038 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091548901 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102810745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094578134 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117146717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088659282 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104388342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087960381 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110578779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.100287502 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.111042637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111342281 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089657355 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112994173 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096153828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110811288 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090580292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106067937 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091918384 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.116687511 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092824664 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112727077 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098687576 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11225705 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081720875 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116111531 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089304396 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114986807 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082779218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107216924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088411328 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112475769 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090351337 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109917853 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080970513 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115675547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096893294 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11308826 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106017979 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091987691 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121490861 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090110318 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115928359 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091500166 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114813046 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126202282 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088321459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.11053285 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100388234 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.111095979 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081082496 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114936304 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089267567 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105695272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08917387 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.108512329 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092543227 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11387519 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094114116 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10048688 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091336547 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108877144 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088095548 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102053579 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098020596 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112594524 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09173526 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121682435 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093627545 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.112871181 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113024747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092130087 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112476518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.093329853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115515735 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092776976 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109481754 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087621111 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112308019 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086688127 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104855899 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090966218 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112534356 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094152189 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114031675 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090779351 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118925382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092809131 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.113804175 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131040215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08877867 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107084546 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093356864 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113794638 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092798107 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110169572 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083239017 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116497946 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111131287 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098209609 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111933625 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083962006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112731283 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091800694 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.113040174 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09319035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113333432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090721872 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110935611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09195551 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121906325 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089822024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1190332 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11499108 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095572164 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.111675358 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093765995 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111150368 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087633489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112207415 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093534827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114627059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.091206229 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114695012 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092766983 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112024876 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090383308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112780872 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093967629 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113796941 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081808089 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106983239 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088692077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.112209491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097222895 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.11258935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09062763 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109098585 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113554954 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.091537666 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08363914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11760339 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115040398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094196594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122371026 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088352884 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112781798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103424318 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102048927 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090019024 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.106022481 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088824816 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118543295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093811837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118218066 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094142385 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108770579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085198544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.112985919 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090804187 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102087347 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086847125 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115846384 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090779309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110727156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093858415 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115665559 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094423518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117343609 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111469562 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093625203 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.113416259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085238401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108524498 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088361965 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11348971 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094753106 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108758462 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085882141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112462239 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09310635 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114442206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091868772 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111316417 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099861367 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112503618 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094208576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117958578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083066448 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114273124 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093442444 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.112941139 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088813339 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115143332 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095758164 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115646524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098163462 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.112410916 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115732127 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093606992 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106400997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093128426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.112656256 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093825643 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107834298 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.095287639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11984977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086588924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113823715 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094253767 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109990575 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094359348 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.114033186 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094370068 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11757265 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09421213 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113711469 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096762013 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114674377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093790221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114041602 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111408422 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099585187 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10865106 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100817107 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.115600945 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095840897 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112329957 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089377928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113422138 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091935693 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111916797 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09975681 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.114897341 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088460676 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109249582 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08726518 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113664544 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098188059 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120502223 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113997043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094184473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104014966 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086179486 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11538112 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090049691 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112057602 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096793507 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118318706 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094067885 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112161176 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091355929 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119235539 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098903558 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116083443 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091313352 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11775209 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.114829612 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094264553 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111412956 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093178415 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114728819 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096313648 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112230006 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089437986 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123812534 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098857008 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115357153 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092614997 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117542783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113778438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084701561 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.114512308 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094397281 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117482611 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09456746 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113205973 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105496144 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108770396 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0932519 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118944837 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09308557 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118621068 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084935953 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116548752 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115289635 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095161695 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.10445787 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089298888 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109991399 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095026273 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109714548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084406259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125318332 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099080756 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114345345 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09210545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112996765 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084478365 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104717906 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089858129 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11590799 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09367659 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123381955 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089910945 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110707586 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08518684 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114013231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096134272 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11788187 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086575685 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104931958 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091331057 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115107787 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102240631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111778065 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093808416 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116444777 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114283473 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087965195 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120071535 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086291302 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116068481 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107105026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.115551378 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097847423 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118151864 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121353739 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.096690639 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10466424 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096373654 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115870041 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097331974 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115870179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.097514363 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130921867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096080476 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111781958 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092413539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114819553 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089797563 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123436822 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116304807 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.096083407 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.118061297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093532594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116869897 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102913227 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11683219 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094891977 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114883724 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092623465 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113766095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091941622 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113224177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096909348 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.116968718 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094008076 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118802157 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090265955 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12781664 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123066175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09645131 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106900305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090812398 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110943159 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085903406 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.116309636 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088087337 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.112523469 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091931465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114149206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097822278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117416992 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095763599 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.116285736 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.095098548 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104296055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099573131 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116678968 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09860882 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.109595537 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.095374904 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.11712386 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100333508 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119439311 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.113597906 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095075394 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11415417 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098074213 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106251676 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098789797 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113830346 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093573238 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110894576 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094384315 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116038408 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096866387 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116777302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097960113 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115585619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099565138 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11857986 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087559508 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10802126 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098640705 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109183704 seconds)
  done (took 62.382007841 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152173805 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091732742 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106261303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085621809 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134370501 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087165886 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106028214 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087007557 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106611512 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121535822 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086089779 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085493476 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129611093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136066268 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13216537 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123954461 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0853127 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107397465 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086310524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107897487 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127937884 seconds)
  done (took 3.104356774 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105380016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122042659 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124041011 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10777874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118250288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125179534 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122654374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104855949 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.127953734 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11897861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.108056463 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126044139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119353224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.098659998 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120747211 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122490428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128837018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098115139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125433968 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.123600843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12226223 seconds)
  done (took 3.384509507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093370961 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087744199 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.119462796 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.087963504 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.115083935 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088444378 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119580655 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090973149 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.121455635 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114892834 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092270967 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094507089 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120882758 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088449931 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11324921 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090913332 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121985625 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094350795 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11672081 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088246734 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.138758416 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109170518 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089104126 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113197313 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104583725 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.115728201 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.094777533 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.115135857 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092075068 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116192477 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.090442571 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.118169204 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098752199 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113167042 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09312585 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.115315817 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09535869 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.110189293 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091754621 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.122330824 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089479157 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.117651656 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102976052 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.114213647 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.090671867 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.119384866 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.095403079 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109738132 seconds)
  done (took 5.854410014 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123323717 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160791138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098460385 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155899425 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130516613 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.137610057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093175284 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149132584 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.11497906 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094559723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.133781278 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131976269 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.095673591 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127642789 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121154672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.095626525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120433146 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108514941 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.116427912 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121041356 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.097899874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.115006966 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.130357382 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.108179948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119666774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.115168114 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.095024978 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12825945 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127102348 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.103002846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121859904 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105025186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.145580769 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120951465 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093144099 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112508033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.133136897 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095846168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11869906 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.093657295 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119055354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128374664 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099978684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133307642 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118588711 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.098477813 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119056462 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10655769 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129726104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11841866 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101360811 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131493222 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122803033 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.097008794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121932182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138508296 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.093759856 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.11526818 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120339594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108226267 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11646306 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114539131 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132440807 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114877908 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098543847 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12726882 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117870795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100580658 seconds)
  done (took 8.925499003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096652958 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135252752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133141843 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111710169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122153912 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121167708 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101299343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.12126642 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101205093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130605488 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121995944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.173814262 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09390439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127754181 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122112547 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101996521 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121501856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101502911 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121995073 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121340889 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101283347 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133405292 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120830864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112024567 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134732611 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115138537 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100966922 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12176576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133118667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101320889 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137196172 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121273416 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100728069 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133478413 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13555586 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.122225869 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091361841 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121675287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10043577 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123751757 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114585617 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113059902 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121230246 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.115652574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101914902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122376871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133540215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115485214 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128304325 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128952066 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101179139 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134421024 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122450564 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101071182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136477851 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143296747 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132573146 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133190475 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100678767 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132474599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133428496 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143675667 seconds)
  done (took 8.288221741 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085428591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086667925 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111905954 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089562653 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113409045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089879361 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113166896 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092049489 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112847851 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0921606 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112963704 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090563212 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090010276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113185333 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089625347 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110605805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090491003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11024463 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092620957 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110688473 seconds)
  done (took 2.824587814 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09340011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129317147 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.09279927 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122405494 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095784947 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123461632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115147305 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096036859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114460563 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096213175 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127825891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12640492 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094144966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122043965 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106086902 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122619799 seconds)
  done (took 2.605168604 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107538363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12884106 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.142483123 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09872618 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.113210417 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100747796 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114718366 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.088932943 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111024044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101822979 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.121189923 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103759859 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.115222321 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.092109695 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.115574428 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09979399 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112585534 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097683489 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.115247889 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.142098542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099128648 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117868699 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094679526 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117351609 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096218115 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.125612263 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121208053 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090865122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.113195867 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.094216009 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.118017958 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.101679021 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.111298516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.098565989 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11419261 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090592054 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.115098884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094859475 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12087398 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.09312045 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.113606433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117257788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.094474201 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115448047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088985762 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114956073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089456652 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120897876 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096088122 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.11800118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094236344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.123154619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.101343042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126406593 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125944186 seconds)
  done (took 6.830455733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101501984 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116034287 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098587961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113419731 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097221518 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123042265 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098119633 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117823178 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096529033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112582368 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095861083 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119841409 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09547138 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120616819 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116690884 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098344198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109162739 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096115465 seconds)
  done (took 2.76370024 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092171984 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115434882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10147453 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.115135165 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09420097 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117776662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089789526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112807987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092242527 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.114659377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094865897 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.117122785 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092826852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.095663074 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114690284 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094001998 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.117347225 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091938933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.116514977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089284493 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120123551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091923112 seconds)
  done (took 3.125667489 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.109387008 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.148470969 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105672461 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.169291788 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.123994203 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100366851 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.13367584 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.121824168 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12150887 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121526106 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100221592 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122786672 seconds)
  done (took 2.323125224 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111994788 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153792504 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092461184 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120420124 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129666629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100297724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122217051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099969782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135618548 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134307176 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121111164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112000186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13399915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131964062 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129002165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108032412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120554982 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099235355 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117526216 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145268311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121340661 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11239491 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121061836 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099412168 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123353779 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131769128 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133270768 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11384456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123668772 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133800793 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108210018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122696767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134607253 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136499284 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098262362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133424769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120640958 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122628843 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132117837 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133008513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09704892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129948555 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13310655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128477589 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11342108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121976535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12883986 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100510259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121127549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152875545 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129605355 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111608169 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128902633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13443686 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133469879 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151432748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114005857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132551481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129453108 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135510871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133543906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109034935 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132863521 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135962076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129222279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111598464 seconds)
  done (took 9.000926867 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1262408 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109421096 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11830053 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115333823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132819586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12259273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100062106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121430526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121167873 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097400516 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17204227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122063353 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11159127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134007797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121594353 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099961163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124068749 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133703388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096849783 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15256033 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121600589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13382227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13285227 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11125592 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136147844 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130243866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100338806 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122519694 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122369478 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101023721 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129120778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121740965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112035674 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11546201 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133757902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100599974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121768453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129385329 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101015668 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129468361 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133066385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145290738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101227081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122490622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135510245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100942467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122525589 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097082239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12264015 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096640752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138930122 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136458123 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135778439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133940565 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100588726 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123164962 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122271311 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101563612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122776997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10779392 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136124834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12205617 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154550422 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100818095 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124472743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133224089 seconds)
  done (took 8.862850211 seconds)
done (took 166.09204575 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106611387 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.149875295 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10243361 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174138957 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087367645 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144978976 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120871437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126454682 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088543825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118884979 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094895926 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121950874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159390907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108980682 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08772561 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113773904 seconds)
  done (took 2.763040743 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197554857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.314864335 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111208581 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125169761 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103487653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.122681617 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123948413 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102700692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118999271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110675939 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.122398313 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099667151 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.13259717 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100361359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.120958738 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099088883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.131958921 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.121726458 seconds)
  done (took 3.211032473 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123690143 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159034877 seconds)
  done (took 1.138770728 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132332762 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.205080576 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.335025427 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178363783 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130098471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143258607 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.180167122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140707578 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.213692092 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.147617578 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.145583628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103520757 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.152321583 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.126108089 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10635488 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.126045295 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.132351979 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.126589069 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.104180967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.127965413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.150493362 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097294093 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122557501 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117383972 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194413835 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.113876738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119403581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118572177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097094223 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116512287 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102048058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134883399 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.141236157 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187195374 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.13170494 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187627039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.138396491 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.125264287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.104866122 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126398426 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101523394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123777033 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135302215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095488078 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.118187935 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125152674 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097702146 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119340683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10258168 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127792203 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.364667792 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101274679 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.203194153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105689712 seconds)
  done (took 8.45800149 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.888109051 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136775406 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11845835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.990171027 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122072322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134728466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849171612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143353544 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260702455 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869960281 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139237912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128283989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240149268 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.305795219 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.176915539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363535429 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.736596965 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130506744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122260066 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163941048 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130729454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149899517 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143543378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.472272713 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095330816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114685102 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097654172 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129154478 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181218138 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123648739 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101773312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.23318681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295087617 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225526005 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104618972 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123623298 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100407218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.219149926 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303274935 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224073244 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190670904 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119959974 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100131489 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138611915 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144730102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096895917 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.21285991 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.204910592 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201165735 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128120118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135822019 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112420164 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136111931 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190383507 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121196013 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370617487 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349367015 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12295567 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132926019 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120407705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297253787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124098245 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255572371 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129543821 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.243800546 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122074839 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807239095 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.215338452 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102177849 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134089647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108716137 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129854255 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136451244 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189885591 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.44537976 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117493293 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130937542 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122906258 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238783143 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120952528 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09465074 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189501523 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129996951 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132869677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120040502 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140632876 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200820336 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.296165365 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116821536 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128292671 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128008637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11571035 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.129526121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.242368017 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.25516945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187603772 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264236928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112419393 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.211632234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.196578675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136344943 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.202281087 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132749607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12049662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13798856 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24915873 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.165593833 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102482105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130102287 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131837934 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163812593 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102166863 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123084389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189031677 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494689254 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.207610298 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092703875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128545198 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106268527 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205715111 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110164023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.300321541 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124350041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186098057 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121672125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088968616 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123203733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183499986 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129669703 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101870214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128054268 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124824164 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272346973 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253536731 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139507873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241151397 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.201133884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128968798 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195480673 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132006978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197388771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135123392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11438859 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131982613 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813540078 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105128294 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123589592 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119726795 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205000091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092178646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117143097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092183684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110364779 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815043825 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116850175 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.090644923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.115863184 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10305275 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123839141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123046684 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09851465 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20428954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264332873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115936745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133094397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098219886 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.202756623 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09681375 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113652714 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093463192 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114447933 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102768393 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119129825 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094643454 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217016429 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184871281 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.256759965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5770251 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123828196 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093354121 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253052658 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115638407 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33293935 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105184312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.253092069 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.213615093 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099442607 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369965535 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.200543272 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21365267 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129035876 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204126372 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100069885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133982957 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.192025139 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124240429 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130773672 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18437304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138639371 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111461405 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186666526 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114344146 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249290111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089714681 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.212950739 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097188527 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127066115 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336059782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092615029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137401227 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182865297 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12552531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102963409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.068687032 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093014533 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127673152 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128344871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255944377 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.198597491 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134051167 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107319363 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13292371 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193092156 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.261546495 seconds)
  done (took 48.477496271 seconds)
done (took 64.899306193 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31431642 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273380918 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.328031837 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227491725 seconds)
  done (took 2.102282709 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187490215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160316152 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.153802817 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090629105 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162622238 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.112978531 seconds)
  done (took 1.744368596 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.510607413 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.416456554 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359231705 seconds)
  done (took 2.165000197 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.275016587 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290809766 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.373251689 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.513786881 seconds)
  done (took 2.44878305 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212265052 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131804143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105201862 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.146315645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.179655954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182489212 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148742733 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157820071 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134933419 seconds)
  done (took 2.336980335 seconds)
done (took 11.682189604 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.305798434 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.258605404 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.276055611 seconds)
    (4/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.172752549 seconds)
    (5/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.185224469 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.274018873 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.14892096 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.242789306 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.232551472 seconds)
    (10/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12865899 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10755497 seconds)
    (12/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.245074242 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.261675734 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.12322239 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099710625 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.158752135 seconds)
    (17/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171793056 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.123334609 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.196965236 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09844569 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.253624026 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 0.177639966 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.18755501 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.231810362 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.166538429 seconds)
    (26/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.246379654 seconds)
    (27/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.130823329 seconds)
    (28/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097779352 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100376507 seconds)
    (30/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.283417133 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.151342407 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098192938 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.229764896 seconds)
    (34/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.21679979 seconds)
    (35/286) benchmarking ("sort", BigInt, true)...
    done (took 0.27131654 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.138827713 seconds)
    (37/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.230458653 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083473772 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 0.238299176 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.155835763 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.241745822 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.165570175 seconds)
    (43/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.16744095 seconds)
    (44/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111401363 seconds)
    (45/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.142610048 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111467865 seconds)
    (47/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210591975 seconds)
    (48/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.164402842 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.205359174 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093383878 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132233549 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17396703 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100131621 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133633199 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099123531 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216002827 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129483586 seconds)
    (58/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.129245435 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078664075 seconds)
    (60/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.149950011 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.085552297 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119275903 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121779656 seconds)
    (64/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.128718775 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08106348 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200701479 seconds)
    (67/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.228127383 seconds)
    (68/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116799149 seconds)
    (69/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098809041 seconds)
    (70/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.157359107 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109249139 seconds)
    (72/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198481754 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126044246 seconds)
    (74/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083661154 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106854938 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105472464 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.11361667 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082133702 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122053442 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.195291038 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078420284 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.149440303 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107456222 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148440573 seconds)
    (85/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.255903011 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12764267 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122696946 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.125403499 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152280806 seconds)
    (90/286) benchmarking ("sort", Float32, true)...
    done (took 0.252344071 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.23046324 seconds)
    (92/286) benchmarking ("sort", Float64, true)...
    done (took 0.27772363 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102596619 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136634979 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.144373278 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.120070608 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.118491391 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134462526 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.099839494 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128069624 seconds)
    (101/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.232771618 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118984663 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206736168 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.152448856 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147608585 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099280496 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.15440987 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150105071 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121584408 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186752304 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123498469 seconds)
    (112/286) benchmarking ("sort", Int8, false)...
    done (took 0.203566689 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.102541015 seconds)
    (114/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197268216 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.107298692 seconds)
    (116/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.104438448 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094457878 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.101476468 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.151189304 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.195585852 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.128041235 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125746741 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.106218023 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122234711 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086732992 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128450199 seconds)
    (127/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.19536059 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097565673 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.128686673 seconds)
    (130/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204176278 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172143094 seconds)
    (132/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119551314 seconds)
    (133/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174138816 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098492354 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.128366814 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096316054 seconds)
    (137/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.157424644 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.152247722 seconds)
    (139/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.078871046 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121246666 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190232267 seconds)
    (142/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114921964 seconds)
    (143/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102123856 seconds)
    (144/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.13371145 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181486446 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114557587 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099238689 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.123332911 seconds)
    (149/286) benchmarking ("sort", Float32, false)...
    done (took 0.156832042 seconds)
    (150/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118419333 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12799108 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168842403 seconds)
    (153/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.109689626 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.109118041 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102108605 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099135373 seconds)
    (157/286) benchmarking ("sort", BigInt, false)...
    done (took 0.261404412 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109173082 seconds)
    (159/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.102694647 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20762337 seconds)
    (161/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.142351163 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102439571 seconds)
    (163/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103577683 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.12095192 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137507674 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102631783 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.111181917 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.122821132 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.131541125 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09819059 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10233703 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099462409 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.123900672 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100297694 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121742698 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152885128 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.10647948 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.1027383 seconds)
    (179/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109878052 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101714441 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094464482 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141733018 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07925053 seconds)
    (184/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.129018331 seconds)
    (185/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.091207963 seconds)
    (186/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.142028977 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.222439494 seconds)
    (188/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098702322 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130150683 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.230876869 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.134499311 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.096391813 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.10364478 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098144263 seconds)
    (195/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12317031 seconds)
    (196/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078990305 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086835772 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.102404939 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079943096 seconds)
    (200/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199219082 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116555106 seconds)
    (202/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086912447 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078659931 seconds)
    (204/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12860757 seconds)
    (205/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.128154611 seconds)
    (206/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099547318 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132252498 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.107001284 seconds)
    (209/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168244287 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09654414 seconds)
    (211/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103726942 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093396805 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116289323 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09981645 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102970647 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095543405 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.141213903 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102173623 seconds)
    (219/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.07844775 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.145543042 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.09570299 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102424098 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.122768281 seconds)
    (224/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102215871 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079341209 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.128034162 seconds)
    (227/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079437138 seconds)
    (228/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079172155 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104144161 seconds)
    (230/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109988613 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.109471435 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.14223336 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07930034 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116666703 seconds)
    (235/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098972178 seconds)
    (236/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.13342001 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080947396 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.134693854 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079745116 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124665402 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098925599 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123609469 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.108265912 seconds)
    (244/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103341707 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.156358152 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099096279 seconds)
    (247/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122400363 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099651996 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116512118 seconds)
    (250/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095887111 seconds)
    (251/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126690963 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099681158 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122065131 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126383652 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07967124 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122423611 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097334331 seconds)
    (258/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132279116 seconds)
    (259/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096598999 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125189199 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109002981 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123961577 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093186891 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.102702073 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094316782 seconds)
    (266/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.103323914 seconds)
    (267/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098949532 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10231967 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100786047 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13171163 seconds)
    (271/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080645265 seconds)
    (272/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102541906 seconds)
    (273/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.079570366 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116341329 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096979236 seconds)
    (276/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12094406 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09890992 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144184722 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080163733 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11987592 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096623554 seconds)
    (282/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.103000088 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080559342 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.103591671 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10103536 seconds)
    (286/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.143651864 seconds)
  done (took 39.745369155 seconds)
done (took 40.633159171 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.108068897 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.480146343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.131704798 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.150204386 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.108479308 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134319543 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.103288378 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.128925568 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129749034 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108496469 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.132082659 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.087154057 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127924756 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10446667 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.128806496 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.150877119 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107845096 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.124116783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0960278 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.119898975 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095400134 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.120334601 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.098882978 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.109917663 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105504619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127332107 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.12404916 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104094459 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.121203487 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093573167 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119033996 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099908082 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117927355 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104935479 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122788666 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11463676 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129007433 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103157967 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.122456 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.097059462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126700666 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120610272 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099879114 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.125255258 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096895211 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118734274 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095586189 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130887891 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127015056 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123186117 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101168684 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128343835 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129891345 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099837599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118966345 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095463025 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.121900913 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127232242 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121231788 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099038376 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.124910862 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103415272 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11928305 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095767383 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120707364 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127289523 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.102899566 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119956353 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103004349 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.122493752 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.091714474 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121154316 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094784588 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117980106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103574401 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.128258131 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091208536 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.123486112 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.103858684 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125797703 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.096332456 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117986796 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.099262673 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120835511 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095274297 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112012036 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095582553 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.123684289 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.096152872 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119691329 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09924867 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.123105245 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099616539 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127016895 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120178857 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098031938 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122631687 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.098044243 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.124518466 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094665264 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.116323831 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094691417 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.125821538 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094299582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.123587304 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.10658193 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119203709 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098823132 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.119548716 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.120808367 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.11138515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127301535 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.097014808 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123165082 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092892506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126762432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094953259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118582574 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094713003 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.123157762 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097615357 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.120214655 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094896931 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12452283 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130340625 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09231776 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.118532447 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094789211 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.120386242 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.100367838 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.122074665 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094364016 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.120980544 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.092227491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118008029 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094724919 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125198674 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094044746 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119992466 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096788206 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120307869 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09825732 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122205029 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098643307 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119120105 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.090189938 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125070118 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094347467 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.123157523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.097045462 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.120498722 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091610236 seconds)
done (took 18.365667708 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106862622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.19080925 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154288488 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157975417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155679168 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114471506 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130642329 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151903504 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128226762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126856271 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151293356 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143164281 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.157927663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105667558 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138383238 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126953119 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.102925024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136797561 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.162821728 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12508412 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153921824 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129437388 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148307823 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124667327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12702778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148951907 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107044204 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126980073 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13031434 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121082225 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.144555078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131242369 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106746697 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138639269 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.110695914 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126555933 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140467047 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099978543 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.127819756 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127680519 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116321163 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.139565455 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10125185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136228149 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.128102399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107105996 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126542003 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12611362 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103783812 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122605755 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108281467 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147616528 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126398674 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106210611 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13000388 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127139496 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106420451 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131084772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130455839 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106717942 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.128768686 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10668283 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133146546 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145055474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103394578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131475554 seconds)
  done (took 9.450614607 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121822997 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157791455 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135437077 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110981458 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130771324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092623083 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11699807 seconds)
  done (took 1.817549766 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095420025 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149970392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129239808 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15396821 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14297386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.159887771 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110882117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.120595986 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117937178 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129235787 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.148884339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149902453 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120842195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132789204 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.130830526 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11805482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.156009109 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093467747 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126608243 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12955349 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123946695 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.140703108 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109624804 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119141138 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117220109 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120489678 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189429038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106796979 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117958698 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.100971774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12412401 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.194022286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142872889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.105042664 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116858917 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125080983 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142680131 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124512132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.120715838 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.124190108 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141478392 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102590132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126860322 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.100787793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126216554 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.110352731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.131295952 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128474304 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099953085 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149217731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106248067 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.142561387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121956225 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100279003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130222836 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100406246 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135218621 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.099508548 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149294151 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12597445 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123682201 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148162531 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14228845 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12381171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136633379 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14293685 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.117719477 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12476325 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103034588 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12749922 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148278594 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.098362788 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131022244 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110218357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127657728 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123904534 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149200429 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12390984 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107738663 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123750182 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097502568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119528141 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111888303 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122816791 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09701989 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139075822 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132926493 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.100618767 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123300268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119733956 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12537406 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132119166 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.106461132 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124808631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135952756 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125942354 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131710004 seconds)
  done (took 13.143172544 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099635598 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.095726309 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125496539 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122327699 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096778608 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120546025 seconds)
  done (took 1.622174251 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129609478 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124570442 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111231579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127749338 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165296182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120271984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146456477 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131745112 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.116833213 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135283684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.145098744 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.122743232 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151632884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103030215 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.145881699 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.128769874 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.121792832 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123906829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.110394845 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12466869 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13739664 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10474295 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123966091 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.119652462 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127326419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103701915 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126661979 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136575608 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109925535 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130648649 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102774015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127584309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128081784 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.105405735 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.146380542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.104241884 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122589327 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.104931303 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131866192 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128162483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.122902716 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124283083 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.109243319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130270449 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131300771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.103645178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129574973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103029011 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144442564 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104492129 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129411725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12730647 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103943012 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129607454 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103174756 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132318331 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.104970311 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.147625753 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130083833 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.103094655 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12464671 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.103522799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131845895 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.103520908 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12905104 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.131064778 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104932033 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124809752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100547852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127983188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106060319 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124710552 seconds)
  done (took 9.796320103 seconds)
done (took 36.773323159 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.707040198 seconds)
  done (took 1.66540049 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.925087125 seconds)
  done (took 1.88789113 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.633271135 seconds)
  done (took 18.627825596 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.572677495 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.677974969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.058417341 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176477847 seconds)
  done (took 3.44454345 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.987695217 seconds)
  done (took 1.966806353 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.330590225 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.278763852 seconds)
  done (took 1.576535214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.848769862 seconds)
  done (took 1.819759249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.627574572 seconds)
  done (took 2.599792586 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366116384 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208332791 seconds)
  done (took 1.557125019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606953055 seconds)
  done (took 1.581775508 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.638721714 seconds)
  done (took 16.622526262 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255535143 seconds)
  done (took 1.249117176 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.31790028 seconds)
  done (took 1.299116412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.638660869 seconds)
  done (took 4.618453507 seconds)
done (took 61.483173816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110156994 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136584296 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111129293 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133127631 seconds)
  done (took 1.465034599 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11611522 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130290777 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109358715 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.131402685 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113608677 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.133731342 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.129397978 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.114557171 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130058327 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.106411901 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130549632 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104539766 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133104268 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127549926 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101858879 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.132102341 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109186665 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.131451288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104474092 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.132537664 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129306288 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.10661966 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13430433 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104229157 seconds)
  done (took 3.880103712 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109467979 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126491597 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106738597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124963295 seconds)
  done (took 1.459470495 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115237733 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147708521 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.121534435 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.138537722 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14847253 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.123707028 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126124655 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099426478 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127553623 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112966284 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.12772975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150786176 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.124239387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121659126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114281296 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119095637 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097237605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.148700557 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13764145 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.114244244 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124691704 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.113290746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.134977448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141339699 seconds)
  done (took 4.016945661 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21826198 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.113368021 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150419253 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.107101654 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.179648509 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.152035432 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124159785 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.126862065 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.125162466 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.114172308 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.129589832 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.180513286 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.112502945 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129052512 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.127326587 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.108497264 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.137703961 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.138379059 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102462727 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138951014 seconds)
  done (took 3.70530714 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11108952 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126587015 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096512914 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124542839 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108892053 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127881962 seconds)
  done (took 1.68586786 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098578665 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094199286 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121000533 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094839774 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124850952 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094870635 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118754887 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095524156 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.119855184 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.094196234 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119409236 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095172168 seconds)
  done (took 2.258022537 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.249369478 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123008732 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.125483234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.100139441 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12939787 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09806513 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140831697 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100679389 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.190479079 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12639275 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140500919 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.188323806 seconds)
  done (took 2.709734719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231167062 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109320001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295577593 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.459005301 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189517446 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188461023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.376305937 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179918652 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201115763 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123184215 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244355282 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170751907 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138997294 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193811456 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155165376 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.197545994 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189923866 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24259013 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137270673 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25649283 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180269969 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181536109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208523806 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161817213 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121753401 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178804453 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127743559 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115954223 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210122436 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180736755 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188701483 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162726828 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149510411 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213216912 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240543241 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220575862 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.385228578 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159989129 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201995493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205253803 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306460517 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159207301 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209714393 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165887053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143617969 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195641669 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167840777 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194484727 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140822515 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123858411 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229818723 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199412607 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199221552 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168750117 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35454044 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164595551 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155079729 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196060454 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200700948 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244962058 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18202477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.10491958 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262118547 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206146228 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191160502 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155708723 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179260415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133569205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189422949 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218961179 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197356554 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177547105 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.248759877 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150493428 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178538752 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193453959 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164894557 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188583683 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145498173 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.133010191 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162836749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125234582 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13635007 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199478958 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104607364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254489641 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117721557 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.32647012 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226068293 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169247773 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173585237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177571934 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178857677 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158734552 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10077543 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157368074 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183041898 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168974147 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141424669 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166899992 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127942039 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134962817 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16443765 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104770914 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170090378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.144912543 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179695335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175367855 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143777334 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174374466 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13247022 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170065083 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180172133 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207162085 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141862893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147463919 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215952128 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170432375 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146005663 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195486494 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211262736 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185509992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152869863 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185814742 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20770183 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153030793 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212268332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168350002 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122422551 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161410809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170999201 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166039541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164935051 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137170468 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.136595628 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240665155 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.114140926 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149628114 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187201748 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135266237 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110731984 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154127222 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150634087 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.126788429 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159764402 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148365271 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16865455 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172483762 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164544013 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168211805 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127076272 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241572756 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114788138 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17263521 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159886357 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125497282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190702281 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207302433 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144028051 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197756164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180303834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274285875 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176895318 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11262968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192164541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141541953 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101366537 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181568573 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172530554 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172002184 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208005917 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277654903 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175320321 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164477078 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161401582 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177898981 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.197324116 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168404631 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15630964 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174941228 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185045755 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.130263301 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105341045 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134590967 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122260203 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145453067 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140362574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194946599 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175288351 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.266020885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173062138 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121090388 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205036838 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.136255737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176274784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.186272515 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149116035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207923119 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204095098 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179088798 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152878582 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183840176 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128669495 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10752484 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143591157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178823265 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113274546 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15038564 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160168596 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205272665 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185990096 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162365496 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277643767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180739024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216437432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131849944 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148456582 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218716344 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141788307 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.196597041 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143375337 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.173246226 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203437035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169766572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204671093 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176083559 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181467649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215028635 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169386481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146229478 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159053394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179742376 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155310204 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184106819 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128116938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149171245 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165019087 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145480761 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10762794 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191161976 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155690805 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21960003 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152051528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215382077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10757108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160742953 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172909685 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159184131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.098381735 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180717193 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236952283 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155020148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1684861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196360924 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117599233 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.391380771 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212408546 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199217152 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165754321 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161458579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174992233 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18128133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175025378 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194329957 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158840496 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191395851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141788857 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155421573 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147846745 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156707081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132547087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162416081 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14492484 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.165961612 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155015 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197395815 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154203266 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169152239 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150081247 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.160045045 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16465403 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150273776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224110108 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170912568 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190772141 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168891097 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189552584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199765545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104913556 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139156119 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135237382 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19515623 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113339621 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171715012 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.264857621 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288326246 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170783075 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180950371 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120559155 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134479468 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175287695 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161348041 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248995672 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154169207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147415779 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213410876 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163234092 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11668916 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176382816 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375845077 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160557657 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196628327 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102055818 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.360566028 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112742192 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149814991 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181837286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183520835 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140694623 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.168863979 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177437431 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158298557 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182037599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154889599 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239945857 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255411203 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188301028 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189224089 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154627768 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169389646 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175733111 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197999702 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153721086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.131514145 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177320498 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205085368 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235615063 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115864329 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177685822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176353081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172409123 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186227726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144499742 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199949582 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14043289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178768504 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155731483 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105054203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171997813 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.261605689 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119230183 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227865177 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143590192 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143247907 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135677223 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171056511 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142693208 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170610833 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.145192586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192244679 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.136568338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146072429 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192430642 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1423115 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168947406 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128595844 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139165735 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160412005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156108959 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119621171 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183711647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204741649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140655892 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198128803 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185008153 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175483154 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17123768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154493023 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672330173 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108927491 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205623476 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159351614 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199182984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160399616 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179339277 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174384576 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161728312 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184733044 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159222711 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206796719 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179063045 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169861747 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149405482 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155804459 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154942182 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.113371376 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162329726 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175242442 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152238719 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.118606289 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168848629 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158291079 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154276921 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121907634 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237442391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131129295 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223126897 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194373687 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138198484 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179283382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213885786 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111227069 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.171712203 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182832652 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153940281 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172109549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110062458 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145981541 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191647562 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132490984 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145024935 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173373491 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173772236 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175837752 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144423459 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173316188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158677265 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171606149 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106837409 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16532299 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1698665 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140587387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108937136 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168571323 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170810566 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.171542063 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107615663 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.18426718 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205171936 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134565309 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121505189 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365252757 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173919241 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205580346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166249118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115481078 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158060081 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172124292 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165487661 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173081598 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108109931 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142785791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140072968 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191263009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174366728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143887252 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201007894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171958846 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201224188 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.148277569 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282729934 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151416775 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139084109 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150163631 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140482562 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123205144 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153718923 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175035289 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272333292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164112534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166678517 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.157759872 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137758649 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.108000128 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143163569 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181900751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164845939 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142048231 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164823532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128184011 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161041759 seconds)
  done (took 84.760046562 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15872988 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150500889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158984535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20561703 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176136253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253065321 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.216313537 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238228296 seconds)
  done (took 2.637892267 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.114446709 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144526651 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149538505 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.136238535 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098901453 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.394265384 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146831922 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105983471 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162865679 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144703624 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124176645 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.647959051 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.136064392 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131348507 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.095615911 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.122147522 seconds)
  done (took 3.926525232 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.436824831 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558469212 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.042900382 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.263210676 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.245169454 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.192335684 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.768437514 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183663453 seconds)
  done (took 12.772281425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137052058 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150645761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.150909717 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.180469652 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162700982 seconds)
  done (took 1.872464356 seconds)
done (took 128.126090096 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107985418 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134931457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10875179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13821026 seconds)
  done (took 1.562134641 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.120626137 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091825512 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122188753 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086729518 seconds)
  done (took 1.500804861 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.535530848 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.087058384 seconds)
  done (took 1.740263428 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136518859 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157143223 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123777438 seconds)
  done (took 1.505870912 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116776282 seconds)
  done (took 1.202515017 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118020228 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.142129461 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.124547836 seconds)
  done (took 1.469463278 seconds)
done (took 10.061323231 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121543662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.543132845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393131833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151018341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729820475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38697386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055181767 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171529397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177023801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098608227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14760589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677528399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.078516963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.441241452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.06183877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374804562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.685067517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128625351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10922061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127876256 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001648839 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126411557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100644055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128793194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67920972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432495307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098451435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392275076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097279805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134361837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415215635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098397096 seconds)
  done (took 17.433697071 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104206707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193880763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10561403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130696708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103165611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132053932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138932848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116352886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190021041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128738356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120213983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126901247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103151906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128234542 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122827621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127944456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101149391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13177615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107243407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131582405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.147289415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099141219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128502031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101900821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125888586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113638118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126277972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.113905984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127472568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102693239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133573133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099499327 seconds)
  done (took 5.054481916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150217846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.20473504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136002304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134602585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179125069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130437125 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219595849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171930407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192711224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099408361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149232039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098400333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169926933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09931098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153687158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098766227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133110674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128069581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.111285343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128858814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121018078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125763985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101251522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13002734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099285776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142900338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098860489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144163556 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098504852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135572661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132857497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099903203 seconds)
  done (took 5.413226901 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110558197 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137682223 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118865453 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148357554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101312745 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136902934 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107487464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131292557 seconds)
  done (took 2.086743408 seconds)
done (took 31.074536494 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121487257 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132166261 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.116608345 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.141860938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.11096945 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.153153984 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098552387 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.139801813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.114680013 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135211501 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.119142374 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125610577 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.103385832 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096595959 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.142480847 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103490856 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.145206905 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.108638526 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.154674938 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.145246075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100258816 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.139491457 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111158242 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.152220263 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.123009365 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.152727962 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143694567 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107656057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128507769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099828359 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.156085823 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.132250244 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.135997368 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118619127 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133244364 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103489956 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.129276351 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101744384 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.144798147 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.11024389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133743079 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.110317837 seconds)
  done (took 6.361847518 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.13139145 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.178025805 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.096182109 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125336812 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.09657336 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.170747686 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.170819009 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.097321695 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.12703107 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.126402362 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.157041784 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.09792361 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.127626347 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.096910676 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126134735 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.097202262 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.155328291 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.154240177 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.131483702 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.163552506 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.177002105 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.132848088 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.168699162 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.155040032 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.144235866 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.168589166 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.154281025 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.139477767 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.161643164 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.126800375 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.132444251 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.174648604 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095778963 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.126685299 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.172894196 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.140665001 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.161323874 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.173563006 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.134369335 seconds)
  done (took 6.569070978 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112708868 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144945907 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124913548 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20164469 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.170874509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.112545365 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140792942 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119054935 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.148202167 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098640923 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1400259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.13159171 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152686733 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106459835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.137470345 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144651381 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12208336 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131490159 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105587085 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150292356 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118610154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144701616 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.112839392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140994399 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098953377 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138692918 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.132629846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.119255402 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135311245 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11105092 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13258088 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10447199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.136776588 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113371528 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132737516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.107148026 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154378914 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108792362 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.141496025 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165060526 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116313617 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134161589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.126578757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17434916 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100288507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138390596 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.135746136 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1115278 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098173676 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151146122 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140762308 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100345585 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147307615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098681621 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.127540868 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11654155 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130193813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102230416 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.138904128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107010412 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152297309 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.104387881 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146411674 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100268001 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138749284 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.099031455 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128299359 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.104754278 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157982001 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133114501 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.145926752 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.130599883 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.106250956 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.14124788 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107108888 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138883407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100041889 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146520097 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109492451 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133908485 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109239593 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133839831 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103160409 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.148648628 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145083278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.108474897 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.136826736 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.106735534 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1336447 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100373315 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147638303 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101712462 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133525173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117849291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130594652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102006445 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.137285645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105357827 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.128887676 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11668849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137552459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09882274 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142167381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100556717 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.133649147 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109499121 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.135447035 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.099828618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.136777812 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135679291 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10049888 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132736989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103839432 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.13050728 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114845994 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.135860115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103744131 seconds)
  done (took 15.87934887 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256840875 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233469005 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210650072 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.323763425 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154897311 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.162115655 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227503566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154654988 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13307373 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176198643 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190468025 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.205135278 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.193984043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.203434922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.195458596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099318996 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.152209482 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.187786806 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232398439 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.318916973 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.149911495 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.117167946 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.177254376 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.174707502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.152084405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.117501002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.156924442 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155804599 seconds)
  done (took 6.331012609 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.121371738 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.172180934 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.136333791 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.132209624 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156690082 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130264436 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10633032 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100488926 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144889666 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146478138 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101664561 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137368446 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106675796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140872986 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.100095194 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139049959 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.110063458 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.13972324 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102552694 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.135774084 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.148570372 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.119060557 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135481294 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.107450146 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147614181 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.139480466 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102643579 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.152475544 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.141540326 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.131518494 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.128928513 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109634631 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.145185319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099565959 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137924406 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.102304989 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.132250515 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102222786 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.13459915 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097604692 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.130206672 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.090868374 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.137125591 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144636929 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108093281 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130859384 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106515041 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134177587 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102075656 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125949332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103643611 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.102563524 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136861557 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148471785 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104120588 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129782848 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.105367048 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101946721 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.141400648 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102835924 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129631333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106488966 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.138097666 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136226125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109463671 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138580001 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.106363709 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132158461 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105665507 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.137495595 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102992558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.144325371 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.097320313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.133820978 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110842842 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144517047 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.105259401 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137050492 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137418557 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100124956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.090908763 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.130256237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.087463766 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135512874 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100066363 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136768501 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103368124 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137091086 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.147270377 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.110797289 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.138867401 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.101485369 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137301168 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105489996 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.128582453 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.105318359 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149364509 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151021503 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.099983733 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097871669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155206589 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.13139326 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099403721 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.089040265 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.140983499 seconds)
  done (took 14.050248901 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141588001 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17434783 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101460285 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.152298807 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.167703325 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.136400396 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.259258494 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.109612812 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131864762 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121312911 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.140184947 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109482711 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.139093697 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.148016504 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.136056253 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.142029071 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101891179 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148005492 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106049413 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.179256126 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152984836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13323107 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.16945617 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.254513868 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.107446037 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.159497803 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.138626287 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.146844759 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.115311619 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168948759 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.146268971 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.137871913 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171422629 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136150869 seconds)
  done (took 6.113791929 seconds)
done (took 56.393461708 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.251830921 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424616965 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.188408404 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.188504341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.222824799 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.22363861 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194251945 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.40254879 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.915656458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.186496112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.187690123 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.188679438 seconds)
done (took 27.691071906 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.201739469 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.783767627 seconds)
    (2/2) benchmarking "String"...
    done (took 1.498142866 seconds)
  done (took 4.391169577 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.186870767 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.1844338 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428513257 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186698701 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.182088895 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.198460047 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.197093463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.203206565 seconds)
  done (took 15.687920344 seconds)
done (took 25.576388986 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.251957674 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.37723165 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.453275591 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.197081413 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.180761593 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.181668487 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.181799399 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.207010712 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.187844923 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.17958783 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.182589986 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.449344481 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.199923785 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.567404849 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182481636 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.184840288 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.1979973 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.432546365 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.183292319 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.235996988 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.169553267 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.171002434 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.188818839 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.209954973 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.192653597 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189949986 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.252326861 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.183090975 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.382791753 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.202662657 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.23490857 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.185260434 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.183687922 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.186954294 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292633769 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.225055091 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.374488872 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.195961227 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.176836817 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.188241783 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.373487547 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.591650754 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.182518372 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.203996598 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.193076129 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.243303793 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.180388897 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.915213394 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.187926311 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.186463346 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.248384513 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.569500379 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.195937462 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.185087049 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.188267251 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.422994 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.211461262 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.204327167 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.222132189 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.186337543 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18536267 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.188159175 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.188147714 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.184384369 seconds)
  done (took 142.348306443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.186661073 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.191855851 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.193256458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.201948346 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.195520026 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188349758 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.191657373 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.190791937 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.186194469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.211978808 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.195456698 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.185225527 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.196502412 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145138212 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19165468 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201311418 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.196445018 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.191627023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.190967751 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.194493318 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.214793508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.196677868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203109939 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.191910906 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.235432501 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.28065393 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.231583273 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.221019052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.192246787 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.192162845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.228482209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.210414515 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801184512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049803845 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.20366494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.213899506 seconds)
  done (took 79.805009588 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.189413408 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191768364 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189676082 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222082817 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190517706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.7558631 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.764267698 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.919446549 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.306174023 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.526689653 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.435089796 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189761671 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283960559 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203276957 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199496061 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.205563668 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217077967 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187388549 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188283491 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.74958445 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213211616 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.316133068 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373365545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201410087 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221504784 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585340561 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185232312 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223346961 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.514558307 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236219243 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184694781 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553379032 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.892340216 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302548597 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188939821 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219273002 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.185537473 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47085907 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185134265 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190473245 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19335221 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.86584536 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197670926 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.738259536 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19279352 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142092249 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196105104 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188741207 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.226808013 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.871151786 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.209237312 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.185587569 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193284463 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.184970074 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183964811 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220446001 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.202556747 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306196035 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19276212 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.182280403 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191976983 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218720383 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.186335081 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.381500474 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180194598 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.670603253 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.267519342 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.411068974 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716420736 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193589468 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283197239 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301042945 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.183839037 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187641891 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188851084 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187865619 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.292998286 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.182732795 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.567212395 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.352640016 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202593208 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.427740434 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284495686 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.190159686 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543388773 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193291772 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.187746387 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927007336 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283162771 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.181183123 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.186080964 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186383533 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.572779366 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717165378 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.40135029 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194420316 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.294925154 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.193856787 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187958323 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.573440137 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697425516 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.83278585 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.199626245 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298757909 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351919047 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205094976 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190426814 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.190535946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18629758 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.428651555 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192980515 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246975516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190023391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.584955541 seconds)
  done (took 363.422366562 seconds)
done (took 586.685421461 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914033539 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.86508298 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.992457389 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.893156048 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.86378646 seconds)
  done (took 10.637359238 seconds)
done (took 11.745314344 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367395896 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365553384 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243894617 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.368739175 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218723779 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.384621809 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.349167139 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208901087 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.290799867 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261820913 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.288527424 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234507681 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222160438 seconds)
  done (took 17.917379736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438209259 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.187583602 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265366596 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426990981 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22665305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452191407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.465246529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.186112612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326578996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205064454 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206303126 seconds)
  done (took 17.498410932 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444607469 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.187478917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254266286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433132849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231325536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457292534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512286848 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.18837963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347071902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.208068474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20318443 seconds)
  done (took 17.576520655 seconds)
done (took 54.100672033 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229687112 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.35011247 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222883166 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.202615925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.197861937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.198255344 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203466633 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.204730817 seconds)
  done (took 10.930196745 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200881042 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.198177172 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198566709 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201869569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199999926 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.201440414 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20444905 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199209935 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20373113 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197764645 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.202993945 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197471627 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204137535 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204375096 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201172195 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201407795 seconds)
  done (took 20.333698481 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.199130383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20132421 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.199442294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198716115 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.196517687 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197480288 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199895344 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196375215 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199715205 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199979909 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199240507 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199038296 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199870072 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198595217 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20074849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200714897 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200228134 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202197902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203246013 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201762311 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.200717389 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202489217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202569221 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204005686 seconds)
  done (took 29.933892623 seconds)
done (took 62.307911959 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.194017281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.197669741 seconds)
  done (took 5.504849469 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.259454737 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266114676 seconds)
  done (took 3.639875654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20346642 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202107037 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202825069 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208049111 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206529531 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.20762517 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204906433 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203063621 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198983938 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202355921 seconds)
  done (took 13.15416471 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.203724526 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203010895 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203858581 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.204472183 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20425017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.203538629 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205529229 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203678697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20543651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202448227 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203584059 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205183844 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208653613 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203551009 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.207362062 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205846716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204942806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202062779 seconds)
  done (took 22.798094174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218018452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225934181 seconds)
  done (took 3.56108272 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.330372119 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245508027 seconds)
    (3/7) benchmarking "month"...
    done (took 1.315407136 seconds)
    (4/7) benchmarking "year"...
    done (took 1.302514465 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246251911 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.221960424 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243722293 seconds)
  done (took 10.020763446 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.204969488 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408545802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.524422317 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.773458876 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204081607 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210895796 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080887201 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212426636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210639202 seconds)
  done (took 13.946117411 seconds)
done (took 73.73815783 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.2013478 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.226350984 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.204458268 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.20837295 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.49648687 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.248901329 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.197681337 seconds)
done (took 15.90277027 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.182768164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.1881485 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.194718942 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198711947 seconds)
  done (took 9.880641925 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.206418196 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556041758 seconds)
  done (took 4.881866234 seconds)
done (took 15.881983946 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204727506 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209442788 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208413094 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.207939264 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.209540711 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208552249 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208443636 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210871335 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.209673687 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.2108672 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.212181848 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213005858 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206046013 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207226495 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21151506 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208151844 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204254023 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210283607 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214474045 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204230177 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203886283 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208955036 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.207391803 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206496784 seconds)
  done (took 30.126760733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.206837396 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.20915993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209626689 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20721332 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.204308809 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212521877 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212480661 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209407855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213713383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.215159184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211169222 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210324072 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214469848 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211454646 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2130387 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208066147 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.2100535 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206576196 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212266494 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21134072 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20995215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208491911 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210997487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20892368 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.209295132 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208318891 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.20976424 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212471466 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211193162 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20706654 seconds)
  done (took 37.425028849 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215425036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215865496 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21246858 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209204049 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.21382972 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211136194 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214482788 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212177027 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214445623 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214853677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216237028 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.217766562 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217160421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213228547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.21503022 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214596991 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.211355514 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216194853 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212753476 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215721464 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.208796159 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21774351 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217433922 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.217361669 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213215291 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213564105 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215066885 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210439167 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211858436 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215525645 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214626426 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215619734 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215355631 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216535681 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21140867 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216007341 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217298221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224000261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210972178 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215377623 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212291376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215688664 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215180077 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212320355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214398581 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.213759407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212755707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216295405 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216715953 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212124467 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20966765 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.21122667 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211956925 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212735383 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213001033 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.211952142 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213613136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.216080088 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21015823 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.211857124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211654451 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215492373 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215877459 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219622054 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215822963 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21554926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216494732 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214043038 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.212653588 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.212940786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214306479 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217180477 seconds)
  done (took 88.551514497 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214283466 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212905959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213242252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209684896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214772946 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215676471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213522203 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214380105 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211973787 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215754485 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218457175 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211766121 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210152523 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217309327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213767097 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212508492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215544728 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214748866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.218575905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213895864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21363168 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211477321 seconds)
  done (took 27.832903818 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212935042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217700513 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215063769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216204761 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21580045 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222908699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216526966 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216956582 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21530651 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215077521 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211136448 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2164638 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213065223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214431805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212317803 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216865088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21735653 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215598417 seconds)
  done (took 23.006138743 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21089824 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.212958158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.21616181 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212544826 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215901582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21649599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21283643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216290611 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219152455 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.689400581 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.214168997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213607044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.215699466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212819275 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219830456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213438234 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218056073 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214367485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217342932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21401831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215071253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217103681 seconds)
  done (took 28.334234091 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216142474 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214040249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214019525 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213621357 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216515312 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218123391 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219489941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215002475 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.216751581 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.216992465 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216055777 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216083024 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215046081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211169398 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.213676662 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212990348 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216066545 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214019327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214184196 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211857333 seconds)
  done (took 25.428876682 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224086522 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223355573 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226000062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22263824 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220989007 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224211978 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222780473 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224372796 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224041935 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223185644 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220599582 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222831778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224256333 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222561327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222918665 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223478491 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223897967 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222569163 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222141609 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223182461 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227167601 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225493734 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226121404 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222989561 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225859394 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224997481 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223136349 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222456907 seconds)
  done (took 35.393260344 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21450815 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217579451 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213012361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.216006736 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.215032308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.214970757 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215646686 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.216694063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.219978907 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215252724 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.220312773 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21803342 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217638172 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.218782793 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21842579 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218658606 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221167196 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.216645456 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218022632 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21764036 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.218092233 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220310472 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.219786729 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215473491 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215789573 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219276674 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217061688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217780662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222905844 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219524791 seconds)
  done (took 37.661808349 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263151717 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26515604 seconds)
  done (took 3.661149188 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2170084 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22088336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220337962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218593667 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217805825 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221271366 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219124625 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219028895 seconds)
  done (took 10.887545178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219506355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222692505 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.220096467 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223126943 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.222572975 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.218441386 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226784519 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.238485095 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.223549651 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224968849 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.225552975 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226021272 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22354624 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.22213684 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22491582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224759915 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222510019 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.222739595 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.222565773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.223869381 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220455965 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22133989 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224623297 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.219520223 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224290475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.229664474 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240808796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.222331618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222037023 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225874409 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22426309 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219730865 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.222265073 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.221319008 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.219757667 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.221027299 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228808401 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243383184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.229176021 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238945124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221188982 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.218916518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219928653 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223772467 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225238115 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223266662 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.222488666 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223406326 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224302957 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225440693 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225342088 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222770459 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221828972 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231852392 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227438147 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233318004 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245664095 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228552912 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231047733 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.230135939 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255690686 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250451969 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225824205 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225370762 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237368211 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247788403 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233236133 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239286253 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224043467 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226641918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232554189 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257286029 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25020714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22758697 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227264136 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225213722 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226188224 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227515887 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231799255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.24583982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228665093 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226260408 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238624981 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246718795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223792157 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.228219695 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.227386513 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227583774 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227141286 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234538486 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248594248 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2263824 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227777033 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.223875038 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229644882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231124448 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230331047 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228452598 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.227372014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231446815 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228541474 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231000667 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.236225782 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229286975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229532634 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.235059852 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247063317 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228506846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234639851 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.229589192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226268754 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227615871 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.233322251 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.224144687 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234825952 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232752909 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229363773 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22785538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230674261 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.224881243 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241969804 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255422643 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.231545414 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227677334 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235613065 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235489813 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226960735 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.22895289 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231585462 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22983089 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230562266 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233168852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229225104 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228066307 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231254553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22633148 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228843305 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.227557394 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229632382 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231337008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230831939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230907695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234466942 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230797063 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232570757 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230528143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.23890256 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250660102 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231323341 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233889175 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.228868765 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229785515 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232270698 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.230200773 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229103836 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23321255 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229536125 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.232334823 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229763528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23203039 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234203648 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.231153144 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236417513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232405623 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232952209 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.233828663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233445127 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.234711141 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235529091 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23328928 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234040419 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232716238 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234852359 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.239558906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233316149 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23383073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.232711159 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232434149 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232326458 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231972204 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234033337 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241608669 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.229718194 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242880959 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252441603 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230556871 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232008281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237050504 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.234051053 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233651083 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.238624465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240795312 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248832596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259752377 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235833696 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238648209 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235965348 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235261215 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.238039165 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237967137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233796829 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236329044 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234209057 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236011253 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.235183421 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235113487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234386786 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238061828 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238621468 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234588764 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236060511 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236393964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238070407 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236310099 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23676267 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23408328 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235172183 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230455393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23425818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.238714398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.236547709 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.237119153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237993534 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233724492 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236721246 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23859681 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235875642 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238017761 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236887754 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236344109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237566293 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24203545 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.254015268 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.234961579 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241636073 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255962567 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.233726295 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235992178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23760241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23613023 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240767537 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.240402229 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240775793 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238293415 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.235214674 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238913165 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239314464 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245072543 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236508843 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239142603 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240623222 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239914257 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.233713295 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240350922 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242942402 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241216439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241502791 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239642285 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240773991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240160743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.236849702 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235026534 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235065853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236230247 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24396111 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247111663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239682713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242293821 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24098053 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243215532 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.238835522 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.239351557 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.239181542 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251859893 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261491163 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244632379 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257787977 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.238715555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244672991 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258544833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.242684947 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241156414 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241963898 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238179154 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23788236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.238374324 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242506588 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24107954 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240024183 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243607366 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.242287292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241128286 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243171395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.240599112 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.238588587 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240755994 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240550431 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.237898164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241011633 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241835592 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241882835 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.238690639 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247952457 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258055338 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242270693 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.240902886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.239895314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242958021 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246412503 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.241527105 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246239074 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249651895 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245629623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.249965706 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.242181347 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248685145 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2402695 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244562737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249799445 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239159649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241036652 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245104291 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.242781922 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249832195 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260711859 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245434879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245564886 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239435409 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241829317 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.241785133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24544521 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247883362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245016048 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25130297 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.27248913 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.246784889 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24780839 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244286182 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245319539 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241233303 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245744258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24695819 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244278065 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246106833 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.247204074 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245314438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243785047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.245555612 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243161441 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241348844 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244092771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252812302 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264097523 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249528301 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243731583 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.251134961 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262568464 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249776016 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265981097 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242764245 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243185322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244665864 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.2467181 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245262611 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.242235369 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242816766 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246940545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247425631 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244778177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247835625 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24592077 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245167132 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238890524 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253766992 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268586759 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245209151 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24317947 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23985504 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245525957 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246597984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243842866 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24182343 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.248061615 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251502591 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251098928 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247555917 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245874094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242427233 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246699967 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243610351 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.244979799 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.243348304 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.240451885 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.243670179 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24487826 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24482517 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24207553 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242443801 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245784563 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24672471 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.254541354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.26283541 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.243616448 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24560115 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246378422 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249259976 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.245936086 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246059943 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243233898 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244940947 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249260598 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252822855 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247664857 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.245888583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246950777 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.243121554 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.245787625 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245857125 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244257338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.245936035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247302919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.248503852 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247841797 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.245672718 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248362726 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246909609 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246143448 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249111729 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250249975 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.255742357 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247353086 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241656923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.243543708 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243057829 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243974212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246680145 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255974696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268904275 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.257519937 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252881074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.249547001 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247767614 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248770996 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25161342 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247146185 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.247814662 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.246338272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.24557828 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247265692 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248337687 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246360887 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25224745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267412225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248621096 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254359705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275078468 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249118964 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.248119536 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248214176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.246579206 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.245753499 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.25074378 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.246858917 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256099907 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270155668 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246837891 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245243805 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.249814176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25219 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251671862 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246989946 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253551412 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249008565 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.249370068 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250234895 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249816275 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248640946 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251124833 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251712527 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.252244072 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.254036715 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.247065093 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247656265 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.249985108 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248186882 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250976178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247944189 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247036691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244431442 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247808878 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248496689 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.248412261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250543358 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250267609 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247219715 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.248318871 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248782069 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251815352 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257988557 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256376852 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247464632 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247525222 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.247109133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.252326645 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25021766 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.247408133 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24884024 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25040689 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252029144 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253271014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.250581383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253856286 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263936986 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271408053 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251920456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.248995162 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251617385 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.251507795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251787786 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248062182 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.250454311 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.254244542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25894645 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.251342918 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257486524 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269877585 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250068673 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254447916 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.254460068 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25604746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253508004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24949926 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250666555 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.25428319 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265195675 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25430276 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266740991 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281235106 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.269552202 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254523559 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251532449 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252103581 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.252252319 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253799094 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251066191 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251779447 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25353285 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.252802499 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.25361375 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258099153 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.256882094 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256142119 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2562266 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251557193 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25379038 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250645555 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.254298091 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250655705 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.25369837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.252184508 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.252883361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.253639771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264620391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.279752293 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252022491 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.251909101 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.2495564 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.256308688 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.25680301 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266350181 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.261148823 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252373469 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.253458407 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254356344 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253001853 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254231828 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255461764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253593398 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252872558 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.250770969 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269282182 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27904943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257063947 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253316027 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254447966 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.254401639 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255437494 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255646828 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254492067 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253941836 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256235081 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258800906 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.25598239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.254091848 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.256972062 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.262479946 seconds)
  done (took 741.481522872 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253760909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254458113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254856204 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253550744 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252526755 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255150788 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251858159 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253331326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255053497 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253866064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252352276 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252205013 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252626258 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253152148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252221338 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252622919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251794656 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250291741 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251295144 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252392184 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254599325 seconds)
  done (took 27.481674019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256353061 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251098393 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25311101 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257164754 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252391476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255916843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252662313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257094187 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256071098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25361268 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256256502 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255767421 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.255265181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.25420244 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255375143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255797492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256313338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255228198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.256743878 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255083898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255871168 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25463261 seconds)
  done (took 28.777987267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.257150959 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257406486 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256980761 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.254330738 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.258948375 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.255144701 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.261207915 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.257878771 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.258472414 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.25967029 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.257881477 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.259885885 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265426445 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.262921751 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.25852769 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.257985595 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.25880489 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.257652534 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.258394585 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.25545234 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.261837291 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.275625565 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.256588426 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.260742688 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258483652 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258646898 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.259508161 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.260722439 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.259826225 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261795153 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.259433113 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259200827 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260655714 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.261177838 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.259859495 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263641799 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257960985 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.256454729 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.25850932 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269876656 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.279439733 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.259070821 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.265480595 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.280959646 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.259153515 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.265551589 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.267401223 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.25752599 seconds)
  done (took 61.695906544 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.845502085 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.864247814 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.86156843 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.869086517 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.872426729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.87102122 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.872628729 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875269826 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.865161427 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.868454696 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.8671126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.865763528 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860420172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.866512941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.866834015 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864106072 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860613122 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.864253921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.859189826 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.866682888 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.858327429 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.861389688 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.866192343 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.859320522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860859388 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.863448385 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.861621126 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.863011403 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.864434112 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87326711 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.867315813 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.863850549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.872083569 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.864920676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.864446817 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.865678756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.868267361 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.860262692 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.872583541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.866370954 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.872840047 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.864503329 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.875794911 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.870689423 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.874453845 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.865535627 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.877073154 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.86866832 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.869890645 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.872933304 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.8665157 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.864907285 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.87584982 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.87618136 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877599265 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.878112427 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.867073925 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87984517 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.871669054 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.868058693 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.873045381 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.870002663 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865389657 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.871437009 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.870654579 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.87876587 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.870628057 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879192397 seconds)
  done (took 128.199033893 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266956605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.264419022 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263731138 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265442508 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267366292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26457971 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264856872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.266003977 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262323289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263854562 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265255431 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267567746 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268731124 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266622673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26645948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267588406 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266847373 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266739114 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267497198 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264541792 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267680647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266980543 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265824131 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26798703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26709185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265528325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267821313 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.265033671 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267291159 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266749353 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269999404 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269334526 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265021091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269968826 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268622624 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.266915062 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267091558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269266635 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265438855 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266252226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266280255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267631035 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267215244 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265655758 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268259204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267389156 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268236152 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269578206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267431761 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269146864 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.267771891 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267415213 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26730269 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266788852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266520211 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.267350652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267922374 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270132177 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266839183 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26891214 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269478972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.267960943 seconds)
  done (took 79.734101983 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270457812 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268821129 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268555091 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.266699893 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.270576852 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265611129 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268741367 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.270225817 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26971417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268434322 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270238377 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267368825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266957924 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271285937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270014215 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268496129 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268368978 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265637162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269986193 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266592515 seconds)
  done (took 26.549475108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266059586 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269643218 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.267371017 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266979591 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270130939 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.267202257 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.272099285 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270450367 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266737209 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270098912 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272296082 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271743511 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269074752 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268848401 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271749483 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269660678 seconds)
  done (took 21.488133138 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.268667271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270228428 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.271827028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.270868062 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269685487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270084942 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.271393461 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269760254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.26767356 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.272218076 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.270409685 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.272910718 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271420638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271758318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.269079489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27326464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271074892 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269194849 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271909796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.273474069 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.269410653 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268393416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.272280146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.272591513 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.269894438 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270442148 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27106446 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269905958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269591677 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.271988452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.270414541 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.269017804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269911765 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269633463 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274151419 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269143407 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27303763 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.273445677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.271522951 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272833363 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272577003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27001401 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272737306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273091099 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.270049145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.273374963 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271916443 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272030169 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.27178625 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.270768042 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274945882 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27443756 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.273170649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.27422589 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.2735839 seconds)
  done (took 71.106067647 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274465889 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274882184 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272073425 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274457916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27431829 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.271402768 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27545456 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274691434 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272211983 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27484952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272251883 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275878791 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27186321 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274444665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27237015 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275386036 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273119389 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273516703 seconds)
  done (took 24.109884325 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273383777 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273087476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275832114 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273205333 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273874794 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276253972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273323535 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275892975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276435297 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272818149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273621726 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.278226075 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275572374 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275661273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274766139 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272430819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275467049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276744915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273273182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274715125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277873253 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275784666 seconds)
  done (took 29.2320283 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.276264462 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.274917633 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.275940506 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.294424133 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.297412198 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.276213119 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.275815737 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.275356305 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.298910489 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.346111608 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.338942018 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.296652788 seconds)
  done (took 16.712081085 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275607455 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276962106 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274858415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276709838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277109511 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276366272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276059472 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274923047 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278005483 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27509502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275814547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278212342 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278981502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275972469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278535812 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278525733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275824025 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277013127 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275194035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279174448 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276959637 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278660273 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278343416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277294661 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277771698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277581157 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27981962 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277038421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277664692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280369406 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278840044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277056012 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278698022 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277173605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278460446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279485135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276310039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279852013 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279512781 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277960965 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279515957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280783874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281344311 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277289879 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280121789 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27723175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278633583 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278784463 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27748812 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281694195 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280833114 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277199301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281014017 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279816753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28072574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282402285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279385892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27938446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281516023 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27830981 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278906881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281253027 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278613408 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279706614 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282357789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280229452 seconds)
  done (took 85.561053249 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278870623 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279994071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27883296 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278848878 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278124382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28009058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280019969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279048432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281260574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279901404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283442094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279930565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279948119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280261427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279990937 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279594803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281374844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279893748 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280345769 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283449643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28013212 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280398602 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280017289 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281216973 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280752731 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284462939 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279670119 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27943927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279841336 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280485386 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28186414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281239813 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281636944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28022378 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281667655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28185006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282217205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283120983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281653878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285177643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2836191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286835674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283456771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283228914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284439592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282198341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28221103 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282579072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281948068 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28283987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282823204 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282653025 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283269377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281175737 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283177911 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283442993 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281032814 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283168378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28333465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283612094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283648792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284504733 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286769176 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28421923 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282996859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284548788 seconds)
  done (took 85.789759403 seconds)
done (took 1777.344805571 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448945284 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40224549 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.283723149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.297265179 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.285809485 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.306071883 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.296227694 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284900579 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.285226865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28396948 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285068255 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471548405 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.276898014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.286400819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.285981777 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.380835696 seconds)
  done (took 26.364951841 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.314251048 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293230657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.404209932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312324972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314881059 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476125503 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350696647 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294711032 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.460235607 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.331906341 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.285438208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314511246 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.292300392 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284121962 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309842839 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.477918131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.536704048 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.2791747 seconds)
  done (took 28.527583433 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.734405763 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.307724825 seconds)
  done (took 5.239391678 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310466187 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292000494 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.292439535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289727427 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279311773 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.282378219 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287677142 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.287713077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.293361812 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.414679773 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.293677397 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300865004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311161399 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.292099232 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.288039716 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330834221 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445616485 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.290395661 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285903842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.298112826 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291821549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.39605956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.333545597 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290790197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415286814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.295321254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29510205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298162431 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.438437188 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291355263 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292088911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291486645 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29536563 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21696716 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.776011069 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.282995238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.335484435 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.302920284 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.28902788 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.438294072 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292845636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297591583 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.287408596 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746713576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.427805192 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406092637 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.3031907 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294458641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293540038 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.355898098 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.292493855 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293655009 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335471915 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079703529 seconds)
  done (took 82.945793237 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.292520529 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.283399716 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479922933 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.291113153 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.282175039 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284809562 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299478537 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.563843033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333480359 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.284764122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.57275089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831317591 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310618027 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.334907745 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.135864687 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349745265 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283440335 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299408812 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282740551 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287909005 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826591793 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290923133 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28461363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.50606619 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322396227 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790404749 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285141389 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.285313112 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.285189183 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283160867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784624985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.309576738 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.339760321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286995002 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55207497 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650367483 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612317202 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.284158986 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303690727 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286198648 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.287290317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.770952108 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629302314 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.283921578 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.284073468 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779977809 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.284292815 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.294369924 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.292387477 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53190025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283274782 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.287191053 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.298297001 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.282988753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.28418018 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381213413 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360019484 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788258096 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283302895 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.286471496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.331753678 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285425635 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.289044978 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.285692023 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286505241 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632834 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428550042 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284385506 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773641778 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29918757 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84336301 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.299826605 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.296178446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.428427765 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.285975234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.283380018 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.79733954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.319408168 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284843288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612164711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.28315205 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.575149426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.303017755 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285909187 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832750217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.289939651 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.289780276 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285052371 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.300607692 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.283240544 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.301781513 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560268563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.331575625 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.28413631 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.285362042 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.322417959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287038082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.28618925 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.286905692 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.841251905 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.305942686 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.285865764 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.28859249 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285649921 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287679633 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.28649665 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287267931 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550809598 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285798878 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.288917844 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285670915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.285867366 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.312771983 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.512381049 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.292380401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.582637564 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288049748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28609928 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28690011 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288475589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.304440335 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287594962 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.291420066 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17541806 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591147455 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303439055 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.302919014 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288200807 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286274651 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.287444832 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289837541 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.324941033 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285694372 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024940564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323196208 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.313915643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28646574 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.298922377 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286706708 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.290306788 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.289160025 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579015584 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56321871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.437488299 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288473874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.28839231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.025374843 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350954316 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482301534 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290396295 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289252723 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534756606 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.50117445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.287677416 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.289730243 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.290266772 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549206598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.288654497 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609249208 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809812406 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.304784439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288749659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.02900938 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.015524487 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.294186059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.292782999 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570497984 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.307771334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.289952912 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.29009327 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.290493047 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.305428808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.310115832 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29695575 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.28959851 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.290485368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410960527 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49724601 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.290885231 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.293240951 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786931105 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30072967 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299883376 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292078374 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.29158194 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290470872 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352584801 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.295604643 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.325056784 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.292369386 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292001892 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836930592 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291699579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.294410334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.496601031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936317795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.305764984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288921443 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.30735257 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.194136954 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814191495 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.356208657 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.589334049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.301656974 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334311767 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292990997 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317987269 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813371903 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292987645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310115835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928343311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.308788349 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.144084897 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.293234696 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292082174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878189669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307436653 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.295351031 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.294075731 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292446672 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597991032 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.293689629 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.322045226 seconds)
  done (took 488.190695793 seconds)
done (took 632.46085003 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.291727691 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.295395287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.285736094 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30645151 seconds)
  done (took 10.387204496 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308860859 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.304664397 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314426087 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.30471241 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.308491804 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.305800579 seconds)
  done (took 9.056507725 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.297528552 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.300931132 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.306655543 seconds)
  done (took 8.11582245 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.50051902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.332385445 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.618534864 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.331248643 seconds)
  done (took 8.996637806 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314012753 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.317722531 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.314695557 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.308966518 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311347592 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309875687 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310409872 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309208369 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.309818748 seconds)
  done (took 13.015855831 seconds)
done (took 50.775565174 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.16023337 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.467764437 seconds)
    (3/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.981435389 seconds)
    (4/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.301393708 seconds)
    (5/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344724422 seconds)
    (6/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.31019006 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.33658808 seconds)
    (8/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.28758658 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.3027444 seconds)
    (10/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.405620849 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.316246521 seconds)
    (12/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.442206851 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.360904121 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.3169402 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.307796257 seconds)
    (16/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.39063039 seconds)
    (17/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.301658098 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.383039248 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.424328099 seconds)
    (20/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.359018326 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.569910682 seconds)
    (22/286) benchmarking ("sort", Float64, false)...
    done (took 1.52531232 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.369576046 seconds)
    (24/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.987122305 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.393262945 seconds)
    (26/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.382902191 seconds)
    (27/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.30906518 seconds)
    (28/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321124537 seconds)
    (29/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.380398408 seconds)
    (30/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.445249305 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.369637073 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.399587246 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 1.726550271 seconds)
    (34/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.359781203 seconds)
    (35/286) benchmarking ("sort", BigInt, true)...
    done (took 2.303859989 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.316361779 seconds)
    (37/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.288050813 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.34350382 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 1.690969713 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.309515176 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.445575693 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.351064472 seconds)
    (43/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.349140506 seconds)
    (44/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.306492388 seconds)
    (45/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.353305112 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.506632938 seconds)
    (47/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.410964952 seconds)
    (48/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.429578905 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.972094859 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.319864787 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.311913051 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.303907064 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.329278991 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.499218758 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.431477467 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.039196316 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.35295786 seconds)
    (58/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.3195885 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.355309389 seconds)
    (60/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311243404 seconds)
    (61/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.376623629 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.313427696 seconds)
    (63/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.29795194 seconds)
    (64/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.324204349 seconds)
    (65/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.162947927 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.31799101 seconds)
    (67/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.428393316 seconds)
    (68/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.324415305 seconds)
    (69/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.406381492 seconds)
    (70/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.599670035 seconds)
    (71/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.317391521 seconds)
    (72/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.06984951 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.375244811 seconds)
    (74/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.354985897 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.380173989 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.302346625 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 1.496647688 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.295382335 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.306355814 seconds)
    (80/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098476809 seconds)
    (81/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.343577876 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.416299615 seconds)
    (83/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.313651652 seconds)
    (84/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.599041812 seconds)
    (85/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.300405632 seconds)
    (86/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.329040666 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.300238143 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.38504924 seconds)
    (89/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.353640928 seconds)
    (90/286) benchmarking ("sort", Float32, true)...
    done (took 1.851566804 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.435772513 seconds)
    (92/286) benchmarking ("sort", Float64, true)...
    done (took 1.91630657 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.339537647 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.308216018 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.312434745 seconds)
    (96/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.336599678 seconds)
    (97/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.392066835 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.308958812 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.436700642 seconds)
    (100/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.310587699 seconds)
    (101/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.986095181 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.30997715 seconds)
    (103/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.289399968 seconds)
    (104/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.328182166 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.326644727 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.386536735 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.328650156 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.466949459 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.356340501 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.30411126 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.344280603 seconds)
    (112/286) benchmarking ("sort", Int8, false)...
    done (took 1.446121739 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.046163686 seconds)
    (114/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.447589324 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.312659962 seconds)
    (116/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.011609609 seconds)
    (117/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.322889999 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.02709337 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.423523611 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.353247648 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312409062 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.384295136 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.334094421 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.397667736 seconds)
    (125/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.485142201 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.526480712 seconds)
    (127/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.431707676 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.409890192 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.341929197 seconds)
    (130/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.15174103 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.062746151 seconds)
    (132/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.330412987 seconds)
    (133/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.296227719 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323076974 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.314992911 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.308423169 seconds)
    (137/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.390639011 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.352492571 seconds)
    (139/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.347910274 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.305642095 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.301477828 seconds)
    (142/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338327996 seconds)
    (143/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.408072633 seconds)
    (144/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.362881997 seconds)
    (145/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.202146644 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.415913653 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.314034595 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.31368376 seconds)
    (149/286) benchmarking ("sort", Float32, false)...
    done (took 1.457681184 seconds)
    (150/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.33743308 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312248884 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.978700668 seconds)
    (153/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.429699706 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.338115399 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.366941259 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.463907046 seconds)
    (157/286) benchmarking ("sort", BigInt, false)...
    done (took 2.305817123 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.378295824 seconds)
    (159/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.361461791 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.465536823 seconds)
    (161/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.448192424 seconds)
    (162/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.453059264 seconds)
    (163/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.502659804 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.31851021 seconds)
    (165/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.420861926 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.303236357 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.496614955 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.31621123 seconds)
    (169/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.323422756 seconds)
    (170/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.323026842 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.452700571 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.390905046 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.315735285 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.388300715 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.371921613 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.326239096 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.316827232 seconds)
    (178/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.381151651 seconds)
    (179/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.414738875 seconds)
    (180/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.054022882 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.318087658 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.355830641 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.126640697 seconds)
    (184/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.324995606 seconds)
    (185/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.340435979 seconds)
    (186/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.308937266 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.001940006 seconds)
    (188/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.320954493 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.322077759 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 1.547835811 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.321528166 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.318822682 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.961783075 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.39505811 seconds)
    (195/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.315597427 seconds)
    (196/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.298593714 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.471257074 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.459074276 seconds)
    (199/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.323063622 seconds)
    (200/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.466130563 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.404900547 seconds)
    (202/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.543589052 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.525649537 seconds)
    (204/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.325445796 seconds)
    (205/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.324950372 seconds)
    (206/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315558488 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.405443882 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.3325916 seconds)
    (209/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.30938472 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336654922 seconds)
    (211/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.492773426 seconds)
    (212/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.377755369 seconds)
    (213/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.39012742 seconds)
    (214/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.326450693 seconds)
    (215/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.399270186 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317447514 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.325283524 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304416855 seconds)
    (219/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.329245227 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.434490404 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.339878642 seconds)
    (222/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.336563674 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.345631989 seconds)
    (224/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.434891134 seconds)
    (225/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.40602554 seconds)
    (226/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.344743064 seconds)
    (227/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.143637063 seconds)
    (228/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.299910033 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.326269327 seconds)
    (230/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.330561683 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.053990617 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349981458 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.972305985 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.347443432 seconds)
    (235/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.328026707 seconds)
    (236/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.324826857 seconds)
    (237/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092605054 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351871388 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.413814006 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.32024966 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.411288398 seconds)
    (242/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.333800624 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.351383704 seconds)
    (244/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.454786226 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.332796861 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.434818073 seconds)
    (247/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.329712309 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.328722927 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.449559908 seconds)
    (250/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.326976901 seconds)
    (251/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.393587863 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.471209503 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.368519301 seconds)
    (254/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.431647911 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.413227275 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.395719349 seconds)
    (257/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.31921013 seconds)
    (258/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.50632568 seconds)
    (259/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.331498455 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.328816956 seconds)
    (261/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.514229004 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.365716189 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.327585512 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.497074362 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.335629595 seconds)
    (266/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.063972403 seconds)
    (267/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.348894325 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.018785351 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.31839407 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.515231428 seconds)
    (271/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.429823032 seconds)
    (272/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.302041367 seconds)
    (273/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.376459871 seconds)
    (274/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.414768459 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.346892452 seconds)
    (276/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.31581354 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331349703 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.500771216 seconds)
    (279/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.430641737 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.322886463 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.330842715 seconds)
    (282/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.368751013 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.322502516 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.605152233 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.341473094 seconds)
    (286/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.338555198 seconds)
  done (took 462.695884616 seconds)
done (took 463.905611984 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3605593 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371279139 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.324521589 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359926535 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.442148212 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.501025611 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.336423709 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.365768328 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374919613 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.375157631 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.333045188 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.501532483 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328755935 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.325804687 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.327700869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368512545 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.315193768 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.326992494 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343687701 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.360499755 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34448091 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333534374 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375856072 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.504264561 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331982746 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.33047417 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330954195 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.350762735 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.444190576 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.330594063 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332989406 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.340542119 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.316335992 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.332892417 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.324108104 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.35139214 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.339539195 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337810796 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36188991 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.442993955 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.329216942 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.333779743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.3312158 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33074101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329884292 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368772883 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331104645 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388246687 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371232665 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371905146 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.317311814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.346033393 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.338329536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.329358087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.341073509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3301861 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.387111624 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376316865 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.349288183 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374932723 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.323671948 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.334981105 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370869507 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.345463839 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.341956878 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321421547 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.328500871 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.368985607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.329902588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.334412216 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.321028371 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.341084328 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332608305 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.344852613 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.366270927 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.319380192 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325813371 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.331254337 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.341607545 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.331104373 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.379249789 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373676163 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.379882562 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.332064754 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373359717 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507199775 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.343051714 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.333320873 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364703254 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351556461 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.343745988 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.3435781 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.36751006 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.333815883 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380148619 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.390505499 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341425643 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350529409 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.382775285 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342677452 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.333542047 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378398195 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.330728981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.330099774 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.333930228 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454741783 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334756263 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.333384467 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366769673 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381722571 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.394576084 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.330870577 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.343665485 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380183823 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.343163401 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.394412191 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33522285 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.329405703 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.322679613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457377691 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.337695054 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.341135502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381438568 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.394422737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.333756949 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.324656042 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.33503316 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376236162 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455000023 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344622534 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.450018114 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.335435339 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.338024121 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.368783843 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38057052 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.369937692 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.396920026 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37980191 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352030781 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.336071621 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345137023 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346246132 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336913451 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3932778 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.332459127 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.369092728 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378611706 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377342968 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369791275 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.457220565 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.340764754 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.333646008 seconds)
done (took 223.700827163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395245818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.324599472 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441961598 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.333000833 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.437711867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.435126562 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330001078 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330454851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330095723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.711721298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33097736 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.330822181 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.331331831 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331440039 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.417722775 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332799757 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330595512 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.723750209 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334694707 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.407113884 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.332159744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331308532 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334840076 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.715624708 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.332821895 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.329357377 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.406016533 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.335435356 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.680704652 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.328635934 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.330780674 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.681182117 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.427621322 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351225928 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344160023 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341468908 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438817928 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.354139573 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.416414057 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417041324 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446775804 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.374461433 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.329065179 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.332072003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.336867674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.335142871 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33468295 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363197463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.335594823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333062544 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.677426438 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.347138642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333794413 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334120734 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.33327436 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366788606 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334853994 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336758258 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.429297545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.337425359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399541748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.71719362 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.716213931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.338043467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.333682716 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.335747837 seconds)
  done (took 104.596728902 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402307231 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.412962676 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448295712 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354179136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.387963002 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45146651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.355815493 seconds)
  done (took 11.0496253 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.343363926 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338911964 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.388633926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387580857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340244314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551319656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33958135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.349487889 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336144239 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419263876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.350129631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338711876 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345842634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.337816528 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387757682 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352215742 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.455553942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.341597464 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.339838865 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493569791 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337037481 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345963814 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413669773 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.352397559 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350211729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.347924383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.285980015 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339291839 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336805169 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33844893 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337528701 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4484683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341765937 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.338295146 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337384176 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499029959 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339163284 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.33722327 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.34019801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.329414855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.340201014 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339855907 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342051908 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338483538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.340501808 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363779093 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.341388962 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.339933401 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.342190657 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342706953 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416636654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.340021008 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.338836659 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337146235 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418854768 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348456178 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.341151044 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338611844 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342638524 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339317374 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495483803 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389387957 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.342663799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38939747 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341678702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342800079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.341792693 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.340935812 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435486158 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341833778 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388431942 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.339304376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.564079579 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.367558633 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344767109 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345282855 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346381672 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342482459 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.340640371 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.351704079 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338984561 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343523033 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350213897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340845069 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339498179 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.525434274 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500025264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341109016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355515451 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349684635 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.341771097 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.41716897 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.344260549 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341058253 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395619325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.458747543 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424383161 seconds)
  done (took 138.868101934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347815087 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.351320496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347634686 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367127372 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.3463256 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.345853921 seconds)
  done (took 9.349005181 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34670933 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344343672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.345497698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.34591982 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344736341 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353976453 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353966411 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34487407 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.347955643 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3462407 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.354231284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347345709 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347737657 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.346103529 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35498129 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.34557376 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354261006 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343921799 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.345653966 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346071286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34356954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.346397511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34554031 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348043741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.358406292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346496318 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354294808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.348400045 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346020023 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35336352 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.367208033 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355491871 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348601985 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352913609 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.360194857 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347640716 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350329199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.348416382 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344638396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.356856657 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348369885 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347327829 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.349232834 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.348746288 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350379193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354426426 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.351919493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355742435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356850231 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.349895346 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.350653303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348636882 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.357138838 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350386832 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35095315 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368535632 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353295583 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358584039 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.349351527 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.350415435 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.349345809 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357805 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349680317 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.361309092 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.34705144 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.351382786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351727147 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352548418 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348780464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.34991765 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.351367506 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.347685582 seconds)
  done (took 99.499298149 seconds)
done (took 364.595599779 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.781291516 seconds)
  done (took 4.02992815 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.439394751 seconds)
  done (took 3.690748783 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.220647171 seconds)
  done (took 22.479728697 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.393986293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.360448656 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.345843611 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.350942481 seconds)
  done (took 10.700780356 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.598895815 seconds)
  done (took 3.84868778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.353224516 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.348897361 seconds)
  done (took 5.954281333 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.638969342 seconds)
  done (took 3.887341195 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.810049824 seconds)
  done (took 4.069999521 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.346577866 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.358217968 seconds)
  done (took 5.962252245 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.328699016 seconds)
  done (took 3.579051278 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.982639085 seconds)
  done (took 17.233798498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.341770149 seconds)
  done (took 3.595311282 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37385613 seconds)
  done (took 3.624270182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.874099369 seconds)
  done (took 6.123494949 seconds)
done (took 100.026546336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.344942981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.345862656 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346483464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.345279776 seconds)
  done (took 10.633735291 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.384718795 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.386323582 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.386062577 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.395642124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.387887359 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385120516 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.37637762 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377227478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.396910636 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388263926 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387683229 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387735676 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.385765846 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376783849 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387804774 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386591352 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.395920448 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387798046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.37822252 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388190485 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351759506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397607349 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388138278 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353152876 seconds)
  done (took 34.468179597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.870499803 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.424935312 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.505717446 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.404461884 seconds)
  done (took 7.457657836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422918849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421904739 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431246195 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472012991 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494872038 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.432952636 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381079983 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.374882111 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361757095 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423709158 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.483187699 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.419810812 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.498457958 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353934804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.545005374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353587245 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353598918 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432500228 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470412621 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485199429 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354168015 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432161577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.432993698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419730981 seconds)
  done (took 35.5041389 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.355057836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371758884 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.353364343 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353455106 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.362194406 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353165976 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.354953238 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.355311733 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.354333177 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.881302661 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377981744 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.364729695 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.876187468 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379214085 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.359182779 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.355832748 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.881304785 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.895723074 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379707021 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360709438 seconds)
  done (took 30.578616704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.347874475 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.348710203 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702819663 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605382225 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.350838501 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.354612567 seconds)
  done (took 13.96439379 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.427557253 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.590072268 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359813628 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.708731397 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.785477423 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.360843578 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359576616 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604443029 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.916927366 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.890731133 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422871678 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430189848 seconds)
  done (took 20.113415789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.350286328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.354224817 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.367086621 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.37484568 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.411846229 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375588426 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.366738149 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.350507703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.418750181 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.436076785 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.376960663 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415626031 seconds)
  done (took 21.856091497 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447336406 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350911237 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351550511 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414267107 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350088627 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199321909 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411045447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086316584 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380619676 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625162075 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351585338 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449014696 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610269941 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35965076 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357728496 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.348262525 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584579983 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843647563 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354083921 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352153546 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391903801 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351000545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359560973 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.573926956 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359362508 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352522989 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616978389 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352442472 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637218517 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368614879 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365120182 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352388426 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627614728 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018173859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48280868 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564160794 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364137662 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35441859 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.341966478 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.352489507 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361519784 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377095963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365211552 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353475447 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35269505 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36331096 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101114775 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.386176982 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.351473086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354695847 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6148388 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462458893 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.358793329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354134905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458031621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353808011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.359479369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353396005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933886959 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356402514 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368110409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.360670503 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366273181 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361720455 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991152477 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.383639818 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.361501711 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360098074 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354561966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355791888 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379206972 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35454271 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381945045 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354037013 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068800361 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384596575 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355862231 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91257886 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362178952 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.361901901 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589314975 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354996591 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355851338 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.355660319 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356425784 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07426475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367345349 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.342745415 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357870481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095149539 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596333153 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382653911 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388378682 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582983232 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.344184387 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357528958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.357662789 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359479603 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381504406 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.095455936 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38378796 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363959293 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617171344 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.573634423 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367426842 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350708989 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84759694 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394770789 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381091219 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362716511 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578609192 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952873787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39900374 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362553351 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384243675 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358301876 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112778905 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372714606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.466238513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372744383 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632143065 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.175291912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366671543 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428077478 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363686315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.36014052 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362490028 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368251302 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357850021 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.566854491 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399381842 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376664263 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.369974311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359971817 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.358320922 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364338457 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.368075665 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587232959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372581541 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642680538 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360196874 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359196123 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36080528 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.585954165 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.365942355 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.70443705 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627337439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374008295 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379284859 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380140098 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380729883 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468959151 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384629267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.364168286 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627464439 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365653582 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366968513 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368721182 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368177726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365106846 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369189178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392150898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95548533 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365899634 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369252728 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249805532 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376344685 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431450959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370139945 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577320798 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.374868626 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380580632 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.369401248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.358878956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590135383 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375737699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361327058 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445515412 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850255734 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974604983 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399460549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.363102435 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362514107 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.359490484 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36274445 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362748864 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363175014 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577668383 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38520829 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37586738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.952924731 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385154031 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364311102 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376839227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378729938 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.369897472 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362688775 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.365309447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379298576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376593674 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382778972 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508134598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37891961 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364577161 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.883001682 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371640694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362836791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36461507 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399999288 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366784169 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251690411 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654704445 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371894644 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628441319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36751813 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.388198803 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365644997 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366744718 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371932554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39377133 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394477131 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378034629 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367585737 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372837604 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95190705 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125707022 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912304022 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386597316 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.374118203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373322311 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113809248 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39097358 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36713256 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605517784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127256113 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391387982 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858909641 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.394364318 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128327784 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635848479 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601606425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374851495 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.376847634 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633550082 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583960443 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404833655 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369223716 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373582632 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.354719198 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95033714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393190238 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450702208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115734248 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397057264 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370647852 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.447630686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369312225 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779564556 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393090305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369030771 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376145257 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388592459 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262143437 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402482886 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369653296 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001332292 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403476892 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.864629286 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395032974 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587046464 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.39022538 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.377545556 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.367951057 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.377587943 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627040871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633537627 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379375431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382429561 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92153181 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26721282 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.377503708 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370069063 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137305254 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380798981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68051726 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.39045973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.38951483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37824233 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370870621 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370830596 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.368166005 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376747361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350189306 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872772142 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.37360902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399734521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392347848 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379041101 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63084189 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.387978788 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96242269 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627635294 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392562199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397176473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376540794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372780427 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.367837587 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372175921 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371495169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467281507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603922756 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372574658 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.364772798 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440898792 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593418006 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372319388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372989722 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623345084 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.376610763 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.387754535 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100404548 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430329002 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375768235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397267568 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396609294 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376292843 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450819216 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592235674 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391908617 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385571113 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788731607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398383155 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382202319 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.390628948 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474788838 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387142339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379730018 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171928577 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969328759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150276065 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975872756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664180383 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382134742 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378843619 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374166033 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541464687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374054634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651454112 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375907533 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.397706981 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40081795 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376503153 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39419728 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598668603 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654153673 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375843921 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383029798 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382139401 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.376335381 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388418011 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591463447 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878047655 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94147995 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379483082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387948032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131840306 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67665317 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376851895 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376560047 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376482749 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.394879924 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386125289 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.390761247 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381747426 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528996979 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640675966 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060658393 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412986589 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.404890996 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152184207 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387478314 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643549947 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374484251 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596380248 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976756642 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111480704 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653283991 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449344674 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596173644 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.385223003 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544266511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.386744535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378837153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379493289 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379907946 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.378332464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391140816 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977287368 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672846368 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.385419169 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.389487479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411499226 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.392393262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608130286 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117364772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609058827 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392322355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385323889 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379769699 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977654524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67170265 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382925597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.385614253 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634396519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386891025 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405763644 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834775158 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.378086632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943942789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357274633 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403379703 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390093773 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098991247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986214632 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.402374039 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889426172 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383420866 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380371705 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662790964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388239458 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387468092 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664908805 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386806523 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381891484 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607723302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.984713306 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175358636 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388476228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391784987 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.384804736 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38325314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46634095 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388074578 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390188582 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811219621 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410013702 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382424366 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395587538 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.380570016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383870482 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.397522939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382999136 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.389354264 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.392419502 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.370664646 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412428856 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388089689 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976008763 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415904022 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057435656 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.709544081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643848153 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389579928 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.371606804 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388316641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382693736 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384833824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384203443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409344192 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95252725 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.387027473 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.403416524 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388553303 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603451333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598882072 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385989683 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605257729 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398614831 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405608007 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.371349597 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385170287 seconds)
  done (took 979.177871403 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432608564 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.441340359 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.427033439 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.441837895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44508079 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.443651411 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.497099651 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418838278 seconds)
  done (took 20.835793443 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.393973199 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.396957361 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.38762282 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.398773865 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.388842514 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.871689861 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.402466636 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396449508 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.39788714 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.401633613 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.386752293 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.374441057 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418059121 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.396910492 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.394994125 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.400437331 seconds)
  done (took 33.107739924 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.327457173 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.529216652 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.28041494 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.434411163 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.441193483 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399589167 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.618738807 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.410309875 seconds)
  done (took 26.735123358 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.401786381 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.405741587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.402662741 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.40381265 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.404214192 seconds)
  done (took 8.312394081 seconds)
done (took 1243.995786726 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396302435 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399545403 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.396568274 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399649759 seconds)
  done (took 6.885522046 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.379604426 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.384820291 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.383196793 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.399406198 seconds)
  done (took 9.840530241 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112959608 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.042040701 seconds)
  done (took 5.448588113 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.894668516 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.902071769 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.887170078 seconds)
  done (took 6.979583893 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696473624 seconds)
  done (took 2.992537971 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.322092333 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.282867207 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090105908 seconds)
  done (took 7.992865142 seconds)
done (took 41.432922136 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406261359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.736967177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.553442056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405303939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552758504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.553172168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.126164421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397025419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396284552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.395328029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394046188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553904398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.176920084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.735677638 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.177667837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.641765568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.554219274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.399525424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393601947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393929972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.129000756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399953678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392756188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406887478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.554353402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543315222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397685307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.661685499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39909696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398024924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.543682983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.400464306 seconds)
  done (took 83.468258052 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397483754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420301083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412048177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393413686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422359488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417607456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396288044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.409814157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392724117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403102892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408669196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394946543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.396389617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.395749162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414738596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39451354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.395052342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398130754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395778477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395957645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.395648275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.400276668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395413221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395054874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402806321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.414442221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421450472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396900506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41283981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402342661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398525794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430413685 seconds)
  done (took 78.219051329 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400458899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418552192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.400744794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399116614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395658826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406991462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398645561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398061202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415502088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.404299526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414141269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.396789033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398872943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398787771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40121986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405572303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398789632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407165315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406996752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398523055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397688088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397950125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412316231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.398708679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402702444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.4171733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.405896246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397402703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398354195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402040336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426422762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.401199026 seconds)
  done (took 78.224349789 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.6820656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.405626883 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40771301 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.392417886 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.40867597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.407192721 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.399273655 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682242304 seconds)
  done (took 15.085577636 seconds)
done (took 256.292624199 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.399668171 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.399646296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.605199155 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428445831 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.398574591 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.427987432 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.428851787 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.628709197 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.38654182 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647430445 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.429300196 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.425230531 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.414279551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.426388483 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.682766533 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556474726 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.30332106 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.403079721 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.745230363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.426117246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.672230928 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.407602788 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.679247115 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.35648911 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.429577405 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.401860765 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.413010853 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.293092444 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446308793 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.757595507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.410424991 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.389754205 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.507799952 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516017999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628676095 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.566788967 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.406649415 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49016723 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.633524571 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.40928771 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.413025777 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.178184002 seconds)
  done (took 84.271785733 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.408919413 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.52745231 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.4089529 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.408672006 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.411155196 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.528403385 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.50741607 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.409360297 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.410173309 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.410047201 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.409396733 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.409481354 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.410238425 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.41019452 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.411466568 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.411192625 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.410356838 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.421078803 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.422025627 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.457069628 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.537842661 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.435873307 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.406253169 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.410718355 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.51470619 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.548511602 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.410786416 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.404479223 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.45735268 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.412510024 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.415155828 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.458100747 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.411658513 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.41336086 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.528466306 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.513373679 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.44459742 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.410862432 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.529194615 seconds)
  done (took 57.571512053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413832695 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.661044509 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.841070667 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421653906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.411784816 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417420293 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.492829573 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.415325737 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.417797091 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.418035809 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.569059814 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419224114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449341937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.869077512 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.417761239 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.41436411 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.415271362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415113164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.680594406 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423692808 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.513757122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417822226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.493135674 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42557061 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.438070006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415935491 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.419888387 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.976128481 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.418881819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.570245062 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203953279 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496588057 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.93515433 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.855902036 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.21060524 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.42337301 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415807799 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.580571417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.456662256 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.416592738 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.494409416 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424245547 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.856280297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.072393645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.440162182 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416229147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.006292409 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.577364703 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.664006421 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434953877 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882037701 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.426198169 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416770781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421388763 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.663166429 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426470892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418351182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.989005211 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.447266459 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.496045503 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423960582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41823505 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.679285268 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423634702 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.668870985 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426383876 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.427414653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439852249 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.857938276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.427267499 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.091175788 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.442624367 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.41876844 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.572732999 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.676464179 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.03694008 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.440932833 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681985734 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948279707 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494096642 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.430066882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.965366431 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.500288157 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.425755785 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.421807366 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.420747156 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.418415987 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.466031903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.494287344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.019994791 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092910461 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.020379331 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518687809 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.434429546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.420298316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.990022695 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439246982 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.420811143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.850491458 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091435009 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43914218 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42816154 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.090333752 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440493761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501439356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.426685588 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.86756148 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.423439206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.468030897 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420528074 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429412789 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.444087526 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.499746738 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.425723755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421633732 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061431865 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.598723706 seconds)
  done (took 186.579649341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.415034597 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430720358 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.413429831 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.430483537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.413889381 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.422926228 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.412881936 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.412905516 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.420780296 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.413044838 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.414403279 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.41687816 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.416468676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.423733819 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.428537084 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.42516891 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.415905086 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.414644117 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.414802114 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.415909367 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.414466673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.435068254 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.419520036 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41498344 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.416642493 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.418692232 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.423809407 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.41907195 seconds)
  done (took 65.050207058 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.424755648 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.980963599 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426958105 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.556154634 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445822357 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.422813456 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553298411 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482808975 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.431685283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.42115396 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.4222171 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.72375042 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.424974369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932020797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.616097212 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.573904484 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.938539765 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449605451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.421468042 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421546763 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558295881 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437226545 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.723056346 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995127033 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.432494859 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.99516075 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423010209 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.42610247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.424274204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987932312 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.439462214 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.730578514 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507397967 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486021941 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.998047761 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951328557 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.956034183 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.574809641 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.425467475 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.423325549 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.423910768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.417983693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98672155 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.428477289 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.429385308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982774217 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443836907 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.428553607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.432048591 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.424208464 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486968742 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49365711 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.730975818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.423377889 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.510194944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.439243478 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.556925105 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.805597161 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430039408 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936031632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.433110603 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990713903 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447872947 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418720039 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.426884651 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.433479812 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.57639752 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.557997186 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938140219 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446926764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.935523857 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.596226424 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.427900737 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424948298 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.429177644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.99032927 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.943342103 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.600368185 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.561881407 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.621877747 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421995817 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.427314786 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.419227874 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.5047015 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427443705 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.993123743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.966514506 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.452611544 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431009529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.430499185 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.430265055 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609542138 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.017473875 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.507053199 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.942812373 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.755318822 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.731743529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430147256 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490591486 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.44894427 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.424080254 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.431101021 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.486484789 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.850784485 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735344082 seconds)
  done (took 170.465186536 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.669947124 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444443547 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.528661154 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.585172093 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.035682801 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.007959488 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.471110165 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559995928 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539973502 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.693578584 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.429922092 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.524081399 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.646257671 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510863946 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.129118207 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499654249 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.524464386 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584738618 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.568760667 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.436179512 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.0739062 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.735002595 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.613890212 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.486757163 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.534323375 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.184528055 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.007092646 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.959772257 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.606080008 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.430042727 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.950969078 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.427490096 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.351848313 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.106590902 seconds)
  done (took 66.184264559 seconds)
done (took 631.423499812 seconds)
SAVING RESULT...
DONE!
