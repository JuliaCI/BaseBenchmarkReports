cset: moving following pidspec: 14175
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.870756737 seconds)
loading group "string"... done (took 0.515549042 seconds)
loading group "linalg"... done (took 8.391236449 seconds)
loading group "parallel"... done (took 0.173437211 seconds)
loading group "find"... done (took 1.29876556 seconds)
loading group "tuple"... done (took 2.093324765 seconds)
loading group "dates"... done (took 1.256974931 seconds)
loading group "micro"... done (took 0.197903717 seconds)
loading group "io"... done (took 0.604607648 seconds)
loading group "scalar"... done (took 40.303599443 seconds)
loading group "sparse"... done (took 12.430322549 seconds)
loading group "broadcast"... done (took 1.166570656 seconds)
loading group "union"... done (took 13.666157849 seconds)
loading group "simd"... done (took 4.696235988 seconds)
loading group "random"... done (took 9.412026134 seconds)
loading group "problem"... done (took 2.100909621 seconds)
loading group "array"... done (took 23.641055463 seconds)
loading group "misc"... done (took 1.105559157 seconds)
loading group "sort"... done (took 3.352998223 seconds)
loading group "collection"... done (took 20.315757442 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.651075395 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137996935 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166838724 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.178946137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207411935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146630205 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16527823 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561076076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.975647985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.224231662 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.146803579 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539680463 seconds)
done (took 5.779640317 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.23900275 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.433945693 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130783782 seconds)
  done (took 1.192190761 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079116495 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.179108152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112336668 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098568148 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113491496 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112740144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113008006 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112556747 seconds)
  done (took 1.470836413 seconds)
done (took 3.616043693 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.469640173 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.837644945 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490771183 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128419091 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.161445082 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.154785207 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327912363 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164633752 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127692405 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118408165 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172912238 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.354312485 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.495049977 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.935840383 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099084157 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132095027 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.101833489 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694390503 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.09254119 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.136687346 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.539747988 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112970856 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105045751 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143848688 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20610572 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133931439 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176133992 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101139997 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685514754 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105757574 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18772068 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.10470385 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175738474 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.235602785 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.100356538 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10919398 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662722915 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.196950134 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.135735506 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.083784955 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674880233 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084836281 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188695715 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109178821 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11453909 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191759127 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117651257 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.098983992 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10308479 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092230442 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.17398673 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.464602754 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.114343843 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.156793835 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.11206214 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68464233 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102366801 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161097983 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143828928 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11184127 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.086079718 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.112070053 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154825792 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114938742 seconds)
  done (took 19.639797366 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119872667 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.14149128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096459051 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158166665 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139725399 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083997334 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103291767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082507807 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13049539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186242703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137300783 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145763803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09430569 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086442013 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.121611769 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2523959 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109332613 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124511109 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101387937 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09512292 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145623587 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113040967 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096629849 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111999825 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172433108 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221911442 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11349072 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126165658 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097447181 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118089012 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145428456 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150607733 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094457411 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082036656 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182774695 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124641335 seconds)
  done (took 5.256123124 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19439577 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118307187 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193292274 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180523195 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147467157 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18074931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119793427 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251720156 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.168603142 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184288786 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134012262 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116492756 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11521405 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098047684 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083429217 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098225051 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.649584119 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180080741 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151132433 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126621981 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105252431 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085189937 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378539206 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102687029 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082211618 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105202685 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090681879 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114511529 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193468163 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08754642 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217820562 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121222674 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10998615 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132863058 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198027346 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130684992 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141213618 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090907974 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101313126 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215488746 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112130951 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079731579 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12448733 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136599971 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133608437 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101919554 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096966403 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244959072 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102707397 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107358023 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.04339773 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.205924309 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.116096216 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086329682 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.349179208 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120487467 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106070468 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084750166 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288876849 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135708969 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102504541 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083034809 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108871339 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099453059 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405384355 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112975894 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.975248727 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085779634 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16042915 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103786173 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107229087 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100344648 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0909565 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107710419 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10619142 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104804036 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099606088 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085975835 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099908761 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089960038 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121798305 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10559571 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084063452 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167367282 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.124825559 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105383993 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131355921 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106921493 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084019965 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136101053 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102636472 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087195317 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.147118426 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102752871 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108134766 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120265154 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087294171 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145249537 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102137691 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184855549 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08574606 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130188513 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106046492 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131887711 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105613959 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100222805 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10180196 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082624542 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099185864 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151619665 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100021258 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084555449 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104750871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11378188 seconds)
  done (took 23.933939918 seconds)
done (took 49.456851118 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.435322101 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.1140957 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114410227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098326152 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113281137 seconds)
  done (took 1.586747528 seconds)
done (took 2.273653763 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.345981053 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176607186 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121884979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179946743 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106789206 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.186337889 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165287276 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.121087025 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213138129 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086221454 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193098384 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086982107 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106792859 seconds)
  done (took 2.804283466 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097744673 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120493346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084614816 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112926345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078799562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113676092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110248431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118290232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110239481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088953174 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094678155 seconds)
  done (took 1.816307688 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093380363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115709891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083221837 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109098553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078121636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108600147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092146932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119057684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108358141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089459904 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094552378 seconds)
  done (took 1.77685064 seconds)
done (took 7.077943537 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.023741629 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.352215593 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120780056 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167052546 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333358643 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212185342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.521981889 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13434536 seconds)
  done (took 11.735175154 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144870351 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085255295 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101442803 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08535927 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098156131 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08288093 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098750481 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084220272 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097350337 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097619829 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084062798 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097653785 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085712874 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099615129 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083338496 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100423186 seconds)
  done (took 2.27324175 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1159736 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115443287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104948138 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109407417 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0868613 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103546978 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104672888 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088644737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101401698 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.1017246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093643511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107009582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106045818 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085387321 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104949839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108987344 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086318444 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103407049 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090208232 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105261052 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108466266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087394576 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.106615045 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107487007 seconds)
  done (took 3.225761636 seconds)
done (took 17.920704544 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168751994 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102678929 seconds)
  done (took 0.963898388 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103798822 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121003465 seconds)
  done (took 0.921762919 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109508633 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099943956 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137896873 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116586454 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083908034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098719364 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131274737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084806958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099823216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100320788 seconds)
  done (took 1.762707846 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088139165 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103863784 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091751708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12199157 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11070815 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086005282 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106383504 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103684931 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.089717372 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098047338 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.091827896 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117867802 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106270417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120057779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088299318 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106866875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109763301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.0882281 seconds)
  done (took 2.526493309 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084350006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100729261 seconds)
  done (took 0.887858935 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08600686 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098181178 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085940013 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100950407 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098462365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082979898 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098824389 seconds)
  done (took 1.350744138 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.514225629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236905102 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331326027 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116764134 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137840653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.374303216 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137543745 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.11512841 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097070488 seconds)
  done (took 2.802455879 seconds)
done (took 11.913039246 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094674797 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.19198182 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.516312268 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118551251 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082443781 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161885424 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.256651388 seconds)
done (took 2.12867233 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363018526 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110311358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092332593 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082281267 seconds)
  done (took 1.34961753 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08315666 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105723624 seconds)
  done (took 0.899313017 seconds)
done (took 2.95913232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082345553 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129649201 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081632451 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099971261 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.07907768 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100159389 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.199180481 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097044846 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081399673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098465134 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.081195427 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.098612307 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082022361 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095945428 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078887761 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09760739 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079503795 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094966511 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07904453 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095509445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078926687 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098802669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079184418 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095371619 seconds)
  done (took 3.026761556 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102241327 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099894792 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107690485 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088360874 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10365389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104133461 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088743826 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099281293 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087890539 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100626997 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102380379 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086270614 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10082419 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086494042 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101570057 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102109298 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087744049 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098812321 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085365062 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103760704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104204267 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082723648 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101925911 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10367331 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085843465 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102432111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083949558 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099068476 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104028772 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086236475 seconds)
  done (took 3.606594745 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090576077 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095993133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080214166 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.108113502 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079344645 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100710444 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0797902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09670715 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080561116 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096444165 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081373091 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095622622 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079426018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097771557 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081595793 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103898289 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114564788 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080668319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096047984 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081148985 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103038937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080373132 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100015283 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079363663 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09721999 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080134601 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097249461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079916312 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097228947 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08029107 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10152369 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086386867 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095837835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093389605 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103341862 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09570967 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088696911 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096669055 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081428838 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096997551 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080043897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096636405 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08121066 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.109386169 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082977742 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098463886 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080292627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099521407 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08060863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100928714 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079938439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097088411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098675472 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081558026 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102383262 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08056539 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097436744 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080026795 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097517064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080639179 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096196302 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080266225 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104204208 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081159636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120769635 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107999709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081099 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099547763 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084800458 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.104854686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.082568764 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115613196 seconds)
  done (took 7.339605617 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085549013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108009971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082836843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099296461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078542726 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097572418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104023464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081594259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099527124 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098579685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099319577 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082910992 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099803933 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084675724 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099854279 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099079871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090900641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096506433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081689119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101826409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081494997 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105430684 seconds)
  done (took 2.780327858 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221456202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10727583 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143862436 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115649033 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118702367 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098225616 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105060405 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106646812 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088907746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107841072 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108021618 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088438265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118671284 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107903985 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090483999 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109309609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105235972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092198002 seconds)
  done (took 2.757483566 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096257857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101603196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.123692971 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084940441 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101580409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086381231 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107524972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116437971 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085655159 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101258492 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093191954 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10373288 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102923078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084764512 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103305149 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084716627 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102984664 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084065668 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111465911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107308933 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107313757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094349157 seconds)
  done (took 2.913629041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100559543 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103824737 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130280432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087228353 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097513505 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081563432 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107636089 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083304333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10947759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102407778 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083469262 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09902865 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090703168 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101823256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106743299 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083874671 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103194318 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083742603 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101856699 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079651172 seconds)
  done (took 2.668710848 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12468351 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116872448 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116573747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110259497 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117163316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11586797 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110466319 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116471855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116610653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12902359 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099777791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116407003 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127047611 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107037422 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116883151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128614614 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128250845 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110203465 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115979753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116286238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111395956 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11707734 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127064045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099558178 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119383565 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116730772 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098604798 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12351634 seconds)
  done (took 3.988690774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08475758 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100310344 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081408313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098303912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080898451 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099623102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082595057 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098422351 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083847973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098880411 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084014208 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101809071 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083751898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100562287 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084091152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100725641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084491897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098896348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081611335 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098651793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083727184 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101180413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083796992 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09904768 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081996766 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101167569 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081793343 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098464174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084490581 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09890353 seconds)
  done (took 3.4763333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093210909 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107331877 seconds)
  done (took 0.937436115 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081576098 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118168542 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081679564 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105242589 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089806499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102598037 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111025671 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08942573 seconds)
  done (took 1.517209405 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10866714 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122307681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090096945 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114510045 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120657357 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.103798114 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166948526 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107842615 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092550026 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.103049211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121361043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084793297 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113019566 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09057182 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.111672313 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117407901 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082836661 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112308097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092781668 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105091593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090674974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118789465 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113856415 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0919079 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106341556 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114921377 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099381934 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.115168827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107880014 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097285532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111248958 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078976366 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107059648 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09046991 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101126249 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.121043946 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102375545 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108616256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094729366 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108474424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112979698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079930481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113124121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091422542 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115457145 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108136409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090830254 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098600475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086336991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108047665 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.080792091 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106540838 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079633145 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11316381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111987793 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103349972 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.105837282 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108046368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089520228 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106212459 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093036855 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10669772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113144952 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08842094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112848453 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094719407 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111267527 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08147155 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097207635 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082593942 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112726786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127686838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.097273848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109127726 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108665211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084389539 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10840447 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091459041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111336279 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115014443 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0904917 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113291765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099683679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111550559 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110499559 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094582894 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107393653 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091916413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.107356685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127660941 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088055031 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101486243 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087137062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115552192 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091397283 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109512638 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087745241 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117348347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097645598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093372871 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112784896 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096956951 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.120772317 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112203709 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094018414 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115978497 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.100459199 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111950936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110856527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08538949 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113482274 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090749136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115267983 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082816119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112371261 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092998851 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113571727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11560301 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088396598 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110154009 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096908512 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115734663 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105264846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082672784 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108638121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09061812 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113860327 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.119237834 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091595329 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102244263 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084381569 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115982299 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093605401 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.113980168 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094098781 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112422281 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100209388 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087460174 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112625076 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099859799 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111084054 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.114255276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098638044 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114756263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091510342 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.118101093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110667603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088704456 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.118495762 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092890062 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102472825 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09882837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.11149416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108636259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.094348357 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116931413 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09386876 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113556464 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090911781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.113825078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114176935 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089173587 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112947053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091647462 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120783318 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092613979 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10301474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102924617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103335004 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105275186 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090303154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105127128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090988123 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110923959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085054031 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.110220516 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10925496 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105270052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1193171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09521065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.117710242 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.118444235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093724329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114259329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094206787 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114586781 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094494866 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116518679 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112271967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093634588 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111276513 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086406416 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11505299 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118509442 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089745209 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.105443599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.090378483 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11312149 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101582704 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113225827 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094485905 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109580843 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113751941 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095647544 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110180246 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091568617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108908588 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09287587 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115242494 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111167289 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093272722 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117521001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094567063 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.104120798 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115064182 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091720943 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.117173727 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085169897 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108878672 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089556569 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.115286948 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092972867 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111784156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082957557 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119963422 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120309488 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09563044 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.109553732 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.094316949 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123780581 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.112682055 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098817178 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113764337 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.098030188 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129302003 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108889938 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094624375 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.122564297 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.094500784 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102878516 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.116577695 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.092749196 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108192113 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093518869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.111563866 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09572281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117622334 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095509412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.103458955 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.113658655 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.092734877 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109295629 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.086099227 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.095573628 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.114843227 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12182401 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096351936 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.114286566 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09612631 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.114708472 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115797001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096827027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117271552 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094008112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111964099 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089376718 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.115837358 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106363718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088210094 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111465013 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.094542051 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.114474812 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09582598 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.113330428 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119075293 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.096064369 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114819062 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133537746 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.092553395 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.110092322 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096760926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117629557 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111977318 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.095363397 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.105545473 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101292695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.114166925 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101524083 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.114173819 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.104123126 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096354783 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.114167826 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.096659523 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115634574 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.096551494 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.114663629 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094652195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.115923135 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124531201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.092287839 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.121936322 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116515251 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098446904 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.11562914 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097320788 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113755392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090662637 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115641889 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114545279 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097359085 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114099122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098163526 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.115426514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09469924 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115091277 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115045262 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097529503 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.117386174 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.085006954 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.110699275 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.091740355 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115067147 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119868525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097470532 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113080076 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.093808986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117173651 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09385433 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.106662418 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09941526 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119128004 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.115714156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105453614 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.110633799 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095610139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125546372 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.104003328 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094186616 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107999621 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090709785 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121232385 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097520469 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.121005306 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114628515 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092273822 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.106995047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097286962 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112850388 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.085661036 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.108851945 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099003159 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.113641309 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092975437 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118136209 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.117539287 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09794662 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118911878 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.095220592 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.115525813 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.115557689 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088908438 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111754992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091901754 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.115184543 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098014728 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.112067672 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.088702412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115079032 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.095464213 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117250821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114927751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.094755718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121408465 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095195967 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.114761055 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118546929 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086997678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115761756 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095759566 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115326966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091232941 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.116118449 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097956596 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118926741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119978407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096486599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117788524 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096520467 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.109521788 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.095620681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.117582912 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.115379341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092235082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.117515947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102498793 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.109276378 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.097275811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118394135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112807028 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098061464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.117591088 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096248578 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120399373 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097000759 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.117987683 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.119040302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097021778 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117128961 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097294073 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114670029 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.12056836 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.093004908 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.123084743 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097344634 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118427954 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095098136 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.114028666 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115408238 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096169488 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115617467 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102197195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.11881763 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.092321912 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.113895377 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089995817 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.118735517 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120724813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101875707 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.117117758 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095713879 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.108729327 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.108198774 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099528639 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.113146506 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09642145 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.119610076 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101310719 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.119149748 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.113522449 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096599485 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.12182724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101938529 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.119824543 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.11264159 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.100111083 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.118150226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.097246699 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.115014543 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.096347673 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120045919 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.120642262 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096677352 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112698297 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105709942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.123278783 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119123718 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.096490917 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.119070144 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.096966157 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.108238322 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.097994792 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.118710127 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120348176 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0980933 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117229008 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107762326 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.11458565 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.115602485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102641381 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116257853 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.103024296 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.110148872 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096968194 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120693934 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118070449 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0879776 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.112914268 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093904968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.118062833 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096190269 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.11058984 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127670391 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10284907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.118569266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095481755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11606842 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086435368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.109547458 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089628094 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115834537 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111599447 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102009752 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11314067 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093385179 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.108851764 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096654727 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.120268345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.119856776 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090360554 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.108900943 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093954524 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.118810542 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10453398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117175844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.117617797 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099070159 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118131799 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.092053235 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12256651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089191097 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.122259726 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130152054 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099243985 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120793118 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.120535232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104768255 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119489819 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088347167 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119027627 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098231651 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.120554225 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.116390088 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096214312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128414773 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112963797 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089498893 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111452262 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093862654 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109968646 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103015332 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120894515 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119039325 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100582259 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.11593606 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100851284 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12533442 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116615249 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094909438 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114153516 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092436459 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112756377 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091157986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113145503 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095990923 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.115291413 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112902472 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096427175 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.108943665 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103574133 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121564611 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114879825 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086835835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112253401 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092886356 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107305795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095149991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10746927 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091936632 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.111422046 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091792995 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115915225 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11495251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094852749 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115373729 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.093948598 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104178402 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09727588 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114901447 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114891679 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089766644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113300401 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.095160698 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120684146 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119159008 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093094972 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116085031 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094349128 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119657702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088172975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.122134009 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09471002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115658925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109396842 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094405752 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114940866 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096232192 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115011757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095659188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114592848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117368846 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097928183 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106141753 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086683513 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116711221 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087930642 seconds)
  done (took 63.844521482 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154547251 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092320599 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105002016 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085416661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131475213 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105590341 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08589798 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106492596 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086944126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118984485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10388791 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085540033 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125849101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132177558 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130040881 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119123505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085988421 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10523662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085735008 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107017873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125608747 seconds)
  done (took 3.088147915 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109125024 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124650603 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12185824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127465399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096393804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123222942 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121583169 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122818924 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106732726 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11868537 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12619145 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122489919 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097537537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.118387808 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117524969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120566508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106132342 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117255736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123930008 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.122813843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101427277 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122930106 seconds)
  done (took 3.375492653 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09840297 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112932961 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098528425 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107235606 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093655452 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10712619 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.098645365 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.109452351 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.098271764 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115489881 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111063158 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093967403 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120612711 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088154334 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.11257968 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091231213 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122798109 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095335708 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1170077 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.108008743 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.115700732 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.10998015 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090402282 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116078995 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.127756315 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100136695 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119476793 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098036987 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.117401264 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098786162 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115649887 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.099754188 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.124094142 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.114674762 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093343578 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119080534 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099466584 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113270019 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096173164 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.12291021 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.092254046 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.118621266 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.12013722 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091483785 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.110490577 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09538796 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.113274968 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088006071 seconds)
  done (took 5.933278151 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126641305 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160444844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096328457 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133280356 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128979496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122573012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095829221 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148534984 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.092237313 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.113628909 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.139188218 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110493778 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115740416 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.119406127 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09854289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118150546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114927933 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093572433 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122351522 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114513822 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100129515 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.118148141 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.139943368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129460826 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.099666835 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113524585 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.093297179 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.120476304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.128704156 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120777182 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102078076 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122509853 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12911287 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11557521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102018996 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.119279636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130598055 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.095233695 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.116750946 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09183639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.120758003 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122733773 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.097213084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134529225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115498987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116541114 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103674994 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114293093 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127300378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097784921 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124663165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128493623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101142145 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119731007 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1192615 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131124306 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.095912054 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.112561327 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106328182 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130058229 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.112361222 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098662936 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128758297 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116587776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.125669796 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130463102 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097708564 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120747878 seconds)
  done (took 8.909362022 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101746642 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.137222384 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131443959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131997965 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099803645 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.120623459 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119682846 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100122561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120108733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126730849 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100156644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167918757 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113244262 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126242373 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100408231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120622148 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119618504 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100581187 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120098198 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119995797 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.100174795 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131530784 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.119755753 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131517957 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132786591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093287737 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119578694 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10031026 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132469089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120288544 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132614966 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099704105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121191908 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130543988 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133662818 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.119389838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090960339 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120403999 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.100613496 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121552775 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11259134 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111262037 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121355164 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114038746 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100518503 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120917445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.130461594 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132929205 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126842429 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107483602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120751912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131663537 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100238345 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120675571 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13071953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140135017 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131832535 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131132254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100770124 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131406989 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130768127 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138255306 seconds)
  done (took 8.24187961 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091653432 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111489229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089779648 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109155021 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091340388 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109580042 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092061301 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.112130941 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091640193 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110935743 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091923108 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109749973 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089790462 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111746921 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089343093 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109446429 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089198427 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108864857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092179678 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109444784 seconds)
  done (took 2.84052757 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100130752 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13298413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091063332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120376227 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114743437 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099104125 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115782831 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115421916 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093069634 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115139012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103872295 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126011552 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112514633 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099319487 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125926083 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119232254 seconds)
  done (took 2.615131234 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112016708 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125892246 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.138214553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097369153 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.11186158 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.120617195 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092774671 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10877467 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088274955 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12261787 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.097809725 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124463298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111660259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090855067 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.113253693 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098262544 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108588476 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096492546 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11226452 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.137318276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098011031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.116186355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09261599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115459908 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.115786134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099692295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.119320981 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110390657 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090140109 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112423148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095424401 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119998662 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087662021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119233066 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110900133 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090162566 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112413766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.093379568 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.118425526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091918515 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111462543 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.115592149 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092959137 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113535835 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088648949 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113840128 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087812239 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.119241174 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.114629812 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.095584765 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113373398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099952994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119686977 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.125038972 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.102310095 seconds)
  done (took 6.766604569 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107145738 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117083886 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095786056 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11145901 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116511195 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100940973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116284444 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095264752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11458292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090127494 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115215143 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117925677 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094877148 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116964049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094773532 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118223624 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087019472 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11442187 seconds)
  done (took 2.7684224 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098114568 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114200342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100032511 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114080661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092398815 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115517027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087290557 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.113235354 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091017503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.113673823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113428394 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09495939 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111178268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094507213 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112941899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092756951 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115724953 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090332346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114000179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087580651 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11676744 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111505457 seconds)
  done (took 3.138161236 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110281036 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.145953974 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.128932284 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.133990998 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.120392068 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.117711526 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.106773492 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.118786179 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13504916 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.096615899 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.117047979 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096067679 seconds)
  done (took 2.270998881 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1169848 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150777633 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111694444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095659589 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126700818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118361486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098204064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118843876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131138548 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130946403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098640486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131005757 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130314065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130094981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105070101 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126903801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120001823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097899656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115939918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139950369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118968169 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11057553 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119528541 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118742481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098271908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129468669 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130377112 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132106501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097589914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131902601 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126916413 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118967251 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109483002 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132664263 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116567774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131351003 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099296885 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140396663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126627954 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130668315 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094838764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127977444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130999762 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126544106 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131994272 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098982169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125829266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118777556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098540576 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146253091 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126878853 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129758358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127229855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109579928 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131804944 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146604887 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131988578 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129245295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126671535 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132211149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129789302 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10714603 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130386905 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132373097 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126626877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130718986 seconds)
  done (took 8.918880511 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132394766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113512758 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119415144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133786406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10920604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120001385 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119589353 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09846732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118927609 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115789049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164889261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098523393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131432862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130427332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12013722 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09930323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1192448 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130836877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095524552 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146878615 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11987179 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129663702 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130821764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130861752 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111900703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126912885 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118792721 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098136971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120349095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119562153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126137781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098814604 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130854432 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112493738 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108741353 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120848426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119866025 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105426557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1212275 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127534501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130734899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141721997 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099498858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119803255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13361026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098620396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120575995 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116591608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098926862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116544986 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133238162 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133193153 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132628829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10876088 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120791631 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120870344 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099070078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12099747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120187199 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10725026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133001392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12047697 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147452842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120611589 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099048539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131149958 seconds)
  done (took 8.778893635 seconds)
done (took 167.211426689 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.111479861 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.151411579 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.129892209 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157060699 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.115975476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129111977 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147894334 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.107876234 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.116700879 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093775066 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.115936153 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118847944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.159794583 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.114723936 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094313493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119379353 seconds)
  done (took 2.840025221 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.187032739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.296323016 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134264639 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.099117077 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.122218104 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095546611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1214287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100027939 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117714623 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128723284 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09645567 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.118959505 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129040137 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096728454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117066878 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096317556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12949142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.117716555 seconds)
  done (took 3.166686457 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.125118777 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162131283 seconds)
  done (took 1.149203149 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130169526 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192932031 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318175736 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171827992 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.145142714 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137405111 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148894389 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136510728 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200869642 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139259495 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.138507964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.122896971 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146474051 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106964725 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125740836 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100651119 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148073316 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.124447233 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102450135 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124950016 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146380413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101519105 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.129356306 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.124315261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191924188 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138955805 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101223159 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123891947 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12274831 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102438313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128810052 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137407874 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.136878998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180327603 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.128309958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175578236 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131191403 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122457732 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.102427263 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121732863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104170949 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127376339 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137829713 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10022753 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124919739 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130823518 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102131873 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124426125 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130533577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109562547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130560765 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128132153 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176523029 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.132587261 seconds)
  done (took 8.230500328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.843969856 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141650341 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124721846 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.940129791 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153078695 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113338928 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.073860671 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120751414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.27484471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.821495776 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113050308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136989369 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244486941 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.265036504 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.161558247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34939537 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705880886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135295357 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12673427 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1646705 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12927258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1483953 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140194645 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442808519 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.12184186 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098240984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126224885 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131965536 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173476728 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098928658 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124820751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193995965 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300834927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19198533 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122139626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120052749 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098656338 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201708419 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259907513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229468356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18433074 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116860315 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097496747 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132748115 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141882935 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095015472 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198232418 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186851573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.208594132 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102204468 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133348169 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130014578 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109666924 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.197322045 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09601217 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349805621 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.353081898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12042727 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128854136 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117341175 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278240912 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121316266 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238763213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124771597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22712028 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120268936 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817557541 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181037437 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098324581 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130664785 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128762529 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104035376 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132646031 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181190965 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415721043 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135554522 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126435697 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097859277 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255973609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099022114 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120853224 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176758304 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123243375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129959582 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114313346 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134930582 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.204941294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260045164 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133623961 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10587668 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12586617 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133571319 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099954763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.247381301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23048306 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171596891 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228078372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133570306 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176703045 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.201900092 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131728125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186231987 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128442571 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116579997 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132642402 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22823591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155404202 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121678003 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103762637 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128381827 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15775118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101702047 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128392903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182407618 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.499960654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179936691 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117877681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102096545 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130372877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176633744 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129111475 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275823539 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130186992 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181661053 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128570191 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095319248 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130749421 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177613394 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135712823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129831535 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11113899 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129686436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263585092 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23542026 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136586873 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250339123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193118716 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131222513 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189019612 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129976337 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182797214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130609716 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110064459 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122762449 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817507949 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133976832 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106190942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127438546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20602044 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120964822 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100117954 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120871678 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096560508 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819609312 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102121745 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119798652 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099810261 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131652802 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129191855 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104113132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127179569 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174815886 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246658203 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134132238 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128987366 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099165752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.198090784 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100844565 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121925173 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099716909 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122999331 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130806571 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104596262 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12387635 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187139781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196171928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.211664463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553421586 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122128528 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098887227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244590608 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121973638 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319176904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107040923 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238425052 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.205091925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097362822 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351836783 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182925673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205613431 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126383499 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186270062 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119551003 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128356055 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178217979 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098387935 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129501677 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17294755 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13967693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136242606 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.168850606 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098753022 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264803185 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095830855 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.206039737 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101215073 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134227431 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32339094 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121880926 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119723872 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19933186 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102535627 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121935319 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.821195308 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122638003 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132481825 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108876803 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237462208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.203672297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106866537 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129576784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13529474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177446973 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.249388247 seconds)
  done (took 47.450456071 seconds)
done (took 63.699257474 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307996183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273346315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.316629979 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232103388 seconds)
  done (took 2.107931535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.19052862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165150739 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.15962837 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096703984 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.167180309 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120878025 seconds)
  done (took 1.805554952 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491629284 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.410740202 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35366086 seconds)
  done (took 2.1620926 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267382522 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.262027583 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.367378773 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.443281356 seconds)
  done (took 2.378434499 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212470376 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138125617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110187631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.151273551 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.183608857 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210444866 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130966252 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18673256 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118028161 seconds)
  done (took 2.396231728 seconds)
done (took 11.759600103 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.319861752 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.230323828 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.183938904 seconds)
    (4/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.284147491 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.254179128 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.138491565 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.171781237 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112323805 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.215844577 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102647536 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.137718485 seconds)
    (12/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.142126301 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.283219989 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105618351 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.192996961 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.254714012 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.275475954 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.282083687 seconds)
    (19/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114279727 seconds)
    (20/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.133930311 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.170316883 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114443607 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 0.228028531 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.111525962 seconds)
    (25/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.197728488 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.284930758 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.108042755 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.160819096 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.233690877 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.134726005 seconds)
    (31/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.137840026 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164946487 seconds)
    (33/286) benchmarking ("sort", BigInt, false)...
    done (took 0.261311535 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216511689 seconds)
    (35/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103751393 seconds)
    (36/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.129391203 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22635378 seconds)
    (38/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.215217378 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111117434 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216714136 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.154041989 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.183827971 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.214827364 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.133059141 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129359181 seconds)
    (46/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.137472072 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134655866 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.114685191 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.242408142 seconds)
    (50/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188648413 seconds)
    (51/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086676331 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204733734 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.160526814 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103480081 seconds)
    (55/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126962743 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125078579 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104437244 seconds)
    (58/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.133291834 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.200562719 seconds)
    (60/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102931552 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.137498034 seconds)
    (62/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.136690769 seconds)
    (63/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107717031 seconds)
    (64/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.148395168 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211093087 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.185680147 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.209948462 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199325571 seconds)
    (69/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.150426491 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129156299 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129566366 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155787387 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.124621449 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.101191427 seconds)
    (75/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10877153 seconds)
    (76/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102591052 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.139500679 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.126910161 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.125733215 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127203147 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.124959332 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.115288474 seconds)
    (83/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213743344 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.121514936 seconds)
    (85/286) benchmarking ("sort", Int8, true)...
    done (took 0.231879481 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.087694149 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.172420369 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.24842782 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.109144182 seconds)
    (90/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086910296 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128870312 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.109100864 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177936649 seconds)
    (94/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.137892255 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.196652039 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085850225 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.139539557 seconds)
    (98/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.137889121 seconds)
    (99/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.110323149 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202064466 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.147416078 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085459043 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.151871429 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.138339285 seconds)
    (105/286) benchmarking ("sort", Float32, true)...
    done (took 0.242685701 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.174194215 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103743221 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.131708103 seconds)
    (109/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104656123 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129508547 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135441269 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103044354 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126204347 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105093834 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.124984474 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.136408095 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.11659346 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.213407634 seconds)
    (119/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.171365552 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157622261 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.086025977 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.206499358 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211757403 seconds)
    (124/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.117117079 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.198519496 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.110408219 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129501019 seconds)
    (128/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.175820091 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104736948 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136320991 seconds)
    (131/286) benchmarking ("sort", Float64, true)...
    done (took 0.243679539 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129089599 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110787184 seconds)
    (134/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126121011 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100913202 seconds)
    (136/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.111547951 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.245425974 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.131235446 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.107067311 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.134993705 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.191752896 seconds)
    (142/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.146544668 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124165472 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110792529 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086409109 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130285344 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10622462 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.135310395 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.149061395 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105641528 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.123542954 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.105913477 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.125399123 seconds)
    (154/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086713544 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129871772 seconds)
    (156/286) benchmarking ("sort", Float32, false)...
    done (took 0.188235734 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106343091 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.111677554 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086783329 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.134986766 seconds)
    (161/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.093479662 seconds)
    (162/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.171735667 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155482561 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129837035 seconds)
    (165/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114006972 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.140911729 seconds)
    (167/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.085659269 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.111493175 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173138223 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086343407 seconds)
    (171/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.259779267 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.171980146 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116007803 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.129767867 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.110853515 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.086445805 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.163273099 seconds)
    (178/286) benchmarking ("sort", Float64, false)...
    done (took 0.185551418 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087624073 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.111983215 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10620039 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131152939 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087140831 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130061597 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.086887752 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.142716725 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.148499648 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11311983 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 0.2865177 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.086508743 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.129066259 seconds)
    (192/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103454351 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.111010209 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10552986 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.138486569 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.234576052 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.12811698 seconds)
    (198/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196950036 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.106090201 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.125107658 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158061424 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134161942 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.138768734 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136225166 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110781651 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.129957853 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105726285 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12443173 seconds)
    (209/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.128543093 seconds)
    (210/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172440413 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.143363956 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.128285952 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101015823 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.111945626 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104792595 seconds)
    (216/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259819796 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.102077941 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.111705163 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.199577046 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.087599916 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.085323345 seconds)
    (222/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129221409 seconds)
    (223/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119672945 seconds)
    (224/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0990749 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.13906881 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087485985 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.139322317 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099385506 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.111281311 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.15559193 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087000869 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128247252 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.102660658 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131118087 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106048577 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124732641 seconds)
    (237/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.110861839 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.088818636 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140888038 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113054503 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124721076 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087254479 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.13586325 seconds)
    (244/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137000979 seconds)
    (245/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.088229951 seconds)
    (246/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.111668452 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.087418155 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.129306624 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.13551352 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.112899218 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132466415 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087333615 seconds)
    (253/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.117637004 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.115963417 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.111019895 seconds)
    (256/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.086857804 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131068333 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.107632245 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.11135665 seconds)
    (260/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.086709084 seconds)
    (261/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.125468521 seconds)
    (262/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09937383 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.125496486 seconds)
    (264/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.086788824 seconds)
    (265/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.110967942 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.100232804 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.113185989 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115543154 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138425767 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.092976123 seconds)
    (271/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.113038221 seconds)
    (272/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143011192 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107596569 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.131914188 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.106228213 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.128214358 seconds)
    (277/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099156556 seconds)
    (278/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.128365189 seconds)
    (279/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.086139263 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.11209642 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.087532381 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112913301 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.101403748 seconds)
    (284/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112411985 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087622373 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.159333896 seconds)
  done (took 41.290686117 seconds)
done (took 42.210804933 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.111278888 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16608817 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.136099329 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.12930449 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.138122609 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.140425259 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.109326649 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.136461722 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.137181928 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.11422415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.137957638 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094133842 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.136318759 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.134363765 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.11151226 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155716705 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.139012189 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.10590223 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127362976 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.102344028 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12728738 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.102773786 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.129742432 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.118937505 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.111030421 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133720702 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.105197021 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.135842815 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.128160281 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.101001633 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.127264338 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.106889567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.126873577 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.111872753 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.130697615 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.127867298 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.11168254 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.133852597 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.10567175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.128569551 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.106805999 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129637299 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.131064366 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.108620627 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12951177 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.102406814 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.128429148 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137758864 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130529376 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129715039 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.107722222 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.13653453 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.136905918 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.106913728 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127345741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102753233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.130447535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15533552 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102255756 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129723797 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.10736762 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.151541674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.104352968 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.127837123 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127869844 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110398354 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1344522 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101933527 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136679884 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.130276096 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.098608717 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128619416 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.101926644 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.125691044 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10900499 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.136523096 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.098067201 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.130515746 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.132449666 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.104391588 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128450558 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100692177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130786644 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.103761083 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127696888 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.120262978 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.102023907 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.130040051 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.102838396 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128865991 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.105259496 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.132216348 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.130956065 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10948572 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.128706383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.103685209 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130751074 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129635519 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.105890331 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.127325307 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09851039 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128184542 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.108113772 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.126777955 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.104608449 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13789566 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126737295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.105700707 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.128199814 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.103240668 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.141773076 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135329225 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.103555925 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130224181 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.100801244 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133704042 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.126947244 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101686937 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.126235295 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103978176 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.130140877 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.103566121 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127923894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.131160284 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.112406715 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.124642817 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.10213521 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127570046 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.103675373 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.13169834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.129970947 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.101120748 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.128925565 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.098569917 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127225394 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.100808112 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.133180546 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101877824 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.128970028 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.129619219 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103599139 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.130418644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10445198 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131532034 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126698288 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.096697768 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130665538 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102644268 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.130910523 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.104165835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130265868 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0986961 seconds)
done (took 19.330418636 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.11019865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.197830168 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1627495 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.165285863 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.163311679 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.148485644 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.113912663 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.161069358 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138973639 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.157863488 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158209782 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12588842 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.165973796 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137286858 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.147088217 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110184814 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135771249 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.14644132 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.170683709 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130162258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160550767 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.139443638 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156464415 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.156844868 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111803399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156695345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13921944 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111222909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.139847148 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.152638375 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125500686 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.140303586 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.138602205 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.148026521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117279591 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.134419929 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147378708 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.106966589 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.136329965 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109922514 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.148602094 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147473186 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132965493 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117142338 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137025992 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.140601184 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108580363 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.136356326 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136443213 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105307471 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.141403068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158492252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108642253 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140119047 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.137960861 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111014826 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.140593247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141032438 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114879156 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141895397 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.137319368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113236337 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.143671177 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153538031 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136708031 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.112879083 seconds)
  done (took 10.095894182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125948506 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.166252002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144131245 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.144350895 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114068723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126425895 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100070769 seconds)
  done (took 1.91883908 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101816607 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157328563 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.159978979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13347199 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.150269952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.16396595 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117624908 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129400125 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.152095528 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111172462 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155843649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183013671 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.129199263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113732615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.162607417 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128040975 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135707532 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12793451 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108364878 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.161593301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135060352 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.149654589 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115776038 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.129598749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.122796864 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.131183195 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.195718628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139861241 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.101452671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136220342 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107109191 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.225899125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.124177396 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139761435 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099364113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157932049 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.151063731 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10677491 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.154603893 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134087568 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.123711568 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.136377493 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.136673556 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.10754193 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137345794 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.142818744 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113379084 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.137577039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.107030357 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.157486241 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.139643976 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150342115 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.104131765 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.132023473 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112152796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135642861 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.142435489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.108554767 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156771576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109059003 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.15499007 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.155214071 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.149962116 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128347017 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146801044 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151583448 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.123266136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1358603 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136815942 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.110343933 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.155410403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.131672055 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112321296 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.144351175 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110202197 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.156602407 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.156594429 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105789742 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14205639 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133670531 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.105109912 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128923852 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118328537 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13341801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104468418 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148651074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141954778 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108319443 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133357286 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152464255 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10716129 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141732603 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.141246784 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105781729 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146622247 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15825453 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140041818 seconds)
  done (took 14.092423348 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104717088 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.129516496 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10926517 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130898629 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104443133 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.132270515 seconds)
  done (took 1.719092008 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.134094286 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135355051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.145757094 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.111005611 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.176114943 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.155510484 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.127196628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14305836 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.150521002 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.118401797 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.154717392 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.155335473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.16008274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.110576833 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.153613471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.110389077 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.154807607 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134677796 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.116975117 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135407266 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146135905 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.111132155 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134482765 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.153115299 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.111339156 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.138219361 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108946218 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.146877253 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.144767888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112720566 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.139683555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137897543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110897902 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.141080678 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.154480305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110673788 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13301246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.111849456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139351065 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138448788 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131105419 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135485308 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.143023431 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.113210392 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141352664 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136994087 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.113028002 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136299642 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.126525503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142171391 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.139283617 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.110937651 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.138472482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.112525285 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138401549 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139676305 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.11262497 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.155929143 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.138243433 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111404067 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135654204 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111123668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140527658 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138110162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.111000161 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1408298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137726595 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108113493 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134379484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11049821 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141264942 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.135024188 seconds)
  done (took 10.579420579 seconds)
done (took 39.393981114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708161004 seconds)
  done (took 1.715354432 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.863372041 seconds)
  done (took 1.873913766 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.113457923 seconds)
  done (took 19.152993416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.556615402 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.647149041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.970285579 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179274482 seconds)
  done (took 3.362449614 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.996851919 seconds)
  done (took 2.026066799 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.322573761 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280461903 seconds)
  done (took 1.618439885 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.858700495 seconds)
  done (took 1.886141125 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.569630697 seconds)
  done (took 2.590069955 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36466667 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.216052157 seconds)
  done (took 1.615932313 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.592057875 seconds)
  done (took 1.622343542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.79172 seconds)
  done (took 15.822861432 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247322141 seconds)
  done (took 1.287707031 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.315178171 seconds)
  done (took 1.343198298 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.818154596 seconds)
  done (took 4.849949228 seconds)
done (took 61.78387093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1145433 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.143917499 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116645333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14266215 seconds)
  done (took 1.542977522 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119344185 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.139054874 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.114707836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.139013874 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.146793238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.111581121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.137747788 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.144188331 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.112100929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.140445103 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.112067457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.138980115 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.140381697 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.110790202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.13715746 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.113292252 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.141593487 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.139624102 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.111500929 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.140173757 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.137180796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.112839914 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.141764111 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11070388 seconds)
  done (took 4.126933478 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114375967 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.133808913 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110216038 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134646228 seconds)
  done (took 1.535348216 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118447482 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.152687029 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151880173 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.118373398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.153649193 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.150810937 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.108683993 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.134628449 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.109845676 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.145503406 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135802003 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12804126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.152365236 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.13022279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.120087002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.128279403 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.104332071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15224391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.144030918 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.118277733 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.134252435 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.11613546 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.142565125 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147674305 seconds)
  done (took 4.236880439 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.219090957 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120078323 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.159352133 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.142547828 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185788143 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.132804319 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.135034399 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160906374 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.108127818 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.161362966 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.138154729 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160929259 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151591944 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.13829069 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.107993437 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.142614262 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146283819 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117487223 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.137343367 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.148223356 seconds)
  done (took 3.954881766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.114340524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.13418252 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103236162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13456978 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.113459866 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137773212 seconds)
  done (took 1.781062114 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104287757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.129706994 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103765592 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12952188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108076947 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.129493226 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101845234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129198993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104302018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.129791592 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.102770851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.128128334 seconds)
  done (took 2.446805214 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.564107183 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105708839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.139197628 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.134954773 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112603716 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.134023154 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149525355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107297593 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.189807138 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.137213504 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14901712 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.188700351 seconds)
  done (took 3.15561897 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225347161 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111845229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290661066 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.442260839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173330582 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182469986 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.360523531 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184466597 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202949876 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155382222 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219365048 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174526233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171925354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195726337 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157868344 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.201534195 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1936278 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216647805 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166313043 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257350197 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182279363 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184369547 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205679467 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169662416 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155028277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176332376 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.107176531 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145922836 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191235301 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188179377 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189738587 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165016253 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155455759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24457622 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229123331 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194069555 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.403316658 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151792665 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.209496844 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211005831 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295982062 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159221489 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211930158 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171959984 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149858773 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197680262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17337894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.197741699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1491688 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15858236 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202623163 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193448277 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196890131 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155335242 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384789621 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164999874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162943069 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204080443 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206820276 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214544503 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183748977 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.140429735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267037464 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207586918 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196240493 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162801454 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184908581 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142175391 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194605361 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220026374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194550046 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212743619 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208214147 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15195539 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18165301 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195588592 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170851152 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196199607 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177008797 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.138555772 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167332603 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126314626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146652316 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.202652472 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111992706 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259867907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15327311 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.303194737 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226937035 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176093521 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178531871 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182331647 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184209451 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164934288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136830145 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164914734 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189126536 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175849521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121451898 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175377601 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164232244 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144073061 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170486586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.111836916 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177286402 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.152367414 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185258863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18299468 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.146632548 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181731655 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16771718 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14728031 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217725215 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212684491 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149602179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12148481 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219423778 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174028582 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155786771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201626839 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240761249 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.189045575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125670684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215894091 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214346658 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160653317 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215316652 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160844104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12205558 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16797028 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176383938 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174800926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.173705973 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147720563 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169846577 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220363603 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.146190779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124697026 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221635575 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115076547 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146867112 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162472797 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124081023 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.160971497 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169745599 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157251932 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175511506 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177835147 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171607566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177087746 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16040708 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21060152 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151293352 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.177969651 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136106166 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.138941743 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197676846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210002918 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147391039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204381255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.185462531 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299585462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180657362 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149237125 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199321932 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148559947 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.108248773 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18334279 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178150934 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180193081 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.239442262 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248288636 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213454074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.139558311 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16732092 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184111435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.230339575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174102282 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133644176 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181813112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21630049 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.111403525 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142134608 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115480045 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158726329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149803851 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1493625 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200256977 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18186603 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271671756 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180023041 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12795419 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237086606 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.114862055 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182645882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.219065203 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12762777 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.239307202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209686197 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185435047 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160810678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190787387 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.108575404 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143685338 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.150044228 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184337892 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121386044 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153149424 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162778737 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210232984 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192227861 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168610954 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285247867 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184728411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217785389 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.141292704 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.181923057 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199309093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176969841 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207342891 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124784165 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.176691029 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202864568 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162206543 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240905435 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180603894 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187088695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217419074 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.175455299 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148292129 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168012108 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186898298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158331143 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188643503 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133408316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154509276 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17296987 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.155502616 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143650574 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199255116 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162025148 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199174885 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185108112 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190901186 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146380315 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162557767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178066163 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164805197 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106794433 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188068245 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244615633 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161664238 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176478359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202461116 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117814637 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.402868171 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216417762 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234056553 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125128371 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161548337 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180196601 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187243133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182043815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200204488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162556284 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197074382 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177217972 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.162266787 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153663115 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135558452 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168940295 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168929312 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15247713 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170768736 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.16195021 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202945152 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163843209 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177454847 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183673152 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.164954971 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14385965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159501301 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22694488 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175746734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227017653 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.143363406 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.223046376 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207088028 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112092558 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148495275 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.144538104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201438733 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121101851 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177935765 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268655565 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288093787 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178638308 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188264798 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156446812 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11294711 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178977087 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169535881 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282177785 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161190409 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.125199105 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250695019 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.169077409 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120704203 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183107997 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375027716 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163788703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203188438 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111198458 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.36520197 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116047475 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150666169 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189410643 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191315315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.150867686 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.204321407 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184506583 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133983126 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189990061 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158603855 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277859693 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24643634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188073675 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22553469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130866688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176595037 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182997566 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235817896 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162800123 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.13396991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182968327 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21005859 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.24292896 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12189412 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18253671 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181363369 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179390635 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22310982 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122652502 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205311933 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149834078 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184067554 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159479665 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142647381 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178258831 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.237766119 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152043206 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202391116 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176969703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15150362 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113882316 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171616127 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176934497 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16295962 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.149192465 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196943554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.147041608 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180436018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197758176 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120206474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173562484 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164619878 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149019436 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130922777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163806681 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154728946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165532864 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238527616 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14990676 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205082591 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191953421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184219024 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179454417 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1641333 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.680245688 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11718208 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209259704 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166148894 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205546407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167445169 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184767446 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179291886 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168701158 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185932792 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168935001 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.239384572 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184470408 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175804796 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150316003 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162168404 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13451281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14977817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170926892 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181808685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159753958 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125330836 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175078242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166808284 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.163999175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157110575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211991188 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166735245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20215878 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20393151 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158778518 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185210245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193216243 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149646803 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179895158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192737982 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161683295 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169676403 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118544343 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155687591 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197722272 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.142598054 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180700862 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147847967 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180507551 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184002079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155101022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179402136 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161827868 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179980113 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144966842 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174040739 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145471347 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150209774 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.14788671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173280312 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178347033 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.176851979 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11564858 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.194502911 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209169673 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.145564327 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12299227 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372372219 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177541275 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21264548 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172606801 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153448443 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131926759 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173044236 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172136092 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177876675 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.148604829 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119644052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.120548857 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.204662266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.18411398 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178652107 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206810489 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180297289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206840318 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.154843789 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280587782 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15704266 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171835913 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120010382 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.148706026 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160747058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123043604 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165019618 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27457131 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199220245 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.171687474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.163721164 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116060709 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.148265266 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120449192 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190465384 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173548186 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177734014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164233168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138323426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164119074 seconds)
  done (took 88.005932288 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166252447 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160869816 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168539797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215621659 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186852002 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263557166 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225903205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246886527 seconds)
  done (took 2.787765505 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11800369 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.153281499 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.160472551 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144557185 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135472771 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.36456901 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.154403726 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.114125289 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.170686591 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.1546572 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137065822 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.639120422 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.110536278 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143551743 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.164819784 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.107574266 seconds)
  done (took 4.122662263 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.498677658 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.579965933 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.407975224 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27503647 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.251740211 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.200234473 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.807618934 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.184236575 seconds)
  done (took 13.365264395 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.141521938 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.160243125 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.155987767 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.185017953 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171782566 seconds)
  done (took 1.980217127 seconds)
done (took 134.068521609 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111768396 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.144690625 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.112193807 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.146214317 seconds)
  done (took 1.663652719 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.125769452 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.12698027 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101058497 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.126821938 seconds)
  done (took 1.63907493 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.478174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097655855 seconds)
  done (took 1.768406279 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137457385 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.159745389 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.157184507 seconds)
  done (took 1.622566429 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.121884549 seconds)
  done (took 1.281749053 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118661988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.160286585 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135982488 seconds)
  done (took 1.582519486 seconds)
done (took 10.721017864 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127413978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.454998623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432604574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126443902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.74280589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.395561108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.081884171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177422577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185690512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13827666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12701721 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.717557457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031569468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.357599738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018984964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.35428295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.723259723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109244723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146842336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140507121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02861303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138076738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109505158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140566068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.687939991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.444688434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138136769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368450818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138544002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112337953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427856419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138635839 seconds)
  done (took 17.615159852 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110702604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201813618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146435593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110539369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143492991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.108802651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149583271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151175931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201240741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107572902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159398986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107085495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.144111206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107722148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161231735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.138379571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111741455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141605175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114326918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142010932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15810154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107968961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141210387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110879774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.13853792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.121104819 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140559065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.152411797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10897993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144203419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113573708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13937343 seconds)
  done (took 5.503738932 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156973964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.211484086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148537294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.174190982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.162914047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141386379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225210706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180430893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203561507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139449772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128709443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139403887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.176068907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109536816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161989464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108701152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143514002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110101197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14699227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141578399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.128851502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139312601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109745548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14128049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107728099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154108771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138953243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122527221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140328248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142351503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115033753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140169368 seconds)
  done (took 5.865483822 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.116762545 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.149071592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.125474041 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.157877618 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.141679765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.117740918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.148435692 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.110762532 seconds)
  done (took 2.243432815 seconds)
done (took 32.395953384 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.126915838 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144628676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.123099525 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.153242342 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.118839619 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.164258912 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.106653964 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.152141248 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.121840495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148344057 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.155486455 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107314223 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.140723696 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.108298486 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.152826699 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.113567988 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.15561974 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.117708225 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.161486224 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.155149497 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.110186891 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.151086301 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.117792169 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.161795506 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.161284393 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.129820904 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.156175574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.113676749 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.141669404 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.140497228 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125545874 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.165700389 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111074149 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.157858475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.145060361 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.115170397 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.141671883 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111168428 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.156433582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.120547909 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.146525718 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.119982399 seconds)
  done (took 6.897432902 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.136546941 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.185151294 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.137527829 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.108071612 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.138158513 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.148081021 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.176072972 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.137914359 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.10622097 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.165908997 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.165341096 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.106716398 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.137522942 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.107583646 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.137346821 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.10655436 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.165062929 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.132774161 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.171645306 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.171684058 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.185820195 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.140580999 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.176435034 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.166054231 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.183055182 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.145582189 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.16388669 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.177525463 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.168805575 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.107145449 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.171754254 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.140031937 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.138173594 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.106033207 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.182930317 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.17764211 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.169106883 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.180974701 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.141155352 seconds)
  done (took 7.055691641 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.119215884 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.155713539 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132464889 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207368945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.182239175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.120655731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.151322106 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.159770157 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.12576874 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.140554139 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.118691895 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17253347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157856087 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.115830388 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147929445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.124360861 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.161029734 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142545787 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.114445987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160482877 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.127648839 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.154019467 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121091086 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152299385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.140670576 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118039981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.144620239 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.123590164 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.14886144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.149981862 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115218557 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.147163424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117255525 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.153333464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113057129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.149709717 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.163967548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118382525 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.151470994 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175568295 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121808204 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147342688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.131770687 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.181230039 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142449565 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.116664677 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.148714287 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.117054234 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.142133927 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127921359 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152003087 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142361757 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125003886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.1429546 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.108287524 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156508019 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142493153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113235281 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.150231663 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116567657 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162338259 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114063416 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156349158 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142666071 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.116424646 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141785484 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108492325 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147049011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.132572868 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146178744 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182640033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.109817452 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.148509546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150064128 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.117552112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150893253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109900331 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155663552 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121007869 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147066116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.119009359 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145448015 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11248332 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161606388 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.15836751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.11712721 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.148159671 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.14845996 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112975616 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14333965 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12344664 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146140672 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.11330835 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159379919 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.142062412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112819146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.148987317 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.115014676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14162451 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122181464 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149011528 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141911606 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120120511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1419561 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.114678781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152261708 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114626565 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.143557298 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.115429368 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.150518573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.141441636 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.114264497 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146497985 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113043791 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.156630054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.116449689 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.14599739 seconds)
  done (took 17.35567279 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.260083525 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.24084717 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249846946 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293708423 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.167317834 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.170304723 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.236151066 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.194558176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10986053 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184567591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.233585739 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.210218509 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.199094248 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.208850872 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.202774908 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.109968689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.163578301 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.196487605 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.239426133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.325182408 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.16236712 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.125719809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184387844 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184733302 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.16351094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.159520464 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.134585737 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166396901 seconds)
  done (took 6.683530946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.127565662 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.183328207 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.151779828 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140452522 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.170530131 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.145026462 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.115294461 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.14528601 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.124069636 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.158698046 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.14526673 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.118221003 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.14982901 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.152746152 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.111428274 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.152528986 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.119896233 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.153324009 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.113031492 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.149098089 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161744128 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.12831387 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.150325729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150042432 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.129603822 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.150999381 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.145526265 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.165197568 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.1227434 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.174123026 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.107275064 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.153472184 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.159511377 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.111418183 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.15089976 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.113186987 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.146368676 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.112956969 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.148221004 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.108193804 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.144302147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.101247202 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150920949 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.160539883 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.117590249 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.145602246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.116138183 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.148654937 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111515187 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.141523828 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.112215314 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.146438505 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147962491 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129060683 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148138033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111214319 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.148183003 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11112219 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.154312897 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.113882291 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.141172093 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.147993771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.117825122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.149230482 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.119631613 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.150869823 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.148974826 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.112948761 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.148593553 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.11817099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.147481812 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.123084042 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.141704018 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.113784184 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.155838019 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156807764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.115091527 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.150432873 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118472179 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143548928 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.101264289 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143157212 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.098632176 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.149812512 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.11060057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.150395664 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.146868892 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.116661259 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160483353 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.15323541 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.118918017 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145248861 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117134595 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148889901 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.107871727 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.149369101 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162282208 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.131728321 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.143268406 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.108569235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.166697 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.145770389 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.109776532 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.132262314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122050883 seconds)
  done (took 15.559903934 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139723077 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.18313016 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.145143326 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131495562 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.179585227 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.173199283 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127235001 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.154047423 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.112037194 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.165275989 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.118743065 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.154597808 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.151402184 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126654619 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173927161 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.153066234 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.113399899 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15957051 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.11705639 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.186606625 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164971041 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138438285 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.17678584 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157225952 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.116868173 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.170182667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.176948159 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.12471437 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.15761421 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.178519566 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.125401828 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.176901913 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.179101129 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.117750321 seconds)
  done (took 6.361719822 seconds)
done (took 61.098038331 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.321068117 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.522177666 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.288262468 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.289583977 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.341491776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.344969294 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.293778341 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.485845163 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.105502418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.282369423 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.287879928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.28969281 seconds)
done (took 29.069346661 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.363442085 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.902607688 seconds)
    (2/2) benchmarking "String"...
    done (took 1.641726298 seconds)
  done (took 4.76879472 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.287972914 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.288912692 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.54148495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.290717552 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.313518921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.309026716 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290028539 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302850299 seconds)
  done (took 16.548812458 seconds)
done (took 27.185817067 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.381190237 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.51989273 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.562205121 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.316451132 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.291799583 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.310634279 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.294918072 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.325551602 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.291249238 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.296429673 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.290818457 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.566095858 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.311179036 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.689191894 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.291782864 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.309475113 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.323472753 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.608392824 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.295269991 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.341784594 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.281280649 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.28505255 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.313917923 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.313916068 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.305900613 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.29741364 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.322600586 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.29252606 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.590149739 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.311232764 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.34150736 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.293542007 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.326448048 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.297192996 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.429779613 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.330664018 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.604476361 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.309343245 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.28483092 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.2960362 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.619450651 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.746034977 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.300378263 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.307598 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.296967938 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305629562 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.29073736 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.055496657 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.308477891 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.293866976 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.366424773 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.75215286 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.303253956 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.309123752 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.312140599 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.635448131 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.301048435 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.36863451 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.322227461 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.308299588 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.314533728 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.296166076 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.323927553 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.314175672 seconds)
  done (took 150.413798237 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.295136596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.296676486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.296028851 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.301926828 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.295659336 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.298152913 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.29757217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.29675542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.296559408 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.319910826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.29610111 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.296470998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.299119882 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.249870773 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.29788102 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.315443519 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299911332 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.316586048 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.296726732 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.2956851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.317988404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.296561657 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.317636255 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.295190615 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.296669053 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.385159787 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.353213633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.315255296 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.298907938 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.295789938 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.313302148 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.345228153 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.973246932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.1539294 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.316577995 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.29804808 seconds)
  done (took 83.747778386 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.296465666 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.297028422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.295014818 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.331963351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.296637299 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936705001 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932279937 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.090147181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.518872849 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.90128894 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619259768 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.297316885 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.29874903 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393409542 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.312772575 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29694083 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.311739679 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.322987137 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298185858 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297978812 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.935129053 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.314084489 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.365477498 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.48255297 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.316039603 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332603284 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.699476516 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.297666578 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298345628 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334018353 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.642278432 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.354541761 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299235047 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.756030417 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.548945234 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415313655 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300365224 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334258487 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.299986197 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.586781623 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.300914155 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.300462007 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.302092856 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.067947425 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.302015532 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.937144767 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303512156 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314350545 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.297631339 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.299103159 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.599673837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.175807008 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.321475311 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.300171719 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.303099355 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.297835126 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.295561913 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.336814092 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.594214115 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426393961 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.303009571 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.302677919 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335045554 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.301501124 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844356698 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305497874 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.201391595 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.381522875 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.406817429 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943283294 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304122398 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.301457966 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404263332 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425804966 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.302023918 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.302167017 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303209573 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.303294273 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.416667413 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302335704 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.755882161 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.487761101 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.323510258 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.936851971 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.407062834 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.303256982 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.787256211 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.306351955 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.302146792 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.194656078 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404124905 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.303095218 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.303482384 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.302088917 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302367572 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.763222848 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.942788157 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.653030251 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.30653034 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.84932282 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.308680771 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.773141809 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.945816185 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.072026422 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.308473247 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422059759 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.488388726 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.323203251 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.302638074 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.939973412 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.306446046 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.36125474 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.306756144 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.705904 seconds)
  done (took 380.750337536 seconds)
done (took 616.126819445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.028130202 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.973128059 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.114170906 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.007284151 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.972203614 seconds)
  done (took 11.318965338 seconds)
done (took 12.546847291 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512503494 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516140709 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37390918 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513126349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340266119 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530550834 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493821119 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.326381815 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413425906 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.394509494 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41398797 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362467922 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34201102 seconds)
  done (took 19.756319836 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580614838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.304351943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384880286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56536664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345253044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58919035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.623887211 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.305398447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445181366 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316397576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318190165 seconds)
  done (took 19.006058589 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.581480171 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.307281845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369807436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551160938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344853264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.590343323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.6431505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.305791433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430273726 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317787088 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319710621 seconds)
  done (took 18.986925658 seconds)
done (took 58.973969266 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.348630166 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.481047162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.341303213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.319166754 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.312562534 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.313326247 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.318405999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.31401634 seconds)
  done (took 11.973506042 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.315138237 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.31441101 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.313467424 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.313968225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.31348378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.31415909 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.3125068 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.314886754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.311133728 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.311310227 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.311843135 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.311399756 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.316302241 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.315823557 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.3131429 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.315836497 seconds)
  done (took 22.247907718 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.313375468 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.315420415 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.312251172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.315299688 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.308592584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.312588992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.312709427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.31153974 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313716711 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.31613136 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.314988457 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.314565639 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.310711778 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.310488146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.311911005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.314233127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.309724278 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.31152118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.316175424 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.310848582 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31452222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.314891149 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.314134065 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.314021519 seconds)
  done (took 32.743280739 seconds)
done (took 68.194012072 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.328180379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.328390401 seconds)
  done (took 5.886556161 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.376230712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.376872382 seconds)
  done (took 3.986295188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.316411114 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.314570124 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.317151248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.316109327 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.315494986 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.317129652 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.317083769 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.314864511 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.314242222 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.313179245 seconds)
  done (took 14.388023312 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.314456692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.316622305 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.313605809 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320133638 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.318353641 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.315632689 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.319425048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.313721724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.319126454 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.3176039 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.316570541 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.314124046 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.318350455 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313219654 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.317292684 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.316977246 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.314627104 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.316341074 seconds)
  done (took 24.928028557 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.329266221 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.336964399 seconds)
  done (took 3.900639612 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.445285174 seconds)
    (2/7) benchmarking "second"...
    done (took 1.355647054 seconds)
    (3/7) benchmarking "month"...
    done (took 1.4238834 seconds)
    (4/7) benchmarking "year"...
    done (took 1.413240948 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.358612321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.337532453 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.359062817 seconds)
  done (took 10.924977832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.322586062 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.523916376 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.630250152 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.909506097 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.320940839 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.323282533 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.195083095 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.323218471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.324094556 seconds)
  done (took 15.105816834 seconds)
done (took 80.354634499 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.312061721 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.390342427 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.316044524 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.326024134 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.656415559 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.363742335 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.319448091 seconds)
done (took 16.915795756 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.30811036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.303561591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.312442524 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316055657 seconds)
  done (took 10.473056364 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.327378491 seconds)
    (2/2) benchmarking "read"...
    done (took 1.666902437 seconds)
  done (took 5.228545869 seconds)
done (took 16.9347914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320322911 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.318414803 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.320962221 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.322043624 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.316921113 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.320106894 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.324438721 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.318733105 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.324387328 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.320186191 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.323543524 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.320969491 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319480589 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317371634 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31681054 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319689227 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.318911553 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.318229091 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319184744 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.318125996 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319254269 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321492818 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.320982115 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.318563427 seconds)
  done (took 32.916150767 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.320731665 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.319588206 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.326163891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.321874627 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.319769733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.322565817 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.323185241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.32167961 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.322155459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.321262133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322332848 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.320774065 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.321591879 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.319374095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320877734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.320154475 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.320611346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317771845 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321057787 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.320836621 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.319722988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32079707 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.321636079 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322547814 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.323136658 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32155267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.321717456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.319962924 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320536557 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.319033896 seconds)
  done (took 40.875163894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.328917417 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.329013207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.321298768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.324701954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325802044 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.321318411 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.322880858 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.324915314 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.321531309 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.323953268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.323326295 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.323121097 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.322881449 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.324646292 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.323833559 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.325893992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.322718524 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.319828956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.325197807 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.322631049 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32396779 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.323519553 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.325112675 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.324100981 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.32227761 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.324391432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.323427709 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.324023596 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.326031977 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.322961716 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.3237574 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.323681224 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.324757561 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.326151146 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.324447846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.32475277 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.328596718 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.331454458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327535805 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.3240323 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.322141225 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.325405075 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.323867117 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.324204583 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.324029414 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.323731624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.328106093 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.324572465 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.326235482 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328243762 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.326749948 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.323862782 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.326092297 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.32659538 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.329748862 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.324753692 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.329444116 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.324764213 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.323415274 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.324584049 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.325766538 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.324685925 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323126156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.32386607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.327790602 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.325182825 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.325827706 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.323211617 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.325072946 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.325132791 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.327431776 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.327656307 seconds)
  done (took 96.632353595 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.327463772 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324907654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322644121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.324091544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324445032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326815589 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322619086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328262365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323659646 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.325039097 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327935066 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.327463494 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324511637 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329671563 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325110467 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.32558195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328228634 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327610098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.328000851 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328258516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328787135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.326009119 seconds)
  done (took 30.41967674 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330140872 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328067138 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.324537197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329742394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.328501727 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328065786 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.327295129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333465316 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328285594 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327656934 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326155702 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329601065 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326723368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326686336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327964635 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327979127 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327052497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329681122 seconds)
  done (took 25.151203257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.326395098 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.326797782 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.328264724 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327574281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.32690878 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328808423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329381977 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329175766 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328253083 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.325971432 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.333240986 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331237119 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.329724584 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325669802 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331890339 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.327765856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.329303422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32579831 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331141539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327203642 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.32757363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329689341 seconds)
  done (took 30.471452513 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330583432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.33014831 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.329485454 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329946609 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.327496617 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.332258554 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.331193535 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.329129546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.331555451 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.329535288 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330350185 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330748495 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.33109999 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328147347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.328728772 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3293961 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330174389 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331404572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331464415 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.32956879 seconds)
  done (took 27.848274539 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330710064 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336067393 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.334321466 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332719141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334565432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.33420368 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332455991 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.332574085 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334482744 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334401582 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.335994019 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331527639 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333207149 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.332786479 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335591858 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335496123 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33420859 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333779463 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334753552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335266751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337278508 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.334306361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334107844 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.335312257 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336116804 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852479131 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337529727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.337444905 seconds)
  done (took 39.127841284 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332866017 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334155363 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.332965601 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330316487 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.331385433 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.332245034 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.328748012 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.334821334 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334224686 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329849635 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.333481418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332758031 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333167218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.33436116 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335837919 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.333553377 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333808309 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.331547752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330974623 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333502658 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.33468256 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332354914 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.335359091 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330926693 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33351897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.336016793 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332240766 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331314722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33423337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331585659 seconds)
  done (took 41.236360729 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.373796152 seconds)
    (2/2) benchmarking "in"...
    done (took 1.375780305 seconds)
  done (took 3.999513576 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.333133294 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336345041 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334601172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.333441503 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.333004417 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335283954 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337362763 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332565213 seconds)
  done (took 11.926270173 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.336917432 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.337230686 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.334738487 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.337908937 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.338450332 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.33791303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344060008 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358367399 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.335934659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.338285935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.344919032 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.343923753 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.33857967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336749197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.338113726 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337452638 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.339651412 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.341537918 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.340066835 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.339158777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.340479444 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33950477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339724621 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.333738903 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.34189564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.348683394 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341331999 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.341932117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337881264 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.341530233 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.338684737 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.337697751 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.340491201 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.340687267 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.337928403 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.342062827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347844208 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364960717 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.3432597 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338700342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340662624 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.335910889 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.341045209 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.34294952 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343748867 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342172196 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.341420952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.337343672 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.340308611 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.344550482 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.345209274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339488515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.338194727 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342941696 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.343593082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346538563 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.362178923 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.343351113 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.348923746 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.351407008 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.355806765 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.363270914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343679252 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.341636591 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352912647 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.364427003 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34746039 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.360084446 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.337462896 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.339626715 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.348729394 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353051429 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.369189079 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.343185735 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341617035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34589919 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339355355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.342632092 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34848988 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.36564182 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.34297118 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346124463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353587419 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367242026 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.339346745 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.343713986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.344350931 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.345155676 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.344460029 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352451742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.36405443 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.342043272 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.341944217 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.342812891 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.343650176 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.345812507 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.345527207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345284032 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.341217017 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.342218627 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345041658 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.347100673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353553686 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345178825 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347624339 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.348616553 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34544521 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344604856 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.349432421 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.346281811 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348643884 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.350148909 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.348404662 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.346548297 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348104438 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.353289163 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.344231098 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.344650996 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.34835574 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345145549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355758067 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.371247306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.344179735 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.344662802 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.351444777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.356619252 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346539378 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.350659746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.346861735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.344603034 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.34321099 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.349587802 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.3451408 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.345841272 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345387971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346960569 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.342026725 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.343630579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.347809537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.346404587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346929615 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.346311239 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.347281085 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.348346966 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.346798443 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.347574936 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.352926414 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.34510821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.346713742 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.347380413 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.347349257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345437811 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.352525996 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.347517244 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.346275096 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345034166 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.347951875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.345957528 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346129251 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.345745599 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.348435039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.349793002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350616139 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.351147593 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.351498775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.34708223 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.343147824 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.345924154 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.349035485 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.349570651 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.346953424 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.346791588 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.354365782 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.354707606 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.349106801 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.347121871 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.350292277 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346617225 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.34993264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.351628258 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.35031157 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.358019143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.35017797 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.354940723 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349847928 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349224676 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.349343672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.34856977 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.350742944 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352882549 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353201908 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.359012483 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363215371 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.376112534 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.352958103 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.351552912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.351213878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.354259684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.35477215 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.350737485 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.352370553 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351343845 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350795166 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350732304 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.353063436 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.34989557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.351619167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.351310265 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.353953766 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.349774484 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350614933 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.351619799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354386423 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.349846464 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353405079 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350392129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.351593661 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.349371324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.350349169 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.351553587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.35254498 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.350660915 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.357765106 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350426537 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354717982 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354804313 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.353572357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.35271229 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.353271931 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35364994 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.354198706 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361908975 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.374266955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.353491846 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357189351 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.374468189 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.353272912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.35410112 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352183012 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.348580039 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.358196316 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.360675166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.352197294 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.353305492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.355431181 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354825952 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353052404 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.35962302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.350788945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.353794236 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.353449618 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.354070064 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.350560417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.353203694 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.355163856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.354308715 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355357378 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354744157 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.356085046 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35472101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.353840211 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.354763757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.356308438 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360318942 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.359912827 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.359696034 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.355403661 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.358669053 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.355965904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.358683421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.35491207 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354752937 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.353623035 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368871553 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.38487437 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359854192 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.377499285 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.356980037 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360914115 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377048282 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.359545946 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355185962 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357463332 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.35506431 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.357173115 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.354555678 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353966925 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.356554919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359378409 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.357734546 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.362243279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.357272302 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.354240833 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.357457403 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.357377513 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.3581655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.353167708 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.356428126 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.35887863 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356343062 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.35622868 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35897108 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.365455061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379266437 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358841817 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.355791524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.358770817 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.357488397 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.357768499 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.357548453 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.362332332 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364717527 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.360344165 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.369706085 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.360943359 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366499102 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.358132352 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.361125797 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.367910962 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.356189169 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.356150576 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.358062686 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.358136735 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36477846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.381044795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.35824319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.362865977 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359032472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.36086724 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.359952197 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.358713826 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359748103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.360182462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370902609 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.385523101 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.365316526 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361918523 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35894764 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.361322688 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.359623034 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.359539749 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361763678 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.359955013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.360539095 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.359349349 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.35980323 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.362010795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.360469975 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.361510212 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.359041112 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.360053432 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366184512 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.383610992 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364909442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.358156518 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.367241751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361527634 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365987222 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.383708165 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.361400445 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.362360699 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.361615093 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.361537202 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.361107225 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.36311755 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.361485634 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.36175363 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.363854795 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.362230298 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.36395485 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.362470359 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.362752204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.362438128 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371272042 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386054096 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.363276841 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366562094 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.359404064 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.364417063 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.36832721 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.362984172 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.361239418 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.366912278 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374816121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372689681 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.363378291 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.362928361 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.365544741 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36489226 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.364079144 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.365031714 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.362824183 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.36346636 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.362824506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.364846326 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365670572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.364097703 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.362975905 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364777508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.364859017 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.371645744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.365203103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.364973144 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.364827666 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.365457384 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.365662542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.36475925 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.364952161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36348491 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.362930372 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368910907 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374089334 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.374423389 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.367369232 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.363836588 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.364954637 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.364207144 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.366724729 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366364153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.363610407 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.365889775 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.367628948 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.36642115 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.367342437 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.365833235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.364591141 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.36594954 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366967328 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368506433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.374033936 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367342816 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.363549593 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.366985531 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368029925 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.364171257 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.367495273 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.372850361 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.369884963 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.379278885 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.374865422 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.373150217 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.366475398 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371600826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.373656509 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.366775596 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.365630289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.367098711 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.368539286 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.365123038 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.372930475 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368651374 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.371494784 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.364582796 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.367050069 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374663369 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.393047235 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.365767588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.368861995 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.368472492 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.366113727 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.361659161 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.365328228 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.364074627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.372747302 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.389376865 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364582161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367497369 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.366891923 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.368068281 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371665273 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367468265 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.372256159 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.364163544 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.367085842 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367228038 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368988597 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.365098412 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.366043992 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.366836605 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.371448901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.379584981 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.367397159 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369130719 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.366871572 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.368517532 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369190769 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366765775 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.364948367 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.362495161 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.369438806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371165099 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.370428771 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.370715622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.368742665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.372331294 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.3693802 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366628859 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.371926447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.380758655 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.377409581 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.363413554 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.371102642 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.370712532 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.372788186 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368634915 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.370064115 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371385467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.370990103 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.367957637 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370602425 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.371890633 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.372280569 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386942397 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.397440646 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36991304 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.36798858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373744896 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.369429121 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.366328957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.375649826 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.36845801 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.371435422 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.378408406 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.370832419 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.375958414 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390953378 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.371004515 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.375193101 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.372228028 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.379263936 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.373999652 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370352816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.370636598 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.376597 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388428935 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369721112 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381448492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400322197 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.394718412 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.371668928 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.370230192 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371240377 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.373801878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.37698493 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.37241839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.371186799 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.371211041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.374389787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.374089848 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.376243421 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.375049036 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.376011739 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.373748583 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.370904704 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.373358074 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.370730385 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.373434053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.371924978 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.373221546 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.373021515 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.373653779 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.373763905 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38724885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.401177572 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.37438576 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.374513028 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.370792329 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.378044601 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.375751145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385250489 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.383299937 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.374113727 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.374885553 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.374187312 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372015907 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.372621103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.374705482 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373622574 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372131673 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.371701259 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.390663948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.400925818 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.375693087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.373148335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371986615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.377045168 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376763816 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374189771 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376356514 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.374881867 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37933752 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379505721 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.377491873 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.373409172 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.379584504 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.384185094 seconds)
  done (took 811.550081653 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375198422 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374689358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.374024532 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375134879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374624477 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.371283332 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372731045 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370672145 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.374087095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.371939727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.375197511 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373206018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372944287 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.373235389 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37261527 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376021941 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37120127 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.377519723 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.373197334 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373494776 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376033858 seconds)
  done (took 30.136465082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.376091645 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.375079981 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.374620172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.377973912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375099992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.378531302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.376911315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376943594 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378058791 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373742736 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.380201019 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37942387 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.373301771 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.375872 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37703116 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378323922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.379839061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37467444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.37911864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37613323 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3743546 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.376132991 seconds)
  done (took 31.574520845 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.379465924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.37920902 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.374167477 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.375065895 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.380846397 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.375829215 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.377930557 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.379251541 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.377601156 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.377481285 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.380155437 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.381218977 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.384914567 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.385989746 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.378330767 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.382388031 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.37961154 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.378977689 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.379145663 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.376166159 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.384109058 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.398032179 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.374438135 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.37852823 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.381181343 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.382360339 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.380407761 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379348189 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.380820445 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.384106864 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.37961224 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.377826705 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.382455444 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.37817119 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.381221157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.387010208 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.383653696 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.376127437 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.379342119 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.390635962 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.40245029 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.381246601 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.387703278 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.400791964 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.380020736 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.385486322 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.390084309 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.380651274 seconds)
  done (took 67.617263824 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.995775059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.033738025 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.008316806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.009777835 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.018771589 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.013261142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.013220259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.019463607 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.012735386 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.009921304 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.0190218 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.019739486 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.030019603 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.010704942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.015674191 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.016896592 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.008219731 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.016844229 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.010531238 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.015897451 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.0138914 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.016046465 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.02000666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.027457549 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.011132072 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.015507895 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.015670318 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.014172285 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.013748948 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.01477118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.022184149 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.021634994 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.025760732 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.020502477 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.032804329 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.016685725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.02570249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.014011301 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.020184524 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.017600039 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.012649989 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.012256889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.019795851 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.024967577 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.017888594 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.031624712 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.011899432 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.012200225 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.016728928 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.018425341 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.018653803 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.020241309 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.020452518 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.02046541 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.025534261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.031650625 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.032566162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.020227325 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.016381859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.018535427 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.012576403 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.029408557 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.021494845 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.018987165 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.021955319 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.020666454 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.022179687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.033003509 seconds)
  done (took 138.555127978 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388356599 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.387060133 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386021327 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388011321 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386719326 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.388568133 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.384672566 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.385999845 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.383861083 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386905012 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.384929308 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388892293 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.388387297 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.387162801 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.387149093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387684908 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.38756004 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386430111 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.387516065 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38691479 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.386258916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387450492 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.38747741 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.388686036 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.389326742 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.388002766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.388349286 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.389569377 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387263068 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.389468424 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.387061876 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.385811113 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.387845036 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388914617 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.388659071 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.389684408 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.387555988 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387453884 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.386882288 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.389568861 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.389099812 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.388731277 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387887471 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.390182604 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390042753 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.386674998 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.390052055 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.389512357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.388757511 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.389405015 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.39020197 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388241121 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387543807 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.389333681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.392259903 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.389185286 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389413763 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.391659872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389366452 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390827864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.391549574 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.390844648 seconds)
  done (took 87.36580014 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.39118342 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.391784229 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.388003795 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.387664662 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.391168317 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.389248522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390867074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.391921871 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.392621346 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.391979573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390420071 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388860426 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.389995681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391232067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389027141 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.389120695 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.388281254 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.389530252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390974344 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.388155871 seconds)
  done (took 29.100969219 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.389978629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.388943371 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.386957037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.390264377 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.391818642 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.386565357 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.389135941 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391682037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385984493 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390753779 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390779178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391012517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388906853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.391196523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.388594714 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389799694 seconds)
  done (took 23.531403732 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.388126048 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.393459536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.393792653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.39369608 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.392868568 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.389992111 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.392898612 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.387994802 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.390818003 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.393993607 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.391416719 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.395081359 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.393024678 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.393240389 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.390267424 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.39302638 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.392036962 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.390137158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.393378087 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.393735648 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.391660676 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.390116553 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.393064895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.391318809 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.389161479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.391127086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.391152873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.390301186 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.390878787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.394429753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.39258057 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.392054109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.388504591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.391358411 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394183729 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.391253661 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.39459627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.395059933 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.397161771 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.393477269 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.395829212 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.394176664 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.390702143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.394065626 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.392326095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.392885896 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.391859871 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.39112786 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.39315285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.392456817 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.395217711 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.396618241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.396249544 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.394776756 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.394574458 seconds)
  done (took 77.894025485 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396239919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396020078 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.390849439 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.394381887 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39690887 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.390788276 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.395159746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.395953549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39126135 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.395106032 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.395330389 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396064464 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393079927 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394003101 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.393305487 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397364136 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.39550493 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396774936 seconds)
  done (took 26.407231475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.394839504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396415842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.395643789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.394475258 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.395035041 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39906611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392446812 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.398074496 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397812381 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.393373484 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395898046 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.398846085 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397339643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.397104625 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395341298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397515536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.399404083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397576987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.39695052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397179736 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396832677 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39667905 seconds)
  done (took 32.028516433 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.395808174 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.398314674 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.396123307 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.414810038 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.423413013 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.396693483 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.398470164 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.400266541 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.422489279 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.462596555 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.450806608 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.420014082 seconds)
  done (took 18.288697047 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395064467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400565838 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394632385 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400162553 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396442712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395622355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397282382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396328487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39933132 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39764925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398186829 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400579123 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398050699 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395679827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398798037 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401125397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397760476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397257611 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398527987 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399389847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397021343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401188919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397282268 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398023626 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399514357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39909519 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401917655 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396683339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399233572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39850404 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401380176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398999764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402688506 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400518475 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401067195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399529356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396828857 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400681405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40249636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397738586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.402440987 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399340837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401746231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400687841 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400196815 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399735599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39787773 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396606757 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396546578 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401927578 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399748385 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397871486 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403207061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403310819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399882875 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401323909 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403052358 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398688224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40117929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399558165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39981022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403243724 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398661401 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400433421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401888991 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398938822 seconds)
  done (took 93.663044309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398517656 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399979871 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401231507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400842036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400778751 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403319147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403470791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40202186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404323181 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401107268 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403433903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400915122 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400582486 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401709613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401804108 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402404355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399605745 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403124936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402594788 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405249891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404143199 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40377999 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404103939 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404049871 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404086037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404990945 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406226016 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399462113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398106206 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404556345 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403011121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403213382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40433996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.402142789 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403478717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402382423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40300619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402487234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403707288 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406359074 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402787316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405448942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402047286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403124933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403295743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401573889 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404677913 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404075105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403753927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403150665 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404510235 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402556348 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404606568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402817818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406722165 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401350995 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406107078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401793762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403854502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405164622 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404553714 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403016045 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409855086 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404152525 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405479914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407223751 seconds)
  done (took 93.922892655 seconds)
done (took 1943.477607285 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.570469534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.524562082 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.406975792 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.424863929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.404390282 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.407849603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.414887202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.40649216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.404353149 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.407295229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.406063923 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.61191093 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.403368352 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.407241902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.40615187 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.501256949 seconds)
  done (took 28.420828267 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.439368924 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.412764282 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.544190607 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.433632977 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.44045173 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.622815442 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.475413171 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.411504051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.614638724 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.458547257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.415245459 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.439005773 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.409288426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.410277544 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.43533517 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.624970178 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.708675858 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.42136234 seconds)
  done (took 31.034941114 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.946829244 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.433575604 seconds)
  done (took 5.691436783 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.433272786 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.411910392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.411480682 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.410129117 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.399681937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.421986606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.408904464 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.404250259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.403317368 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.565079248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.415220191 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.424318099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.436449994 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.411562419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.409633691 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.453554949 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.586768504 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.412426316 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.409317061 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.417249547 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.413830851 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.511002299 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.464366451 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.413786635 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.556441142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405148797 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.419146734 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.420362754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.552468063 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.409006259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.411688409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.412152836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.413961976 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.406920905 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.916130231 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.408006137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.460681252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.423707258 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.409629003 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.572176267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.413633144 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.419587764 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.40416287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.87051643 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.565256034 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.545521143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.430980569 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.418762146 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.41513649 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.483106345 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.415057635 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.414461541 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.460514517 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.269924159 seconds)
  done (took 89.895709969 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.467284336 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.404477732 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590519181 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.437711537 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40907286 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405535102 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.40572379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75421043 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.426783299 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408339354 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.721328551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.013776701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.435305085 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.457929066 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.259490052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.4711531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.408299814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.429631501 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.411772786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.407253897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.997920688 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413293604 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.42892191 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.567131035 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453064136 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986158424 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.408050154 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.442424216 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.407883487 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.407110067 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963169171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.435315889 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.48404617 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407818305 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.707475201 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.843499905 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798637589 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.410157535 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452543997 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409940071 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.423373062 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954546175 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824962592 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407428756 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.409730381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984708747 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.411738645 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.41606699 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.412721821 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.663076958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.406324902 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.408626233 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.42566891 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.438144366 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.408110582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.479001882 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.484819742 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003162165 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410035822 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409334503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454571857 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.410888275 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.416375281 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.410804046 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.411041134 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.823125379 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625031786 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413451439 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.820111282 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974571275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.430379256 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045638072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.435180505 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.414131122 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.461136199 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410477636 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.406486778 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006893061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.452791595 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.410518647 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8243188 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416040588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.733913256 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.448632063 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410712494 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.010703376 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.418451057 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.50395839 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.414571708 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.414127743 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.410363976 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412848189 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.713725849 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.449042276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.414329226 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.413218534 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.456002007 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413010625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.411763682 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.418569428 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045360953 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.445288195 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.411343639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415517616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414885767 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.416405203 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412232746 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413691332 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.685991317 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413673019 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.439505259 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.413913632 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.414968866 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.42281951 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.561753143 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.419506193 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.776282004 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.416482856 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414189277 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.437300354 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425966042 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460281962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414228937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417564697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.345347904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.687992772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.434790111 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.432317351 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414607849 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411756017 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416070935 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412032449 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.446515444 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.41885419 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.229273703 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.446426471 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.441035006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.4160528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.415738297 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41525651 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.442017707 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.416691937 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721748823 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.712675411 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.630567736 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.416654931 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.414617979 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.231019369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.48740478 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602638028 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440240973 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.41669278 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.664221193 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.640441992 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.41346726 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.417644783 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.417493186 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.683513219 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.414191573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738456658 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.008300105 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.43810245 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416562857 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.234572601 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14793033 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.419232989 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.414351344 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.733062655 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.439111318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.41583964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.414782065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.415195027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.417349276 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.420371252 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416244579 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.41527879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.415747531 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.435993918 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.614316493 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.43951912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422507252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987342608 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428291342 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416998143 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425470434 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.424789086 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417302507 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.476648048 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.421545344 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.46376751 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.416926723 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421836004 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990822825 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418312091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.421257205 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.617234774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158716371 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.44156522 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.416612214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.439178319 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.297218959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.015872645 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.471951033 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.779368218 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.426015905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.463923707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.421180242 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432585358 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014566331 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420888348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.439049443 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.122091232 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.4399814 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.045871656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.419214696 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.42209221 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070637342 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.440274538 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.419220962 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.421330854 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427151053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.724052335 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.422978779 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.435607569 seconds)
  done (took 518.908701564 seconds)
done (took 675.264595854 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.416703441 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.420862958 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412898389 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423664462 seconds)
  done (took 11.001333017 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431171622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.423741435 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.42863438 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.427653223 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.425856324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.42507138 seconds)
  done (took 9.893947865 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420200208 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424159084 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423707853 seconds)
  done (took 8.599557266 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.666934066 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.448034898 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.820716684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.461233729 seconds)
  done (took 9.728784022 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.429347734 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.429167933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429949037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.428115217 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.434385645 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.431726987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.430881395 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.431842786 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.432741833 seconds)
  done (took 14.205166525 seconds)
done (took 54.755210783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.596509352 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.501578661 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.44613982 seconds)
    (4/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.415774478 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.494750679 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438585007 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.603854681 seconds)
    (8/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438343411 seconds)
    (9/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.630344477 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482852118 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.431122793 seconds)
    (12/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.485273313 seconds)
    (13/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.597547063 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.454257042 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.509495218 seconds)
    (16/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.507941262 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.751937886 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.08621289 seconds)
    (19/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.439020314 seconds)
    (20/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.441754636 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.479300354 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.429415067 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 1.562893561 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.587273409 seconds)
    (25/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.443159079 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.410138822 seconds)
    (27/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.4425004 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.42383314 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.903169061 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436521932 seconds)
    (31/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.446422609 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.42741374 seconds)
    (33/286) benchmarking ("sort", BigInt, false)...
    done (took 2.448045734 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.63916536 seconds)
    (35/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.439718384 seconds)
    (36/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.434609124 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.415424822 seconds)
    (38/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.466259833 seconds)
    (39/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.44891895 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.197169527 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.522709035 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.52385267 seconds)
    (43/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.358590588 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.465542727 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.542621873 seconds)
    (46/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.428814007 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.459982634 seconds)
    (48/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.556610247 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.599965527 seconds)
    (50/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.32948433 seconds)
    (51/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.691200252 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.276797002 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.426963979 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447692957 seconds)
    (55/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.445924588 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.434396246 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.497722443 seconds)
    (58/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.427713802 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.205091574 seconds)
    (60/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.455413852 seconds)
    (61/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.5033054 seconds)
    (62/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.437772383 seconds)
    (63/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.44001767 seconds)
    (64/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.445957845 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.531315717 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.437364919 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.419406559 seconds)
    (68/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.569505349 seconds)
    (69/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.49325137 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.536714106 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.44982296 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.438624101 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.4462405 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.436462634 seconds)
    (75/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.555631663 seconds)
    (76/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.48458465 seconds)
    (77/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.634119724 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.438557411 seconds)
    (79/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.515550611 seconds)
    (80/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.429219426 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092933423 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.652718588 seconds)
    (83/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.590678271 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 1.649681316 seconds)
    (85/286) benchmarking ("sort", Int8, true)...
    done (took 1.845687647 seconds)
    (86/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.172264341 seconds)
    (87/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.496402345 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.437238588 seconds)
    (89/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.439834169 seconds)
    (90/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.421556528 seconds)
    (91/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.44302348 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.511304301 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.419545244 seconds)
    (94/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.516268216 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.097347275 seconds)
    (96/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.15699909 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.436876665 seconds)
    (98/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.521413704 seconds)
    (99/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.423266649 seconds)
    (100/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.430994767 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.449817382 seconds)
    (102/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.338680957 seconds)
    (103/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.469551078 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.634240123 seconds)
    (105/286) benchmarking ("sort", Float32, true)...
    done (took 2.006470516 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.432086787 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.441056614 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.438961192 seconds)
    (109/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.438378726 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.525724255 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.451214053 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.496744007 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.452212691 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.479075403 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.444960338 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.44309275 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.66094612 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.123216571 seconds)
    (119/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.526394751 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.446670125 seconds)
    (121/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.630713384 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.589406697 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.609376389 seconds)
    (124/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.485151033 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.466472842 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.440437663 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.487269409 seconds)
    (128/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.720451136 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.484385801 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.461398265 seconds)
    (131/286) benchmarking ("sort", Float64, true)...
    done (took 2.057876169 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.527123764 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.459659832 seconds)
    (134/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.444223256 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.55151964 seconds)
    (136/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.41951266 seconds)
    (137/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.501730196 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.447032093 seconds)
    (139/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.434795841 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.511360886 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.458840372 seconds)
    (142/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.472700819 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.531743496 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.592400279 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185365047 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.440200643 seconds)
    (147/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.445286189 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.432268686 seconds)
    (149/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.740386889 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.512704055 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.533916637 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.439956632 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.451820732 seconds)
    (154/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.612241212 seconds)
    (155/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.455341256 seconds)
    (156/286) benchmarking ("sort", Float32, false)...
    done (took 1.624191715 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.542916281 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.440880312 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.425834872 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.472155676 seconds)
    (161/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.5855305 seconds)
    (162/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.586895109 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.568055541 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.550705503 seconds)
    (165/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.441784498 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.43880833 seconds)
    (167/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.490081973 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.423563094 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.633496487 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.09634508 seconds)
    (171/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.434523427 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.607372268 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.667920857 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.597062217 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.577377174 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.539802188 seconds)
    (177/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.447187068 seconds)
    (178/286) benchmarking ("sort", Float64, false)...
    done (took 1.63915887 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.421863265 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.230906738 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.640275255 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.442095843 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.421530074 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.493723022 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.55500353 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.444115385 seconds)
    (187/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.448429777 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.445948659 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 2.435995112 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.601549959 seconds)
    (191/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.465281836 seconds)
    (192/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.511578737 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.450058423 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.552506493 seconds)
    (195/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.444550901 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 1.641535114 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.448310909 seconds)
    (198/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.222425982 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.460715298 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.436063138 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.541976283 seconds)
    (202/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.435375964 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.536745765 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.460875218 seconds)
    (205/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.664777921 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.454393238 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.43760835 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.547615757 seconds)
    (209/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.442719456 seconds)
    (210/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.562722225 seconds)
    (211/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.454577442 seconds)
    (212/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.447359666 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.442844282 seconds)
    (214/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.615627543 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.56907588 seconds)
    (216/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.528342742 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.444345043 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.123782491 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.236135163 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.467225753 seconds)
    (221/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.579739304 seconds)
    (222/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.436649442 seconds)
    (223/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.694133793 seconds)
    (224/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.498465175 seconds)
    (225/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.524971138 seconds)
    (226/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.377893295 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.478069489 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.479621854 seconds)
    (229/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.581947963 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.457960666 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.2994469 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.460463315 seconds)
    (233/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.453332179 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.546339149 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.444009442 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.499770767 seconds)
    (237/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.527519391 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.106807208 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.444006586 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.478657741 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.531252239 seconds)
    (242/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.766175899 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.477800904 seconds)
    (244/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.786991754 seconds)
    (245/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.529376439 seconds)
    (246/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.259367435 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.445122811 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.475307184 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.456571005 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.55499336 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.447450074 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.22924814 seconds)
    (253/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.609193617 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.673244902 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.581965545 seconds)
    (256/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.550601715 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.650321314 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.456206734 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.173463895 seconds)
    (260/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.512774682 seconds)
    (261/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.47477922 seconds)
    (262/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.615274706 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.456526432 seconds)
    (264/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.429068101 seconds)
    (265/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.551622284 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463125008 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.528687383 seconds)
    (268/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.599933453 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.645932635 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.480746534 seconds)
    (271/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.506723283 seconds)
    (272/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.799137018 seconds)
    (273/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.451839929 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.449677499 seconds)
    (275/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.459222823 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.449327271 seconds)
    (277/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.482315169 seconds)
    (278/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.454805008 seconds)
    (279/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.513259006 seconds)
    (280/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.119578422 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.470304073 seconds)
    (282/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.280799885 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.448691528 seconds)
    (284/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.436779372 seconds)
    (285/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.511832028 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.52710658 seconds)
  done (took 501.428847397 seconds)
done (took 502.764147671 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.483287946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496788113 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.451381551 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.486214878 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.56646694 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.628107111 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.463117342 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.493127863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.501651567 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.50161304 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.461850807 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.628322073 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.454488836 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.454565053 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.455510302 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.496943512 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.459224111 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.453086675 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.473648879 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.49320767 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.472071363 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.459893297 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.501660914 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.630428304 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.458618252 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.458910292 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.456209942 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.475969185 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.566905746 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.458935265 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.462570718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.46942433 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.459788039 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.458950879 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.450448605 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.473518285 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.465504884 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.464127929 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.491108727 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.566781858 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.449708637 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.459758053 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.457011669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.457030215 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.457892323 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.492009116 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.457343853 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.515078004 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.496341799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.499013868 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.458576692 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.469187623 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.469048929 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.458081047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.466981782 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.458550095 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.513729695 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.499946325 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.476053822 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.501930687 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.452080162 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.459683664 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.497430525 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.474531082 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.465318571 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.456824501 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.455317082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.499110988 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.44587789 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.461568541 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.459796879 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.466041504 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.460192803 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.472143645 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.489165346 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.462734321 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.453640788 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.45816702 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.465990383 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.454493419 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.504619863 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.497551496 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.50705175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.457957368 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500164434 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.633407256 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.468539172 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.460299625 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.496401203 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.477691923 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.463368098 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.46900501 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.494469784 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.46146601 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.506752955 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.517115132 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.467641247 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.467257719 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.509461584 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.468095191 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.446447485 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.504633118 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.453149171 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.457380732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.457800644 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.58081494 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.45558851 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.459956275 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.493269887 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.504371284 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.521909477 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.459000844 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.472484486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.507205115 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.468512643 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.518465524 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.463147272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.460244999 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.447952045 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.604463139 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.46122218 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.46510982 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.504661738 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.521377745 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.463730793 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.448850668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.46279572 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502454511 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.584684411 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.471721459 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.571404233 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.458919186 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.463306735 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.49578725 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.504975266 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.49129163 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.522782877 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.504750939 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.477288983 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.458650067 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.473683537 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.471251483 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.464827216 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.518953409 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.459357116 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.497540765 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.50399168 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.503264841 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.496036336 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.584539818 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.464862867 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.45914241 seconds)
done (took 243.084561149 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.521973121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.46035429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.562443043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.46095297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.562456392 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.562675407 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.457783185 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.46041116 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.458115752 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.845082483 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.458704836 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.458569785 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.458853466 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.45763984 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.540723672 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.457977954 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.457001502 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.803663134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.461178529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.531051193 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.453217944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.455750575 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.460508393 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.84533068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.462653532 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.45503029 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.531145679 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.459367296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.8156068 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.4528758 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.455696263 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.807949497 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.551060492 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477461378 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.471113799 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.467929794 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.564961363 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.482211765 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.542457143 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.546497754 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.565107417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.500533285 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.454036116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.461447749 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.460899907 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.460613063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.458184704 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.486559525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.459823498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.461119409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.810520495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.470923597 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.468157303 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.461499591 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.460143929 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.484896367 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.459918004 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.462410267 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.549752751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.461262143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.523412298 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.851799097 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.841871385 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.46257053 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.460437955 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.464536671 seconds)
  done (took 113.019070485 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.527221271 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.536559999 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.587990851 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.480290997 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.516084606 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.59308184 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.478083799 seconds)
  done (took 12.080438549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.47050277 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.467558901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.513386395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.514558818 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.464759425 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.682008179 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462206195 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.476299216 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.461773398 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.541954403 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.46780818 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46488649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.473291593 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.460273177 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.513494288 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.47287263 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.578509781 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.468061498 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.465629868 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.614417509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.461144014 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.473255402 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.542442526 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.477934583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468531877 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.472190753 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.422126692 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46541048 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.462900632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.467018827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46428558 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.574808849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.465953766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.461764775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.459919204 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.62491301 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.46836627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.461550923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.466582198 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.465456561 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.463536329 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.467334189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.467708717 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.463460874 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.466877142 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.491475433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.468949626 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.46529557 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.469281033 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.46843024 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.546722083 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.467001696 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.462718707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.464635338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.548899706 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.470579107 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467328967 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.461756805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.469485192 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465328912 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.620208742 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.516520836 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.469101551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.51406501 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466468741 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.468567394 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.467774212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471963225 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.558843761 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.468845767 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.515922156 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.466077883 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.696271082 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.491618242 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470470724 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.467546563 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.476120029 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467429621 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.462842751 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.476115332 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.46779166 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.47128087 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.475548712 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465651329 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.467155687 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.656319183 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.626526995 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.466225283 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.481634434 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.477041731 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.467655164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.547664472 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.472337952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.468008006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524365243 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.587535262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.545538499 seconds)
  done (took 151.225370728 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.476686257 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.480172012 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.472551807 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.493055032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.468014273 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.470330283 seconds)
  done (took 10.227278823 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.472173349 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.476196887 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.473595877 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.470669376 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.471746499 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.471089094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.471817081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471410987 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.47684031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.469893729 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.471191423 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.475146369 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.471605789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.472907467 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.469173111 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.471542671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.47627675 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.468934129 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.474827693 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469426399 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468899409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.471716647 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471348621 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.475884421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.478951833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.473840902 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478402807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.47172512 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.475886487 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.480757153 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.495825722 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.472811567 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.478844209 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.480220629 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.479851874 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.475962916 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481223253 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.475649397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.470398323 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.475670963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.477355211 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.475310582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.473586542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.478810912 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474364585 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.481888309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.483369638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.481699822 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.476028988 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.481350457 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.474809832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.472968713 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.477902888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.477044166 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.478641932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.499130358 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.481624674 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.475524393 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.47643775 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.477367442 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.477432571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.477461079 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.479587751 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.480646497 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.473358146 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.479586616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.473330321 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481240343 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.474327845 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477001011 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.480316998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.474840392 seconds)
  done (took 108.659548115 seconds)
done (took 396.568546638 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.519488434 seconds)
  done (took 3.891744883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.592186432 seconds)
  done (took 3.969099111 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.846789046 seconds)
  done (took 26.228202778 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.581539224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.604540378 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474658305 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.473196019 seconds)
  done (took 11.506941681 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.883769446 seconds)
  done (took 4.258574488 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.468389011 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.473004195 seconds)
  done (took 6.317452583 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.873427673 seconds)
  done (took 4.245766133 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.955287897 seconds)
  done (took 4.334570426 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.491391354 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.485385601 seconds)
  done (took 6.36444889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.45663125 seconds)
  done (took 3.83192321 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.608749685 seconds)
  done (took 17.984499651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.468014985 seconds)
  done (took 3.847287217 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.494295277 seconds)
  done (took 3.868302167 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.653089188 seconds)
  done (took 7.028392009 seconds)
done (took 109.047697223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.468220246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.473570411 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.471906732 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.468373755 seconds)
  done (took 11.255129501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.511992219 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.509071452 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.515653725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.521044125 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.51501935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.51406311 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.505571527 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.504062984 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.522762375 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.515741143 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.515326167 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.513667509 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.513677895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.505114582 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.515557711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.514087854 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.522039534 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.515347006 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.50278615 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.514856605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.477100684 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.524924878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.513849394 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.482119696 seconds)
  done (took 37.643011405 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.998916749 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.553465232 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.634825299 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.532887783 seconds)
  done (took 8.093945207 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.550053511 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.54723506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.562649175 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.598353751 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.621655591 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.558801116 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.505207057 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.499396388 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.486916632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.549271327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.606797387 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.542769752 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.637937013 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.479268753 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.763514029 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.479668878 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.476862671 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.554796101 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.595660627 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.6131032 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.481054251 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.55819814 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.561845228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.544126094 seconds)
  done (took 38.75197543 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.477065962 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.495108611 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.480832667 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.477091784 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.486503015 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.481041977 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.479983237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.477121384 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.479020636 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.044124203 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.499332118 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.493352951 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.037733073 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.505099139 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.485800559 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.480886484 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.045606151 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.058258238 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.507977499 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.486142404 seconds)
  done (took 33.354325242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.474080211 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.470125672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.827494768 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.730555234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.475574522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.480465476 seconds)
  done (took 14.834685837 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.567445988 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.74738183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.482702547 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.911220713 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.988186745 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.482575967 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.483136987 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.770586981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.18462428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.153586881 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.556508927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.564624557 seconds)
  done (took 22.272061079 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.484566483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.476829587 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.485682097 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.499527507 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.547291547 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.506251531 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.489650132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.474656132 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.550133043 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.571614065 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.502287495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.548813518 seconds)
  done (took 23.514408953 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569276567 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475141257 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476551623 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586995307 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475983641 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326942014 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.583857347 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294170991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.509593643 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751455254 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481769681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574103477 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733900858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476684893 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500834579 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.483994106 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711556899 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067022883 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480782347 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477167116 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508943588 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48403104 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481392155 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73478408 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483440251 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477558224 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.738140295 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475880838 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831250343 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493750076 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490258883 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47714024 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75192546 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220417531 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61006076 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734393499 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524370864 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480655896 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.495925147 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.480678938 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49859637 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478382453 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490897194 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482688382 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479826746 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483174601 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313774931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.51330657 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.4778703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478960578 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803855397 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582475124 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.483836617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480132148 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4948625 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480378658 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.481939301 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.4778483 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083408491 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481375527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483710864 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.483759408 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52452344 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48509444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19805491 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.486226309 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.483247944 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486442248 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482679155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486232115 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497784313 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482044181 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.509954852 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482521118 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30084349 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502108416 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48418867 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131930966 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486220208 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.486998744 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717295309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483811175 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483587598 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.480504995 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48095183 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311451377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491713357 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.468215326 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480381453 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323432869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769312643 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508357585 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514144449 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.708098156 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.471483845 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485735583 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.491574056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486481523 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506540379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310819556 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508944884 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.489095193 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747816322 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.698864461 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493162447 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.496575563 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061515474 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516797157 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.503794288 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485037718 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.749538393 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.177652525 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501231698 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484320457 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50436484 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484083278 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357739239 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489441646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.590136101 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494498935 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800234577 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.403635776 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4874609 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551572229 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489648421 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486155751 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48602911 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486803859 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485078723 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.73626414 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519010801 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501835775 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.485703308 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484936842 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.492296645 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506998193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.486192431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711563955 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490746908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76418223 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48666793 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486940361 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486515006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.709670734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.485195318 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.827142206 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753274947 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491486495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496713546 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500243354 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506538595 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594155989 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507492495 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.500738204 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.74817224 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.48983479 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.490430463 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49170845 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488675027 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490269458 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.49513755 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498244533 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195384528 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464939653 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493666684 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382806842 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.503076155 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555283115 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492984496 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.750402728 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.491088446 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534134215 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.494569706 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.486361604 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714718408 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49983475 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.495208025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563272156 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.057417767 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217107942 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506175437 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.490234345 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484407983 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.482587147 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48799501 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48791599 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486437275 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747738215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507796758 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.537229298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.195329601 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494181208 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490354629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.494894031 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499946667 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.495106208 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490916366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.48597156 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489828636 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490844589 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527220065 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632520637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.503113025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48861574 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.008892292 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496543271 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488845159 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489746042 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525131976 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49712691 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365286554 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.754830856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535996669 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818711378 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499671494 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.507826109 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.489212973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504856922 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490998758 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.543712836 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502412983 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.502898076 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494525948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494039061 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069645107 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336082157 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145161824 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493567117 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.491407269 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521291265 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321486929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518241105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49053949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779612913 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343403186 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520728348 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062606821 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52173184 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.388792857 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818549832 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728902872 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492743665 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.507231924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823199314 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709349014 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526702752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508395689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495660711 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.480245937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113793249 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531735914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571567796 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32086726 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534649911 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495706673 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.605987595 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.493081864 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98106673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517745248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491480125 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494465953 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510290551 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370766072 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50200289 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493451687 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223654402 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507641806 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.067964163 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519824637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.753581041 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.509343592 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.50081058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.490703021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.498116075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.753338378 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823696801 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49743234 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502518346 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165021028 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.368430795 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.50108929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491443043 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370206299 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49634107 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854482486 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.506236582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.496630268 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498895756 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496946027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495349198 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.492453539 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497870029 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467325219 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081833006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.540153885 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535336527 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508492865 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499616352 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754957906 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.511172074 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200871244 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734881569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548566768 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519440447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.500993289 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49755636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.484037015 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497992432 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495660781 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64824322 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.72565734 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497287572 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.485606269 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63071189 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712537735 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496790894 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495944379 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788610283 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.497279463 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.506827301 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356685666 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532739356 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513482304 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499154059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532868214 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496679955 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589616207 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759504584 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.514278339 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508472049 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985213739 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533640024 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499786869 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.51238632 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594098568 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507883646 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.501644339 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.270582969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209644955 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350002799 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213159802 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83432958 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505456578 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503779223 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498838798 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663044746 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498651585 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772056522 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497061134 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.55704418 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524728712 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515715329 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514669364 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719101481 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774470799 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500399535 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50378927 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503571454 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.500153146 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511768484 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.711423501 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090220805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152724942 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501511846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516145785 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334954661 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799475021 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50000317 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497704649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500293769 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.511395827 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.507270266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.5060415 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505489855 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649940093 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832494225 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25438548 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536649406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.529766206 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.270928526 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512911538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.75786661 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499999269 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78940293 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226195704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356641915 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776718078 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572645305 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766798194 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.504478035 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665213967 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.505457356 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506407659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50322861 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502122191 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.498902315 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.51407973 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22114509 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774589255 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.508982344 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.505512958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536098741 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.516040214 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.727411792 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353005575 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.729572224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511400728 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509847846 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500107678 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220310189 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838743573 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510231313 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.506850858 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793247346 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508078143 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531898843 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.956501463 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.498789327 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168363325 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.480700172 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526047521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514991168 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366320649 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233985397 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.512168259 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11358783 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504779849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508594493 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784479372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.512966475 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515508798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787205201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.509950433 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504980597 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769670564 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.222353389 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.442290197 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.517640709 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529136616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.506826856 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505044818 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65251047 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510193404 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510920018 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.008762465 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.532168056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507600004 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518152178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.512324016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529089907 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.507925635 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510398719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.512070732 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.536534396 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.505259565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53050255 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508226293 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176696628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539806711 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.178434707 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836451067 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.76556236 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520521103 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.496266145 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.510199002 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507148847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506046575 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508443634 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.555664048 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169518898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.529175626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.52460925 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514372724 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.72622428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719651954 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508210916 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77815515 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527807679 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525312418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.496050891 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507225198 seconds)
  done (took 1046.249518883 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537310032 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.53399756 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.550911811 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.572197979 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.549155791 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.588458564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.52326509 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.562350201 seconds)
  done (took 21.825510334 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.505578852 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.520615966 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.529123701 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.522692543 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.514276899 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.065870636 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.543299068 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.514786216 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.522438072 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.516308038 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.525350537 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.496730207 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.520844499 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.510370902 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.517179513 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.522257467 seconds)
  done (took 35.264799066 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.018746109 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.82167475 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.480799403 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.543636088 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.566773625 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.520353372 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.965295244 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.54075118 seconds)
  done (took 29.866605204 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.520627972 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.521202795 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.522104221 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.522143061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.521990305 seconds)
  done (took 9.019364984 seconds)
done (took 1333.318539399 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.513881592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.516433458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.512849027 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.517333671 seconds)
  done (took 7.468774348 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.500934497 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.501419374 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.503409161 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.518695036 seconds)
  done (took 10.435001046 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.383785537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.282976137 seconds)
  done (took 6.077863848 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.042485549 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.02948696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.029206751 seconds)
  done (took 7.513167178 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.834481876 seconds)
  done (took 3.245325861 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.459046209 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.433231433 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.227486627 seconds)
  done (took 8.531210197 seconds)
done (took 44.680499711 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.51597759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.759598601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.666729735 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.516907874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671665346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664347552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.314277147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.509756161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510775471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510350706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.520645978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.672822304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.228710975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.764836429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.230329701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.76218408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672591433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.508176923 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.527516461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512914627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.316162462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.524247641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508191382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510643664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.695601707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.65665941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.51006779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.762250385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.509572017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512401686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.655687639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.513572196 seconds)
  done (took 87.128058434 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.524981375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508860513 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.531222466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.532226424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.533398542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.513403298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.547409101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.509985677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.533096426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.508482268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.534008516 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530695095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.511746911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.509811304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512498492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.51063756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510072683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511259851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.530957484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512728938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.530698803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.524602417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.52234538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529379099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.509814399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.512784481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.532799859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.513093454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.511785936 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.51266513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.515154993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.542296404 seconds)
  done (took 82.088301124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.510728175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.53377836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.530864387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.51525624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511376123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531047763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.513195576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512504617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.532076358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.517480142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.513836378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.512544998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.513972984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511636151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.514695125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.511713393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511932039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.542853264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.519054138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.513214371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.534579798 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.513253143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.526940713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.513117956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.517634111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526847918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.52073875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.51593363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.530321487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.521439575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.539392744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.516698626 seconds)
  done (took 82.0646486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.795950335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.523127603 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.521990924 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.515912193 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.523662929 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.523781731 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.515815257 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.794315983 seconds)
  done (took 16.128422561 seconds)
done (took 268.819104078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.519682869 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.53138823 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.746015374 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.545327642 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.515359139 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.547375358 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.542220492 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.779280825 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.543493929 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.808260511 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.541194714 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.565531592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.523138755 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.542434596 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.831636953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.68403023 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.531477172 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.519332436 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.926335762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.543487672 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.814247646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.513617611 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.827486531 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.534532283 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.524663914 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.520859217 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.540234474 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.5161546 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.570016212 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.913816585 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.543530002 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.513272236 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.618092413 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.640374694 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.763205974 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.698926258 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.515197621 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.642641869 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.76595523 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.521053147 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.518382642 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.376377735 seconds)
  done (took 90.096869888 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.525617868 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.643626384 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.523694493 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.5252571 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.524597416 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.644360243 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.620719231 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.525416215 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.52464709 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.524168446 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.524153457 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.52570188 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.525558777 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.526844682 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.524725268 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.525816451 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.526100968 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.528470529 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.528591793 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.573327662 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.647133756 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.553505828 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.521512325 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.52622002 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.629624171 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.667031768 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.525883078 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.520644364 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.570794483 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.528013218 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.529505603 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.571456232 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.528728785 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.526181428 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.643784197 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.627035627 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.551587199 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.525852271 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.642125381 seconds)
  done (took 62.147547917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.526848303 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.800357054 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.011211162 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.536792421 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.527917046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.533590435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623794612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.527668087 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.532517171 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.533791581 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.720489179 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.536691386 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.565312204 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.062803048 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.536848742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.529916532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.530894868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.530866283 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.817847736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543229272 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.651224232 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.53264598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.630148626 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.543111517 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.558582017 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.528214797 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.534849917 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.113609557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.536226655 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.721612101 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.514090065 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.629607427 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.067250418 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.045924911 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.514155518 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.535454471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.531247128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.727475486 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.53862708 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.531939774 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.629497022 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.536021761 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.040920395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.235653737 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.561191416 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.533491086 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.144301074 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.729788053 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.843358789 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.541858548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.07019941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.539546188 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.532558344 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.533775824 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.843250964 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.543541873 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.531584416 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.160138251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.562652488 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.630594859 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.536659143 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.532363587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.828893961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.537253903 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.814411512 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.537772996 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.542457924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.557614245 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.043080053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.541295175 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.249085887 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.557982257 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.53341713 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.720433555 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.81637787 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.190648568 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.541048132 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.824180993 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.075413314 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.631875143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.541637286 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.107467413 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.636649137 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.541986353 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.537140808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.53621667 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.53455114 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.581493699 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.629958964 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.242803607 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.256739159 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.196443213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.662268046 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.55271259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.534228537 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.164338013 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.560522846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.535495701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.04352334 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.253949092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.560775766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.54220945 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.260873929 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.562347671 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.635001761 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.544091655 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052094391 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.53989184 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.580930978 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.533913974 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.541579856 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.565090066 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.634701209 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.545995345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.537052156 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.228338696 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.76235228 seconds)
  done (took 202.575552576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.531214312 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.529433733 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.528149747 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.529306252 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.527452311 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.536562669 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.525997694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.528828388 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.534188335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.528655339 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.528989152 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.529185025 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.53034601 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.536652689 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.540791818 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.538367941 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.528176016 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.530735876 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.531463501 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.529307415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.527550942 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.557028964 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.529714241 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.530408836 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.530048873 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.530731824 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.539081954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.533450351 seconds)
  done (took 68.332463526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.54017983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.2583423 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.544914805 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.703991232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.570008987 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.538050766 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.704424202 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.616116801 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.53811315 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.537874126 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.537951962 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.926035852 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.542832509 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.202506794 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.784812858 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.701142067 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.197473998 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.565854038 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.537637469 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.538232911 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.705426046 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.564493077 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.902277349 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.212907958 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.5415258 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.217069042 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.534364723 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.54180526 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.538039912 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.219214621 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.537057293 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.906060634 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.636148151 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.620116045 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.220079529 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.199236062 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.201811303 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.729197325 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.54266219 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.541428965 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.539750854 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.536410632 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.220630242 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.542230503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.539767573 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.220592369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.565860601 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.544080394 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.550835852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.542051709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.614860611 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.619266466 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910504879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.303899957 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.636335531 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.558610584 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.709837361 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.954676903 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.548414867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.204954994 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.538263583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.26940259 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.569297645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.53270367 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.54154166 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.549331327 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.72471951 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.709241534 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.209228547 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.570033494 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.205244684 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.749255685 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.54114111 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.541775605 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.55156511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.273353024 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.209280666 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.75786031 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.710393663 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.791370699 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.539238412 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.543960573 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.538684243 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.642951507 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.540082593 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.231836939 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.228017013 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.570340001 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.548675063 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.544848199 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.547465523 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.770609635 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.250857278 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.645492469 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.196156682 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.933594143 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.912009099 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.545435974 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.619909161 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.567295326 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.988751284 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.54859436 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.617422989 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.023180052 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.920678334 seconds)
  done (took 186.053395681 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.831831548 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.588789652 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.653044128 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.722224677 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.217834248 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.202181578 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.542978209 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690745131 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.677489477 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.851567479 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.564342089 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.634994472 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.792301847 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.637961621 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.3530295 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.630510345 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.657757688 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.711155451 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.704418944 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.542673918 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267504743 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.89485842 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.771439854 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.570434169 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.669106485 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.456500206 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.204426646 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.123008746 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.760953894 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.548677107 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.139594035 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.552678345 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.545220997 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.311264982 seconds)
  done (took 71.461171911 seconds)
done (took 682.083310789 seconds)
SAVING RESULT...
DONE!
